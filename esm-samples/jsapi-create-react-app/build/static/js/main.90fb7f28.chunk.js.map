{"version":3,"sources":["../node_modules/@stencil/core/internal/client lazy /^/.//.*/.entry/.js.*$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","App.js","reportWebVitals.js","index.js"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","App","viewDiv","useRef","useEffect","current","map","WebScene","portalItem","SceneView","container","alphaCompositingEnabled","environment","background","type","color","lighting","date","starsEnabled","atmosphereEnabled","constraints","altitude","min","max","ui","components","padding","top","className","ref","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gJAAA,SAASA,EAAyBC,GAGjC,OAAOC,QAAQC,UAAUC,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBL,EAAM,KAEjD,MADAI,EAAEE,KAAO,mBACHF,KAGRL,EAAyBQ,KAAO,WAAa,MAAO,IACpDR,EAAyBG,QAAUH,EACnCS,EAAOC,QAAUV,EACjBA,EAAyBW,GAAK,K,0JCmDfC,MAxDf,WAEE,MAAMC,EAAUC,iBAAO,MAkDvB,OAhDAC,qBAAU,KACR,GAAIF,EAAQG,QAAS,CAInB,MAAMC,EAAM,IAAIC,IAAS,CACvBC,WAAY,CACVR,GAAI,sCAIK,IAAIS,IAAU,CACzBC,UAAWR,EAAQG,QACnBC,IAAKA,EACLK,yBAAyB,EACzBC,YAAa,CAEXC,WAAY,CACVC,KAAM,QACNC,MAAO,CAAC,IAAK,IAAK,IAAK,IAEzBC,SAAU,CACRC,KACE,+DAGJC,cAAc,EAEdC,mBAAmB,GAGrBC,YAAa,CACXC,SAAU,CACRC,IAAK,IACLC,IAAK,OAGTC,GAAI,CACFC,WAAY,CAAC,gBAEfC,QAAS,CACPC,IAAK,UAKV,IAEI,qBAAKC,UAAU,UAAUC,IAAK3B,KC/CxB4B,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,iCAAqBvC,MAAK,EAAGwC,SAAQC,SAAQC,SAAQC,SAAQC,cAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,mCACE,wDACA,8BACE,4CADF,qFAEmC,2CAFnC,mDAGgC,yCAHhC,iCAOF,cAAC,EAAD,OAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.90fb7f28.chunk.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 682;","import React, { useRef, useEffect } from \"react\";\nimport WebScene from \"@arcgis/core/WebScene\";\nimport SceneView from \"@arcgis/core/views/SceneView\";\nimport config from \"@arcgis/core/config\";\n\nimport \"./App.css\"; \n\nfunction App() {\n\n  const viewDiv = useRef(null);\n\n  useEffect(() => {\n    if (viewDiv.current) {\n      /**\n       * Initialize application\n       */\n      const map = new WebScene({\n        portalItem: {\n          id: \"9c90786e1a1d4102adf9d53655c2843d\"\n        }\n      });\n\n      const view = new SceneView({\n        container: viewDiv.current,\n        map: map,\n        alphaCompositingEnabled: true,\n        environment: {\n          // set a transparent background\n          background: {\n            type: \"color\",\n            color: [255, 252, 244, 0]\n          },\n          lighting: {\n            date:\n              \"Sun Jul 15 2018 08:00:00 GMT+0200 (W. Europe Daylight Time)\"\n          },\n          // disable stars\n          starsEnabled: false,\n          // disable atmosphere\n          atmosphereEnabled: false\n        },\n        // limit zooming in and out\n        constraints: {\n          altitude: {\n            min: 7000000,\n            max: 25000000\n          }\n        },\n        ui: {\n          components: [\"attribution\"]\n        },\n        padding: {\n          top: 100\n        }\n      });\n\n    }\n  }, []);\n\n  return <div className=\"viewDiv\" ref={viewDiv}></div>;\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <header>\n      <h2>World's biggest cities</h2>\n      <p>\n        <span>Shanghai</span> is the most populated city in the world with 24\n        million inhabitants, followed by <span>Beijing</span> with 21 million.\n        In third place is the city of <span>Delhi</span> with 16 million\n        people.\n      </p>\n    </header>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}