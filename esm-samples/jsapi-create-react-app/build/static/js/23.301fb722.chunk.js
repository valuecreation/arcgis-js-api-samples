(this["webpackJsonpjsapi-create-react-app"]=this["webpackJsonpjsapi-create-react-app"]||[]).push([[23],{722:function(e,t,i){"use strict";i.d(t,"a",(function(){return S}));var a=i(0),l=i(84),r=i(19),n=i(11),s=i(42),o=i(7),c=i(582),h=i(59),p=i(12),u=i(128),b=i(25),d=i(23),v=i(1),m=(i(8),i(45)),y=i(4),f=i(87),O=i(13);class j{constructor(){this.location={left:0,top:0,width:0,height:0},this._allAvailability="unknown",this.byteSize=40}getAvailability(e,t){if("unknown"!==this._allAvailability)return this._allAvailability;const i=(e-this.location.top)*this.location.width+(t-this.location.left),a=i%8,l=i>>3,r=this._tileAvailabilityBitSet;return l<0||l>r.length?"unknown":r[l]&1<<a?"available":"unavailable"}_updateFromData(e){const t=this.location.width,i=this.location.height;let a=!0,l=!0;const r=Math.ceil(t*i/8),n=new Uint8Array(r);let s=0;for(let o=0;o<e.length;o++){const t=o%8;e[o]?(l=!1,n[s]|=1<<t):a=!1,7===t&&++s}l?this._allAvailability="unavailable":a?this._allAvailability="available":(this._allAvailability="unknown",this._tileAvailabilityBitSet=n,this.byteSize+=n.length)}static fromDefinition(e,t){const i=e.service.request||l.default,{row:a,col:r,width:s,height:o}=e,c={query:{f:"json"}};return t=t?{...c,...t}:c,i(function(e){let t;if("vector-tile"===e.service.type)t=`${e.service.url}/tilemap/${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`;else{const i=e.service.tileServers;t=`${i&&i.length?i[e.row%i.length]:e.service.url}/tilemap/${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`}const i=e.service.query;return i&&(t=`${t}?${i}`),t}(e),t).then((e=>e.data)).catch((e=>{if(e&&e.details&&422===e.details.httpStatus)return{location:{top:a,left:r,width:s,height:o},valid:!0,data:Object(f.c)(s*o,0)};throw e})).then((e=>{if(e.location&&(e.location.top!==a||e.location.left!==r||e.location.width!==s||e.location.height!==o))throw new n.a("tilemap:location-mismatch","Tilemap response for different location than requested",{response:e,definition:{top:a,left:r,width:s,height:o}});return j.fromJSON(e)}))}static fromJSON(e){j.validateJSON(e);const t=new j;return t.location=Object.freeze(Object(O.a)(e.location)),t._updateFromData(e.data),Object.freeze(t)}static validateJSON(e){if(!e||!e.location)throw new n.a("tilemap:missing-location","Location missing from tilemap response");if(!1===e.valid)throw new n.a("tilemap:invalid","Tilemap response was marked as invalid");if(!e.data)throw new n.a("tilemap:missing-data","Data missing from tilemap response");if(!Array.isArray(e.data))throw new n.a("tilemap:data-mismatch","Data must be an array of numbers");if(e.data.length!==e.location.width*e.location.height)throw new n.a("tilemap:data-mismatch","Number of data items does not match width/height of tilemap")}}function g(e){return`${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`}var w;const _=o.a.getLogger("esri.layers.support.TilemapCache");let S=w=class extends r.a{constructor(e){super(e),this._handles=new s.a,this._pendingTilemapRequests={},this._availableLevels={},this.levels=5,this.cacheByteSize=2097152,this.request=l.default,this._prefetchingEnabled=!0}initialize(){this._tilemapCache=new c.a(this.cacheByteSize),this._handles.add([this.watch(["layer.parsedUrl","layer.tileServers?"],(()=>this._initializeTilemapDefinition())),Object(d.a)(this,"layer.tileInfo.lods",(e=>this._initializeAvailableLevels(e)),!0)]),this._initializeTilemapDefinition()}destroy(){this._handles&&(this._handles.destroy(),this._handles=null)}castLevels(e){return e<=2?(_.error("Minimum levels for Tilemap is 3, but got ",e),3):e}get size(){return 1<<this.levels}fetchTilemap(e,t,i,a){if(!this._availableLevels[e])return Promise.reject(new n.a("tilemap-cache:level-unavailable",`Level ${e} is unavailable in the service`));const l=this._tmpTilemapDefinition,r=this._tilemapFromCache(e,t,i,l);if(r)return Promise.resolve(r);const s=a&&a.signal;return a={...a,signal:null},new Promise(((e,t)=>{Object(p.s)(s,(()=>t(Object(p.f)())));const i=g(l);let r=this._pendingTilemapRequests[i];if(!r){r=j.fromDefinition(l,a).then((e=>(this._tilemapCache.put(i,e,e.byteSize),e)));const e=()=>delete this._pendingTilemapRequests[i];this._pendingTilemapRequests[i]=r,r.then(e,e)}r.then(e,t)}))}getAvailability(e,t,i){if(!this._availableLevels[e])return"unavailable";const a=this._tilemapFromCache(e,t,i,this._tmpTilemapDefinition);return a?a.getAvailability(t,i):"unknown"}getAvailabilityUpsample(e,t,i,a){a.level=e,a.row=t,a.col=i;const l=this.layer.tileInfo;for(l.updateTileInfo(a);;){const e=this.getAvailability(a.level,a.row,a.col);if("unavailable"!==e)return e;if(!l.upsampleTile(a))return"unavailable"}}fetchAvailability(e,t,i,a){return this._availableLevels[e]?this.fetchTilemap(e,t,i,a).catch((e=>e)).then((a=>{if(a instanceof j){const l=a.getAvailability(t,i);return"unavailable"===l?Promise.reject(new n.a("tile-map:tile-unavailable","Tile is not available",{level:e,row:t,col:i})):l}if(Object(p.n)(a))throw a;return"unknown"})):Promise.reject(new n.a("tilemap-cache:level-unavailable",`Level ${e} is unavailable in the service`))}fetchAvailabilityUpsample(e,t,i,a,l){a.level=e,a.row=t,a.col=i;const r=this.layer.tileInfo;r.updateTileInfo(a);const n=this.fetchAvailability(e,t,i,l).catch((e=>{if(Object(p.n)(e))throw e;if(r.upsampleTile(a))return this.fetchAvailabilityUpsample(a.level,a.row,a.col,a);throw e}));return this._fetchAvailabilityUpsamplePrefetch(a.id,e,t,i,l,n),n}async _fetchAvailabilityUpsamplePrefetch(e,t,i,a,l,r){if(!this._prefetchingEnabled)return;const n=`prefetch-${e}`;if(this._handles.has(n))return;const s=Object(p.e)();r.then((()=>s.abort()),(()=>s.abort()));let o=!1;const c={remove(){o||(o=!0,s.abort())}};if(this._handles.add(c,n),await Object(u.d)(10,s.signal).catch((()=>{})),o||(o=!0,this._handles.remove(n)),Object(p.o)(s))return;const h={id:e,level:t,row:i,col:a},b={...l,signal:s.signal},d=this.layer.tileInfo;for(let p=0;w._prefetches.length<w._maxPrefetch&&d.upsampleTile(h);++p){const e=this.fetchAvailability(h.level,h.row,h.col,b);w._prefetches.push(e);const t=()=>{w._prefetches.removeUnordered(e)};e.then(t,t)}}_initializeTilemapDefinition(){if(!this.layer.parsedUrl)return;const e=this.layer.parsedUrl,t=e.query;this._tilemapCache.clear(),this._tmpTilemapDefinition={service:{url:e.path,query:t?Object(b.E)(t):null,tileServers:this.layer.tileServers,request:this.request,type:this.layer.type},width:this.size,height:this.size,level:0,row:0,col:0}}_tilemapFromCache(e,t,i,a){a.level=e,a.row=t-t%this.size,a.col=i-i%this.size;const l=g(a);return this._tilemapCache.get(l)}_initializeAvailableLevels(e){this._availableLevels={},e&&e.forEach((e=>this._availableLevels[e.level]=!0))}get test(){const e=this;return{get prefetchingEnabled(){return e._prefetchingEnabled},set prefetchingEnabled(t){e._prefetchingEnabled=t},hasTilemap:(t,i,a)=>!!e._tilemapFromCache(t,i,a,e._tmpTilemapDefinition)}}};S._maxPrefetch=4,S._prefetches=new h.a({initialSize:w._maxPrefetch}),Object(a.a)([Object(v.b)({constructOnly:!0,type:Number})],S.prototype,"levels",void 0),Object(a.a)([Object(m.a)("levels")],S.prototype,"castLevels",null),Object(a.a)([Object(v.b)({readOnly:!0,type:Number})],S.prototype,"size",null),Object(a.a)([Object(v.b)({constructOnly:!0,type:Number})],S.prototype,"cacheByteSize",void 0),Object(a.a)([Object(v.b)({constructOnly:!0})],S.prototype,"layer",void 0),Object(a.a)([Object(v.b)({constructOnly:!0})],S.prototype,"request",void 0),S=w=Object(a.a)([Object(y.a)("esri.layers.support.TilemapCache")],S)},747:function(e,t,i){"use strict";i.d(t,"a",(function(){return r})),i.d(t,"b",(function(){return l}));var a=i(410);const l={type:a.a,json:{origins:{service:{read:{source:["tileInfo","minScale","maxScale","minLOD","maxLOD"],reader:r}}}}};function r(e,t,i,l){if(!e)return null;const{minScale:r,maxScale:n,minLOD:s,maxLOD:o}=t;if(null!=s&&null!=o)return l&&l.ignoreMinMaxLOD?a.a.fromJSON(e):a.a.fromJSON({...e,lods:e.lods.filter((({level:e})=>null!=e&&e>=s&&e<=o))});if(0!==r&&0!==n){const t=e=>Math.round(1e4*e)/1e4,i=r?t(r):1/0,l=n?t(n):-1/0;return a.a.fromJSON({...e,lods:e.lods.filter((e=>{const a=t(e.scale);return a<=i&&a>=l}))})}return a.a.fromJSON(e)}},791:function(e,t,i){"use strict";i.d(t,"a",(function(){return h}));var a=i(0),l=(i(113),i(1)),r=(i(8),i(9),i(7),i(32)),n=i(4),s=i(747),o=i(722),c=i(39);const h=e=>{let t=class extends e{constructor(){super(...arguments),this.copyright=null,this.minScale=0,this.maxScale=0,this.spatialReference=null,this.tileInfo=null,this.tilemapCache=null}readMinScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}readMaxScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}get supportsBlankTile(){return this.version>=10.2}readTilemapCache(e,t){return t.capabilities&&t.capabilities.indexOf("Tilemap")>-1?new o.a({layer:this}):null}};return Object(a.a)([Object(l.b)({json:{read:{source:"copyrightText"}}})],t.prototype,"copyright",void 0),Object(a.a)([Object(l.b)()],t.prototype,"minScale",void 0),Object(a.a)([Object(r.a)("service","minScale")],t.prototype,"readMinScale",null),Object(a.a)([Object(l.b)()],t.prototype,"maxScale",void 0),Object(a.a)([Object(r.a)("service","maxScale")],t.prototype,"readMaxScale",null),Object(a.a)([Object(l.b)({type:c.a})],t.prototype,"spatialReference",void 0),Object(a.a)([Object(l.b)({readOnly:!0})],t.prototype,"supportsBlankTile",null),Object(a.a)([Object(l.b)(s.b)],t.prototype,"tileInfo",void 0),Object(a.a)([Object(l.b)()],t.prototype,"tilemapCache",void 0),Object(a.a)([Object(r.a)("service","tilemapCache",["capabilities"])],t.prototype,"readTilemapCache",null),Object(a.a)([Object(l.b)()],t.prototype,"version",void 0),t=Object(a.a)([Object(n.a)("esri.layers.mixins.ArcGISCachedService")],t),t}},822:function(e,t,i){"use strict";i.r(t);var a=i(0),l=i(84),r=i(11),n=i(7),s=i(2),o=i(408),c=i(12),h=i(25),p=i(1),u=(i(8),i(9),i(32)),b=i(4),d=i(222),v=i(303),m=i(791),y=i(573),f=i(442),O=i(563),j=i(177),g=i(649);const w=n.a.getLogger("esri.layers.ElevationLayer");let _=class extends(Object(m.a)(Object(y.a)(Object(f.a)(Object(O.a)(Object(o.a)(v.a)))))){constructor(...e){super(...e),this.copyright=null,this.heightModelInfo=null,this.path=null,this.opacity=1,this.operationalLayerType="ArcGISTiledElevationServiceLayer",this.sourceJSON=null,this.type="elevation",this.url=null,this.version=null,this._lercDecoder=Object(g.a)()}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}destroy(){this._lercDecoder=Object(s.q)(this._lercDecoder)}set minScale(e){this.constructed&&w.warn(`${this.declaredClass}.minScale support has been removed (since 4.5)`)}get minScale(){}set maxScale(e){this.constructed&&w.warn(`${this.declaredClass}.maxScale support has been removed (since 4.5)`)}get maxScale(){}readVersion(e,t){let i=t.currentVersion;return i||(i=9.3),i}load(e){const t=Object(s.j)(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"],supportsData:!1,validateItem:e=>{for(let t=0;t<e.typeKeywords.length;t++)if("elevation 3d layer"===e.typeKeywords[t].toLowerCase())return!0;throw new r.a("portal:invalid-layer-item-type","Invalid layer item type '${type}', expected '${expectedType}' ",{type:"Image Service",expectedType:"Image Service Elevation 3D Layer"})}},e).catch(c.w).then((()=>this._fetchImageService(t)))),Promise.resolve(this)}fetchTile(e,t,i,a){const r=Object(s.j)((a=a||{signal:null}).signal)?a.signal:a.signal=Object(c.e)().signal,n={responseType:"array-buffer",signal:r},o={noDataValue:a.noDataValue,returnFileInfo:!0};return this.load().then((()=>this._fetchTileAvailability(e,t,i,a))).then((()=>Object(l.default)(this.getTileUrl(e,t,i),n))).then((e=>this._lercDecoder.decode(e.data,o,r))).then((e=>({values:e.pixelData,width:e.width,height:e.height,maxZError:e.fileInfo.maxZError,noDataValue:e.noDataValue,minValue:e.minValue,maxValue:e.maxValue})))}getTileUrl(e,t,i){const a=!this.tilemapCache&&this.supportsBlankTile,l=Object(h.E)({...this.parsedUrl.query,blankTile:!a&&null});return`${this.parsedUrl.path}/tile/${e}/${t}/${i}${l?"?"+l:""}`}async queryElevation(e,t){const{ElevationQuery:a}=await i.e(8).then(i.bind(null,967));return Object(c.x)(t),(new a).query(this,e,t)}async createElevationSampler(e,t){const{ElevationQuery:a}=await i.e(8).then(i.bind(null,967));return Object(c.x)(t),(new a).createSampler(this,e,t)}_fetchTileAvailability(e,t,i,a){return this.tilemapCache?this.tilemapCache.fetchAvailability(e,t,i,a):Promise.resolve("unknown")}async _fetchImageService(e){if(this.sourceJSON)return this.sourceJSON;const t={query:{f:"json",...this.parsedUrl.query},responseType:"json",signal:e},i=await Object(l.default)(this.parsedUrl.path,t);i.ssl&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=i.data,this.read(i.data,{origin:"service",url:this.parsedUrl})}get hasOverriddenFetchTile(){return!this.fetchTile.__isDefault__}};Object(a.a)([Object(p.b)({json:{read:{source:"copyrightText"}}})],_.prototype,"copyright",void 0),Object(a.a)([Object(p.b)({readOnly:!0,type:d.a})],_.prototype,"heightModelInfo",void 0),Object(a.a)([Object(p.b)({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],_.prototype,"path",void 0),Object(a.a)([Object(p.b)({type:["show","hide"]})],_.prototype,"listMode",void 0),Object(a.a)([Object(p.b)({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}}})],_.prototype,"minScale",null),Object(a.a)([Object(p.b)({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}}})],_.prototype,"maxScale",null),Object(a.a)([Object(p.b)({json:{read:!1,write:!1,origins:{"web-document":{read:!1,write:!1}}}})],_.prototype,"opacity",void 0),Object(a.a)([Object(p.b)({type:["ArcGISTiledElevationServiceLayer"]})],_.prototype,"operationalLayerType",void 0),Object(a.a)([Object(p.b)()],_.prototype,"sourceJSON",void 0),Object(a.a)([Object(p.b)({json:{read:!1},value:"elevation",readOnly:!0})],_.prototype,"type",void 0),Object(a.a)([Object(p.b)(j.n)],_.prototype,"url",void 0),Object(a.a)([Object(p.b)()],_.prototype,"version",void 0),Object(a.a)([Object(u.a)("version",["currentVersion"])],_.prototype,"readVersion",null),_=Object(a.a)([Object(b.a)("esri.layers.ElevationLayer")],_),_.prototype.fetchTile.__isDefault__=!0;var S=_;t.default=S}}]);
//# sourceMappingURL=23.301fb722.chunk.js.map