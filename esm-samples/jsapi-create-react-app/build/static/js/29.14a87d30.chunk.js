(this["webpackJsonpjsapi-create-react-app"]=this["webpackJsonpjsapi-create-react-app"]||[]).push([[29],{1145:function(e,t,s){"use strict";s.r(t),s.d(t,"I3STreeDebugger",(function(){return u}));var i=s(0),l=(s(113),s(2)),a=s(1),o=(s(8),s(9),s(7),s(4)),r=s(16),c=s(20),n=s(3),b=s(5),h=s(36),p=s(801),j=s(144);let u=class extends p.a{constructor(e){super(e)}getTiles(){const e=this.lv.getVisibleNodes(),t=this.view.renderSpatialReference,s=this.nodeSR;return e.map((e=>function(e,t,s){const i=e.serviceObb;if(Object(l.i)(i)||Object(l.i)(t))return null;Object(r.w)(O,i.quaternion),Object(n.m)(y,i.center),Object(h.q)(y,s,0,y,t,0,1),O[12]=y[0],O[13]=y[1],O[14]=y[2];const a=[[],[],[]];Object(n.m)(y,i.halfSize),Object(n.s)(y,y,O),Object(h.q)(y,t,0,y,s,0,1),a[0].push([y[0],y[1]]),Object(n.m)(y,i.halfSize),y[0]=-y[0],Object(n.s)(y,y,O),Object(h.q)(y,t,0,y,s,0,1),a[0].push([y[0],y[1]]),Object(n.m)(y,i.halfSize),y[0]=-y[0],y[1]=-y[1],Object(n.s)(y,y,O),Object(h.q)(y,t,0,y,s,0,1),a[0].push([y[0],y[1]]),Object(n.m)(y,i.halfSize),y[1]=-y[1],Object(n.s)(y,y,O),Object(h.q)(y,t,0,y,s,0,1),a[0].push([y[0],y[1]]),a[1].push(a[0][0]),a[1].push(a[0][1]),Object(n.m)(y,i.halfSize),y[0]=-y[0],y[2]=-y[2],Object(n.s)(y,y,O),Object(h.q)(y,t,0,y,s,0,1),a[1].push([y[0],y[1]]),Object(n.m)(y,i.halfSize),y[2]=-y[2],Object(n.s)(y,y,O),Object(h.q)(y,t,0,y,s,0,1),a[1].push([y[0],y[1]]),a[2].push(a[0][0]),a[2].push(a[0][3]),Object(n.m)(y,i.halfSize),y[1]=-y[1],y[2]=-y[2],Object(n.s)(y,y,O),Object(h.q)(y,t,0,y,s,0,1),a[2].push([y[0],y[1]]),a[2].push(a[1][3]);const o=new j.a({rings:a,spatialReference:s});return{lij:[e.level,e.childCount,0],label:e.id,geometry:o}}(e,t,s))).sort(((e,t)=>e.lij[0]===t.lij[0]?e.label>t.label?-1:1:e.lij[0]-t.lij[0]))}};Object(i.a)([Object(a.b)({constructOnly:!0})],u.prototype,"lv",void 0),Object(i.a)([Object(a.b)({constructOnly:!0})],u.prototype,"nodeSR",void 0),u=Object(i.a)([Object(o.a)("esri.views.3d.layers.support.I3STreeDebugger")],u);const O=Object(c.d)(),y=Object(b.e)()},801:function(e,t,s){"use strict";s.d(t,"a",(function(){return y}));var i=s(0),l=s(35),a=s(124),o=s(19),r=s(10),c=s(2),n=s(1),b=(s(8),s(9),s(7),s(4)),h=s(207),p=s(211),j=s(247),u=s(208);const O=[[0,179,255],[117,62,128],[0,104,255],[215,189,166],[32,0,193],[98,162,206],[102,112,129],[52,125,0],[142,118,246],[138,83,0],[92,122,255],[122,55,83],[0,142,255],[81,40,179],[0,200,244],[13,24,127],[0,170,147],[19,58,241],[22,44,35]];let y=class extends o.a{constructor(e){super(e),this.updating=!1,this.enablePolygons=!0,this.enableLabels=!0,this._polygons=new Map,this._labels=new Map,this._enabled=!0}initialize(){this._symbols=O.map((e=>new p.a({color:[e[0],e[1],e[2],.6],outline:{color:"black",width:1}}))),this.update()}destroy(){this._enabled=!1,this.clear()}get enabled(){return this._enabled}set enabled(e){this._enabled!==e&&(this._enabled=e,this.update())}update(){if(!this._enabled)return void this.clear();const e=this.getTiles(),t=new Array,s=new Set((this._labels.size,this._labels.keys()));e.forEach(((i,o)=>{const n=i.lij.toString();s.delete(n);const b=i.lij[0],p=i.geometry;if(this.enablePolygons&&!this._polygons.has(n)){const e=new a.a({geometry:p,symbol:this._symbols[b%this._symbols.length]});this._polygons.set(n,e),t.push(e)}if(this.enableLabels){const s=(e=>{if(Object(c.j)(e.label))return e.label;let t=e.lij.toString();return Object(c.j)(e.loadPriority)&&(t+=` (${e.loadPriority})`),t})(i),b=o/(e.length-1),O=Object(r.m)(0,200,b),y=Object(r.m)(20,6,b)/.75,d=Object(c.j)(i.loadPriority)&&i.loadPriority>=e.length,g=new l.a([O,d?0:O,d?0:O]),m="3d"===this.view.type?()=>new h.a({verticalOffset:{screenLength:40/.75},callout:{type:"line",color:"white",border:{color:"black"}},symbolLayers:[new u.a({text:s,halo:{color:"white",size:1/.75},material:{color:g},size:y})]}):()=>new j.a({text:s,haloColor:"white",haloSize:1/.75,color:g,size:y});if(this._labels.has(n)){const e=this._labels.get(n),t=m();(Object(c.i)(e.symbol)||JSON.stringify(t)!==JSON.stringify(e.symbol))&&(e.symbol=t)}else{const e=new a.a({geometry:p.extent.center,symbol:m()});this._labels.set(n,e),t.push(e)}}}));const i=new Array;s.forEach((e=>{this._polygons.has(e)&&(i.push(this._polygons.get(e)),this._polygons.delete(e)),this._labels.has(e)&&(i.push(this._labels.get(e)),this._labels.delete(e))})),this.view.graphics.removeMany(i),this.view.graphics.addMany(t)}clear(){this.view.graphics.removeMany(Array.from(this._polygons.values())),this.view.graphics.removeMany(Array.from(this._labels.values())),this._polygons.clear(),this._labels.clear()}};Object(i.a)([Object(n.b)({constructOnly:!0})],y.prototype,"view",void 0),Object(i.a)([Object(n.b)({readOnly:!0})],y.prototype,"updating",void 0),Object(i.a)([Object(n.b)()],y.prototype,"enabled",null),y=Object(i.a)([Object(b.a)("esri.views.support.TileTreeDebugger")],y)}}]);
//# sourceMappingURL=29.14a87d30.chunk.js.map