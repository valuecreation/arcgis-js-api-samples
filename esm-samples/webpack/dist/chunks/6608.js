"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[6608],{85720:(e,t,r)=>{r.d(t,{yZ:()=>s});var i=r(89462);function s(e,t){const r=t||e.extent,s=e.width,a=(0,i.c9)(r&&r.spatialReference);return r&&s?r.width/s*a*i.hd*96:0}},76608:(e,t,r)=>{r.r(t),r.d(t,{default:()=>Z});var i=r(23324),s=r(57603),a=r(82931),o=r(76877),n=r(47811),l=r(74846),p=r(43388),u=r(88200),h=r(19955),c=r(74791),y=(r(32780),r(76997)),d=(r(20337),r(56568)),m=r(72903),g=r(81018),b=r(26598),v=r(3982),f=r(85720),x=r(23481),w=r(95399),S=r(80120),_=r(19149),C=r(62697),O=r(21394),M=r(5677),I=r(67843),R=r(97027),N=r(42673),j=r(91498),E=r(44877),J=r(23867),L=r(75756),q=r(16539),F=r(22874);let P=class extends((0,C.h)((0,E.n)((0,N.M)((0,R.Q)((0,j.x)((0,S.O)((0,_.Y)((0,M.q)((0,I.I)((0,u.R)((0,w.V)((0,O.N)((0,n.p)(x.Z)))))))))))))){constructor(...e){super(...e),this.alwaysRefetch=!1,this.dpi=96,this.gdbVersion=null,this.imageFormat="png24",this.imageMaxHeight=2048,this.imageMaxWidth=2048,this.imageTransparency=!0,this.isReference=null,this.labelsVisible=!1,this.operationalLayerType="ArcGISMapServiceLayer",this.sourceJSON=null,this.sublayers=null,this.type="map-image",this.url=null}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){const t=(0,p.pC)(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},e).catch(h.r9).then((()=>this._fetchService(t)))),Promise.resolve(this)}readImageFormat(e,t){const r=t.supportedImageFormatTypes;return r&&r.indexOf("PNG32")>-1?"png32":"png24"}writeSublayers(e,t,r,i){if(!this.loaded||!e)return;const s=e.slice().reverse().flatten((({sublayers:e})=>e&&e.toArray().reverse())).toArray();let a=!1;if(this.capabilities&&this.capabilities.operations.supportsExportMap&&this.capabilities.exportMap.supportsDynamicLayers){const e=(0,b.M9)(i.origin);if(3===e){const e=this.createSublayersForOrigin("service").sublayers;a=(0,F.QV)(s,e,2)}else if(e>3){const e=this.createSublayersForOrigin("portal-item");a=(0,F.QV)(s,e.sublayers,(0,b.M9)(e.origin))}}const o=[],n={writeSublayerStructure:a,...i};let l=a;s.forEach((e=>{const t=e.write({},n);o.push(t),l=l||"user"===e.originOf("visible")})),o.some((e=>Object.keys(e).length>1))&&(t.layers=o),l&&(t.visibleLayers=s.filter((e=>e.visible)).map((e=>e.id)))}createExportImageParameters(e,t,r,i){const s=i&&i.pixelRatio||1;e&&this.version>=10&&(e=e.clone().shiftCentralMeridian());const a=new L.R({layer:this,scale:(0,f.yZ)({extent:e,width:t})*s}),o=a.toJSON();a.destroy();const n=!i||!i.rotation||this.version<10.3?{}:{rotation:-i.rotation},l=e&&e.spatialReference,p=l.wkid||JSON.stringify(l.toJSON());o.dpi*=s;const u={};if(null!=i&&i.timeExtent){const{start:e,end:t}=i.timeExtent.toJSON();u.time=e&&t&&e===t?""+e:`${null==e?"null":e},${null==t?"null":t}`}else this.timeInfo&&!this.timeInfo.hasLiveData&&(u.time="null,null");return{bbox:e&&e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:p,imageSR:p,size:t+","+r,...o,...n,...u}}async fetchImage(e,t,r,i){var a,n;const l={responseType:"image",signal:null!=(a=null==i?void 0:i.signal)?a:null,query:{...this.parsedUrl.query,...this.createExportImageParameters(e,t,r,i),f:"image",_ts:this.alwaysRefetch?Date.now():null!=(n=null==i?void 0:i.timestamp)?n:null,...this.customParameters,token:this.apiKey}},p=this.parsedUrl.path+"/export";return null==l.query.dynamicLayers||this.capabilities.exportMap.supportsDynamicLayers?(0,s.default)(p,l).then((e=>e.data)).catch((e=>{if((0,h.D_)(e))throw e;throw new o.Z("mapimagelayer:image-fetch-error",`Unable to load image: ${p}`,{error:e})})):Promise.reject(new o.Z("mapimagelayer:dynamiclayer-not-supported",`service ${this.url} doesn't support dynamic layers, which is required to be able to change the sublayer's order, rendering, labeling or source.`,{query:l.query}))}async fetchRecomputedExtents(e={}){const t={...e,query:{returnUpdates:!0,f:"json"}},{data:r}=await(0,s.default)(this.url,t),{extent:i,fullExtent:o,timeExtent:n}=r,l=i||o;return{fullExtent:l&&v.Z.fromJSON(l),timeExtent:n&&a.Z.fromJSON({start:n[0],end:n[1]})}}loadAll(){return(0,l.GZ)(this,(e=>{e(this.allSublayers)}))}async _fetchService(e){if(this.sourceJSON)return void this.read(this.sourceJSON,{origin:"service",url:this.parsedUrl});const{data:t,ssl:r}=await(0,s.default)(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters,token:this.apiKey},signal:e});r&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=t,this.read(t,{origin:"service",url:this.parsedUrl})}};(0,i._)([(0,c.Cb)()],P.prototype,"alwaysRefetch",void 0),(0,i._)([(0,c.Cb)()],P.prototype,"dpi",void 0),(0,i._)([(0,c.Cb)()],P.prototype,"gdbVersion",void 0),(0,i._)([(0,c.Cb)()],P.prototype,"imageFormat",void 0),(0,i._)([(0,d.r)("imageFormat",["supportedImageFormatTypes"])],P.prototype,"readImageFormat",null),(0,i._)([(0,c.Cb)({json:{origins:{service:{read:{source:"maxImageHeight"}}}}})],P.prototype,"imageMaxHeight",void 0),(0,i._)([(0,c.Cb)({json:{origins:{service:{read:{source:"maxImageWidth"}}}}})],P.prototype,"imageMaxWidth",void 0),(0,i._)([(0,c.Cb)()],P.prototype,"imageTransparency",void 0),(0,i._)([(0,c.Cb)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],P.prototype,"isReference",void 0),(0,i._)([(0,c.Cb)({json:{read:!1,write:!1}})],P.prototype,"labelsVisible",void 0),(0,i._)([(0,c.Cb)({type:["ArcGISMapServiceLayer"]})],P.prototype,"operationalLayerType",void 0),(0,i._)([(0,c.Cb)({json:{read:!1,write:!1}})],P.prototype,"popupEnabled",void 0),(0,i._)([(0,c.Cb)()],P.prototype,"sourceJSON",void 0),(0,i._)([(0,c.Cb)({json:{write:{ignoreOrigin:!0}}})],P.prototype,"sublayers",void 0),(0,i._)([(0,g.c)("sublayers",{layers:{type:[q.Z]},visibleLayers:{type:[y.z8]}})],P.prototype,"writeSublayers",null),(0,i._)([(0,c.Cb)({type:["show","hide","hide-children"]})],P.prototype,"listMode",void 0),(0,i._)([(0,c.Cb)({json:{read:!1},readOnly:!0,value:"map-image"})],P.prototype,"type",void 0),(0,i._)([(0,c.Cb)(J.HQ)],P.prototype,"url",void 0),P=(0,i._)([(0,m.j)("esri.layers.MapImageLayer")],P);const Z=P}}]);