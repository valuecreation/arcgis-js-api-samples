"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[191],{40191:(e,t,r)=>{r.r(t),r.d(t,{default:()=>A});var o=r(23324),i=(r(15572),r(13470)),l=(r(63662),r(72690)),a=r(76877),n=r(7175),s=r(43388),y=r(88200),p=r(11589),u=r(62229),d=r(74791),c=(r(76997),r(32780),r(20337),r(56568)),m=r(72903),f=r(81018),b=r(87320),h=r(10118),g=r(54522),S=r(15356),v=r(23481),C=r(62697),w=r(42673),O=r(68670),_=r(311);let N=class extends((0,C.h)((0,w.M)(v.Z))){constructor(e){super(e),this.elevationInfo=null,this.graphics=new O.ZP,this.screenSizePerspectiveEnabled=!0,this.type="graphics",this.internal=!1}destroy(){this.removeAll(),this.graphics.destroy()}add(e){return this.graphics.add(e),this}addMany(e){return this.graphics.addMany(e),this}removeAll(){return this.graphics.removeAll(),this}remove(e){this.graphics.remove(e)}removeMany(e){this.graphics.removeMany(e)}on(e,t){return super.on(e,t)}graphicChanged(e){this.emit("graphic-update",e)}};(0,o._)([(0,d.Cb)({type:_.Z})],N.prototype,"elevationInfo",void 0),(0,o._)([(0,d.Cb)((0,O.$o)())],N.prototype,"graphics",void 0),(0,o._)([(0,d.Cb)({type:["show","hide"]})],N.prototype,"listMode",void 0),(0,o._)([(0,d.Cb)()],N.prototype,"screenSizePerspectiveEnabled",void 0),(0,o._)([(0,d.Cb)({readOnly:!0})],N.prototype,"type",void 0),(0,o._)([(0,d.Cb)({constructOnly:!0})],N.prototype,"internal",void 0),N=(0,o._)([(0,m.j)("esri.layers.GraphicsLayer")],N);const J=N;var L=r(22580),M=r(5677),T=r(67843),x=r(73132),Z=r(60817),I=r(64668),R=r(51074),j=r(76337),E=r(49030),D=r(3982);function P(e){return e.layers.some((e=>null!=e.layerDefinition.visibilityField))}const G=new x.Z({name:"OBJECTID",alias:"OBJECTID",type:"oid",nullable:!1,editable:!1}),F=new x.Z({name:"title",alias:"Title",type:"string",nullable:!0,editable:!0});let W=class extends J{constructor(){super(...arguments),this.visibilityMode="inherited"}initialize(){for(const e of this.graphics)e.sourceLayer=this.layer;this.graphics.on("after-add",(e=>{e.item.sourceLayer=this.layer})),this.graphics.on("after-remove",(e=>{e.item.sourceLayer=null}))}get sublayers(){return this.graphics}};(0,o._)([(0,d.Cb)({readOnly:!0})],W.prototype,"sublayers",null),(0,o._)([(0,d.Cb)()],W.prototype,"layer",void 0),(0,o._)([(0,d.Cb)({readOnly:!0})],W.prototype,"visibilityMode",void 0),W=(0,o._)([(0,m.j)("esri.layers.MapNotesLayer.MapNotesSublayer")],W);const k=[{geometryType:"polygon",geometryTypeJSON:"esriGeometryPolygon",layerId:"polygonLayer",title:"Polygons",identifyingSymbol:(new Z.Z).toJSON()},{geometryType:"polyline",geometryTypeJSON:"esriGeometryPolyline",layerId:"polylineLayer",title:"Polylines",identifyingSymbol:(new I.Z).toJSON()},{geometryType:"multipoint",geometryTypeJSON:"esriGeometryMultipoint",layerId:"multipointLayer",title:"Multipoints",identifyingSymbol:(new R.Z).toJSON()},{geometryType:"point",geometryTypeJSON:"esriGeometryPoint",layerId:"pointLayer",title:"Points",identifyingSymbol:(new R.Z).toJSON()},{geometryType:"point",geometryTypeJSON:"esriGeometryPoint",layerId:"textLayer",title:"Text",identifyingSymbol:(new j.Z).toJSON()}];let z=class extends((0,C.h)((0,w.M)((0,M.q)((0,T.I)((0,y.R)(v.Z)))))){constructor(e){super(e),this.capabilities={operations:{supportsMapNotesEditing:!0}},this.featureCollections=null,this.featureCollectionJSON=null,this.featureCollectionType="notes",this.legendEnabled=!1,this.minScale=0,this.maxScale=0,this.spatialReference=E.Z.WGS84,this.sublayers=new l.Z(k.map((e=>new W({id:e.layerId,title:e.title,layer:this})))),this.title="Map Notes",this.type="map-notes",this.visibilityMode="inherited"}readCapabilities(e,t,r){return{operations:{supportsMapNotesEditing:!P(t)&&"portal-item"!==(null==r?void 0:r.origin)}}}readFeatureCollections(e,t,r){if(!P(t))return null;const o=t.layers.map((e=>{const t=new S.default;return t.read(e,r),t}));return new l.Z({items:o})}readLegacyfeatureCollectionJSON(e,t){return P(t)?(0,n.d9)(t.featureCollection):null}readFullExtent(e,t){if(!t.layers.length)return new D.Z({xmin:-180,ymin:-90,xmax:180,ymax:90,spatialReference:E.Z.WGS84});const r=E.Z.fromJSON(t.layers[0].layerDefinition.spatialReference);return t.layers.reduce(((e,t)=>{const r=t.layerDefinition.extent;return r?D.Z.fromJSON(r).union(e):e}),new D.Z({spatialReference:r}))}readMinScale(e,t){for(const e of t.layers)if(null!=e.layerDefinition.minScale)return e.layerDefinition.minScale;return 0}readMaxScale(e,t){for(const e of t.layers)if(null!=e.layerDefinition.maxScale)return e.layerDefinition.maxScale;return 0}get multipointLayer(){return this._findSublayer("multipointLayer")}get pointLayer(){return this._findSublayer("pointLayer")}get polygonLayer(){return this._findSublayer("polygonLayer")}get polylineLayer(){return this._findSublayer("polylineLayer")}readSpatialReference(e,t){return t.layers.length?E.Z.fromJSON(t.layers[0].layerDefinition.spatialReference):E.Z.WGS84}readSublayers(e,t,r){if(P(t))return null;const o=[];for(let e=0;e<t.layers.length;e++){var a;const{layerDefinition:r,featureSet:l}=t.layers[e],n=null!=(a=r.geometryType)?a:l.geometryType,s=k.find((e=>{var t,o,i;return n===e.geometryTypeJSON&&(null==(t=r.drawingInfo)||null==(o=t.renderer)||null==(i=o.symbol)?void 0:i.type)===e.identifyingSymbol.type}));if(s){const e=new W({id:s.layerId,title:r.name,layer:this,graphics:l.features.map((({geometry:e,symbol:t,attributes:r,popupInfo:o})=>i.Z.fromJSON({attributes:r,geometry:e,symbol:t,popupTemplate:o})))});o.push(e)}}return new l.Z(o)}writeSublayers(e,t,r,o){const{minScale:i,maxScale:l}=this;if((0,s.Wi)(e))return;const n=e.some((e=>e.graphics.length>0));var y;if(!this.capabilities.operations.supportsMapNotesEditing)return void(n&&(null==o||null==(y=o.messages)||y.push(new a.Z("map-notes-layer:editing-not-supported","New map notes cannot be added to this layer"))));const u=[];let d=this.spatialReference.toJSON();e:for(const t of e)for(const e of t.graphics)if((0,s.pC)(e.geometry)){d=e.geometry.spatialReference.toJSON();break e}for(const t of k){const r=e.find((e=>t.layerId===e.id));this._writeMapNoteSublayer(u,r,t,i,l,d,o)}(0,p.RB)("featureCollection.layers",u,t)}get textLayer(){return this._findSublayer("textLayer")}load(e){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Feature Collection"]},e)),Promise.resolve(this)}read(e,t){"featureCollection"in e&&(e=(0,n.d9)(e),Object.assign(e,e.featureCollection)),super.read(e,t)}async beforeSave(){if((0,s.Wi)(this.sublayers))return;let e=null;const t=[];for(const r of this.sublayers)for(const o of r.graphics)if((0,s.pC)(o.geometry)){const r=o.geometry;e?(0,g.fS)(r.spatialReference,e)||((0,b.Up)(r.spatialReference,e)||(0,b.kR)()||await(0,b.zD)(),o.geometry=(0,b.iV)(r,e)):e=r.spatialReference,t.push(o)}const r=await(0,h.aX)(t.map((e=>e.geometry)));t.forEach(((e,t)=>e.geometry=r[t]))}_findSublayer(e){var t,r;return(0,s.Wi)(this.sublayers)?null:null!=(t=null==(r=this.sublayers)?void 0:r.find((t=>t.id===e)))?t:null}_writeMapNoteSublayer(e,t,r,o,i,l,a){const y=[];if(!(0,s.Wi)(t)){for(const e of t.graphics)this._writeMapNote(y,e,r.geometryType,a);this._normalizeObjectIds(y,G),e.push({layerDefinition:{name:t.title,drawingInfo:{renderer:{type:"simple",symbol:(0,n.d9)(r.identifyingSymbol)}},geometryType:r.geometryTypeJSON,minScale:o,maxScale:i,objectIdField:"OBJECTID",fields:[G.toJSON(),F.toJSON()],spatialReference:l},featureSet:{features:y,geometryType:r.geometryTypeJSON}})}}_writeMapNote(e,t,r,o){if((0,s.Wi)(t))return;const{geometry:i,symbol:l,popupTemplate:a}=t;if((0,s.Wi)(i))return;var n,y;if(i.type!==r)return void(null==o||null==(n=o.messages)||n.push(new u.Z("map-notes-layer:invalid-geometry-type",`Geometry "${i.type}" cannot be saved in "${r}" layer`,{graphic:t})));if((0,s.Wi)(l))return void(null==o||null==(y=o.messages)||y.push(new u.Z("map-notes-layer:no-symbol","Skipping map notes with no symbol",{graphic:t})));const p={attributes:{...t.attributes},geometry:i.toJSON(),symbol:l.toJSON()};(0,s.pC)(a)&&(p.popupInfo=a.toJSON()),e.push(p)}_normalizeObjectIds(e,t){const r=t.name;let o=(0,L.S)(r,e)+1;const i=new Set;for(const t of e){t.attributes||(t.attributes={});const{attributes:e}=t;(null==e[r]||i.has(e[r]))&&(e[r]=o++),i.add(e[r])}}};(0,o._)([(0,d.Cb)({readOnly:!0})],z.prototype,"capabilities",void 0),(0,o._)([(0,c.r)(["portal-item","web-map"],"capabilities",["layers"])],z.prototype,"readCapabilities",null),(0,o._)([(0,d.Cb)({readOnly:!0})],z.prototype,"featureCollections",void 0),(0,o._)([(0,c.r)(["web-map","portal-item"],"featureCollections",["layers"])],z.prototype,"readFeatureCollections",null),(0,o._)([(0,d.Cb)({readOnly:!0,json:{origins:{"web-map":{write:{enabled:!0,target:"featureCollection"}}}}})],z.prototype,"featureCollectionJSON",void 0),(0,o._)([(0,c.r)(["web-map","portal-item"],"featureCollectionJSON",["featureCollection"])],z.prototype,"readLegacyfeatureCollectionJSON",null),(0,o._)([(0,d.Cb)({readOnly:!0,json:{read:!1,write:{enabled:!0,ignoreOrigin:!0}}})],z.prototype,"featureCollectionType",void 0),(0,o._)([(0,d.Cb)({json:{write:!1}})],z.prototype,"fullExtent",void 0),(0,o._)([(0,c.r)(["web-map","portal-item"],"fullExtent",["layers"])],z.prototype,"readFullExtent",null),(0,o._)([(0,d.Cb)({readOnly:!0,json:{origins:{"web-map":{write:{target:"featureCollection.showLegend",overridePolicy(){return{enabled:null!=this.featureCollectionJSON}}}}}}})],z.prototype,"legendEnabled",void 0),(0,o._)([(0,d.Cb)({type:["show","hide"]})],z.prototype,"listMode",void 0),(0,o._)([(0,d.Cb)({type:Number,nonNullable:!0,json:{write:!1}})],z.prototype,"minScale",void 0),(0,o._)([(0,c.r)(["web-map","portal-item"],"minScale",["layers"])],z.prototype,"readMinScale",null),(0,o._)([(0,d.Cb)({type:Number,nonNullable:!0,json:{write:!1}})],z.prototype,"maxScale",void 0),(0,o._)([(0,c.r)(["web-map","portal-item"],"maxScale",["layers"])],z.prototype,"readMaxScale",null),(0,o._)([(0,d.Cb)({readOnly:!0})],z.prototype,"multipointLayer",null),(0,o._)([(0,d.Cb)({value:"ArcGISFeatureLayer",type:["ArcGISFeatureLayer"]})],z.prototype,"operationalLayerType",void 0),(0,o._)([(0,d.Cb)({readOnly:!0})],z.prototype,"pointLayer",null),(0,o._)([(0,d.Cb)({readOnly:!0})],z.prototype,"polygonLayer",null),(0,o._)([(0,d.Cb)({readOnly:!0})],z.prototype,"polylineLayer",null),(0,o._)([(0,d.Cb)({type:E.Z})],z.prototype,"spatialReference",void 0),(0,o._)([(0,c.r)(["web-map","portal-item"],"spatialReference",["layers"])],z.prototype,"readSpatialReference",null),(0,o._)([(0,d.Cb)({readOnly:!0,json:{origins:{"web-map":{write:{ignoreOrigin:!0}}}}})],z.prototype,"sublayers",void 0),(0,o._)([(0,c.r)("web-map","sublayers",["layers"])],z.prototype,"readSublayers",null),(0,o._)([(0,f.c)("web-map","sublayers")],z.prototype,"writeSublayers",null),(0,o._)([(0,d.Cb)({readOnly:!0})],z.prototype,"textLayer",null),(0,o._)([(0,d.Cb)()],z.prototype,"title",void 0),(0,o._)([(0,d.Cb)({readOnly:!0,json:{read:!1}})],z.prototype,"type",void 0),z=(0,o._)([(0,m.j)("esri.layers.MapNotesLayer")],z);const A=z},22580:(e,t,r)=>{r.d(t,{S:()=>i,X:()=>o});const o=1;function i(e,t){let r=0;for(const i of t){var o;const t=null==(o=i.attributes)?void 0:o[e];"number"==typeof t&&isFinite(t)&&(r=Math.max(r,t))}return r}}}]);