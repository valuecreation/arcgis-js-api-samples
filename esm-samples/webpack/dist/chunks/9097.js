"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[9097],{69097:(e,t,a)=>{a.r(t),a.d(t,{default:()=>S});var r=a(23324),i=a(57603),o=a(76877),l=a(51598),s=a(43388),n=a(88200),p=a(74791),u=(a(32780),a(76997),a(20337),a(72903)),d=a(49030),g=a(3982),y=a(89805),b=a(23481),c=a(62697),h=a(97027),v=a(42673),m=a(54552);const M={id:"0/0/0",level:0,row:0,col:0,extent:null};let w=class extends((0,c.h)((0,v.M)((0,h.Q)(b.Z)))){constructor(){super(...arguments),this.tileInfo=m.Z.create({spatialReference:d.Z.WebMercator,size:256}),this.type="base-tile",this.fullExtent=new g.Z(-20037508.342787,-20037508.34278,20037508.34278,20037508.342787,d.Z.WebMercator),this.spatialReference=d.Z.WebMercator}getTileBounds(e,t,a,r){const i=r||(0,y.Ue)();return M.level=e,M.row=t,M.col=a,M.extent=i,this.tileInfo.updateTileInfo(M),M.extent=null,i}fetchTile(e,t,a,r={}){const{signal:o,timestamp:l}=r,s=this.getTileUrl(e,t,a),n={responseType:"image",signal:o};return null!=l&&(n.query={_ts:r.timestamp}),(0,i.default)(s,n).then((e=>e.data))}getTileUrl(){throw new o.Z("basetilelayer:gettileurl-not-implemented","getTileUrl() is not implemented")}};(0,r._)([(0,p.Cb)({type:m.Z})],w.prototype,"tileInfo",void 0),(0,r._)([(0,p.Cb)({type:["show","hide"]})],w.prototype,"listMode",void 0),(0,r._)([(0,p.Cb)({readOnly:!0,value:"base-tile"})],w.prototype,"type",void 0),(0,r._)([(0,p.Cb)()],w.prototype,"fullExtent",void 0),(0,r._)([(0,p.Cb)()],w.prototype,"spatialReference",void 0),w=(0,r._)([(0,u.j)("esri.layers.BaseTileLayer")],w);const f=w;var _=a(5677);const C=new l.Xn({BingMapsAerial:"aerial",BingMapsRoad:"road",BingMapsHybrid:"hybrid"});let Z=class extends((0,c.h)((0,_.q)((0,n.R)(f)))){constructor(e){super(e),this.type="bing-maps",this.tileInfo=new m.Z({size:[256,256],dpi:96,origin:{x:-20037508.342787,y:20037508.342787,spatialReference:d.Z.WebMercator},spatialReference:d.Z.WebMercator,lods:[{level:1,resolution:78271.5169639999,scale:295828763.795777},{level:2,resolution:39135.7584820001,scale:147914381.897889},{level:3,resolution:19567.8792409999,scale:73957190.948944},{level:4,resolution:9783.93962049996,scale:36978595.474472},{level:5,resolution:4891.96981024998,scale:18489297.737236},{level:6,resolution:2445.98490512499,scale:9244648.868618},{level:7,resolution:1222.99245256249,scale:4622324.434309},{level:8,resolution:611.49622628138,scale:2311162.217155},{level:9,resolution:305.748113140558,scale:1155581.108577},{level:10,resolution:152.874056570411,scale:577790.554289},{level:11,resolution:76.4370282850732,scale:288895.277144},{level:12,resolution:38.2185141425366,scale:144447.638572},{level:13,resolution:19.1092570712683,scale:72223.819286},{level:14,resolution:9.55462853563415,scale:36111.909643},{level:15,resolution:4.77731426794937,scale:18055.954822},{level:16,resolution:2.38865713397468,scale:9027.977411},{level:17,resolution:1.19432856685505,scale:4513.988705},{level:18,resolution:.597164283559817,scale:2256.994353},{level:19,resolution:.298582141647617,scale:1128.497176},{level:20,resolution:.1492910708238085,scale:564.248588}]}),this.key=null,this.style="road",this.culture="en-US",this.region=null,this.portalUrl=null,this.hasAttributionData=!0}get bingMetadata(){return this._get("bingMetadata")}set bingMetadata(e){this._set("bingMetadata",e)}get copyright(){return(0,s.pC)(this.bingMetadata)?this.bingMetadata.copyright:null}get operationalLayerType(){return C.toJSON(this.style)}get bingLogo(){return(0,s.pC)(this.bingMetadata)?this.bingMetadata.brandLogoUri:null}load(e){return this.key?this.addResolvingPromise(this._getMetadata()):this.portalUrl?this.addResolvingPromise(this._getPortalBingKey().then((()=>this._getMetadata()))):this.addResolvingPromise(Promise.reject(new o.Z("bingmapslayer:load","Bing layer must have bing key."))),Promise.resolve(this)}getTileUrl(e,t,a){if(!this.loaded||(0,s.Wi)(this.bingMetadata))return null;const r=this.bingMetadata.resourceSets[0].resources[0],i=r.imageUrlSubdomains[t%r.imageUrlSubdomains.length],o=this._getQuadKey(e,t,a);return r.imageUrl.replace("{subdomain}",i).replace("{quadkey}",o)}async fetchAttributionData(){return this.load().then((()=>(0,s.Wi)(this.bingMetadata)?null:{contributors:this.bingMetadata.resourceSets[0].resources[0].imageryProviders.map((e=>({attribution:e.attribution,coverageAreas:e.coverageAreas.map((e=>({zoomMin:e.zoomMin,zoomMax:e.zoomMax,score:1,bbox:[e.bbox[0],e.bbox[1],e.bbox[2],e.bbox[3]]})))})))}))}_getMetadata(){const e={road:"roadOnDemand",aerial:"aerial",hybrid:"aerialWithLabelsOnDemand"}[this.style];return(0,i.default)(`https://dev.virtualearth.net/REST/v1/Imagery/Metadata/${e}`,{responseType:"json",query:{include:"ImageryProviders",uriScheme:"https",key:this.key,suppressStatus:!0,output:"json",culture:this.culture,userRegion:this.region}}).then((e=>{const t=e.data;if(200!==t.statusCode)throw new o.Z("bingmapslayer:getmetadata",t.statusDescription);if(this.bingMetadata=t,0===this.bingMetadata.resourceSets.length)throw new o.Z("bingmapslayer:getmetadata","no bing resourcesets");if(0===this.bingMetadata.resourceSets[0].resources.length)throw new o.Z("bingmapslayer:getmetadata","no bing resources")})).catch((e=>{throw new o.Z("bingmapslayer:getmetadata",e.message)}))}_getPortalBingKey(){return(0,i.default)(this.portalUrl,{responseType:"json",authMode:"no-prompt",query:{f:"json"}}).then((e=>{if(!e.data.bingKey)throw new o.Z("bingmapslayer:getportalbingkey","The referenced Portal does not contain a valid bing key");this.key=e.data.bingKey})).catch((e=>{throw new o.Z("bingmapslayer:getportalbingkey",e.message)}))}_getQuadKey(e,t,a){let r="";for(let i=e;i>0;i--){let e=0;const o=1<<i-1;0!=(a&o)&&(e+=1),0!=(t&o)&&(e+=2),r+=e.toString()}return r}};(0,r._)([(0,p.Cb)({json:{read:!1,write:!1},value:null})],Z.prototype,"bingMetadata",null),(0,r._)([(0,p.Cb)({json:{read:!1,write:!1},value:"bing-maps",readOnly:!0})],Z.prototype,"type",void 0),(0,r._)([(0,p.Cb)({type:m.Z})],Z.prototype,"tileInfo",void 0),(0,r._)([(0,p.Cb)({type:String,readOnly:!0,json:{read:!1,write:!1}})],Z.prototype,"copyright",null),(0,r._)([(0,p.Cb)({type:String,json:{write:!1,read:!1}})],Z.prototype,"key",void 0),(0,r._)([(0,p.Cb)({type:C.apiValues,nonNullable:!0,json:{read:{source:"layerType",reader:C.read}}})],Z.prototype,"style",void 0),(0,r._)([(0,p.Cb)({type:["BingMapsAerial","BingMapsHybrid","BingMapsRoad"]})],Z.prototype,"operationalLayerType",null),(0,r._)([(0,p.Cb)({type:String,json:{write:!1,read:!1}})],Z.prototype,"culture",void 0),(0,r._)([(0,p.Cb)({type:String,json:{write:!1,read:!1}})],Z.prototype,"region",void 0),(0,r._)([(0,p.Cb)({type:String,json:{write:!0,read:!0}})],Z.prototype,"portalUrl",void 0),(0,r._)([(0,p.Cb)({type:Boolean,json:{write:!1,read:!1}})],Z.prototype,"hasAttributionData",void 0),(0,r._)([(0,p.Cb)({type:String,readOnly:!0})],Z.prototype,"bingLogo",null),Z=(0,r._)([(0,u.j)("esri.layers.BingMapsLayer")],Z);const S=Z}}]);