"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[492],{60492:(e,t,r)=>{r.r(t),r.d(t,{default:()=>H});var s=r(23324),i=r(89037),o=(r(21185),r(31359),r(26139),r(47701),r(12125),r(43801),r(60848),r(13794),r(75890)),a=r(57603),n=r(76877),l=r(20337),p=r(43388),d=r(88200),u=r(19955),y=r(2364),c=r(77030),h=r(74791),f=(r(32780),r(50778)),g=(r(76997),r(56568)),m=r(72903),b=r(23481),v=r(95399),I=r(19149),w=r(5677),_=r(67843),S=r(42673),C=r(62767),F=r(64846),L=r(23867),P=r(50920),j=r(44998),E=r(14109),O=r(58403),T=r(21095),A=r(51531),D=r(67313),x=r(94586),R=r(455),U=r(2208),Q=r(12210);let q=class extends Q.wq{constructor(){super(...arguments),this.name=null,this.field=null,this.currentRangeExtent=null,this.fullRangeExtent=null,this.type="rangeInfo"}};(0,s._)([(0,h.Cb)({type:String,json:{read:!0,write:!0}})],q.prototype,"name",void 0),(0,s._)([(0,h.Cb)({type:String,json:{read:!0,write:!0}})],q.prototype,"field",void 0),(0,s._)([(0,h.Cb)({type:[Number],json:{read:!0,write:!0}})],q.prototype,"currentRangeExtent",void 0),(0,s._)([(0,h.Cb)({type:[Number],json:{read:!0,write:!0}})],q.prototype,"fullRangeExtent",void 0),(0,s._)([(0,h.Cb)({type:["rangeInfo"],readOnly:!0,json:{read:!1,write:!0}})],q.prototype,"type",void 0),q=(0,s._)([(0,m.j)("esri.layers.support.RangeInfo")],q);const Z=q;var N=r(59933),k=r(54945),M=r(68663),W=r(15969);const $=["3DObject","Point"],G=l.Z.getLogger("esri.layers.SceneLayer"),V=(0,O.v)();let K=class extends((0,C.V)((0,I.Y)((0,w.q)((0,_.I)((0,S.M)((0,d.R)((0,v.V)(b.Z)))))))){constructor(...e){super(...e),this.featureReduction=null,this.rangeInfos=null,this.operationalLayerType="ArcGISSceneServiceLayer",this.type="scene",this.fields=null,this.floorInfo=null,this.outFields=null,this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.definitionExpression=null,this.path=null,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.cachedDrawingInfo={color:!1},this.popupEnabled=!0,this.popupTemplate=null,this.objectIdField=null,this.globalIdField=null,this._fieldUsageInfo={},this.screenSizePerspectiveEnabled=!0}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}getField(e){return this.fieldsIndex.get(e)}getFieldDomain(e,t){var r,s,i,o;const a=null==(r=this.getFeatureType(null==t?void 0:t.feature))||null==(s=r.domains)?void 0:s[e];return a&&"inherited"!==a.type?a:null!=(i=null==(o=this.getField(e))?void 0:o.domain)?i:null}getFeatureType(e){return e&&(0,p.pC)(this.associatedLayer)?this.associatedLayer.getFeatureType(e):null}get types(){return(0,p.pC)(this.associatedLayer)?this.associatedLayer.types:[]}get typeIdField(){return(0,p.pC)(this.associatedLayer)?this.associatedLayer.typeIdField:null}get formTemplate(){return(0,p.pC)(this.associatedLayer)?this.associatedLayer.formTemplate:null}get fieldsIndex(){return new T.Z(this.fields)}readNodePages(e,t,r){return"Point"===t.layerType&&(e=t.pointNodePages),null==e||"object"!=typeof e?null:D.U4.fromJSON(e,r)}set elevationInfo(e){this._set("elevationInfo",e),this.loaded&&this._validateElevationInfo()}get geometryType(){return z[this.profile]||"mesh"}set renderer(e){(0,A.YN)(e,this.fieldsIndex),this._set("renderer",e)}readCachedDrawingInfo(e){return null!=e&&"object"==typeof e||(e={}),null==e.color&&(e.color=!1),e}get capabilities(){const e=(0,p.pC)(this.associatedLayer)&&this.associatedLayer.capabilities?this.associatedLayer.capabilities:F.C,{query:t,editing:{supportsGlobalId:r,supportsRollbackOnFailure:s,supportsUploadWithItemId:i,supportsReturnServiceEditsInSourceSpatialReference:o},data:{supportsZ:a,supportsM:n,isVersioned:l,supportsAttachment:d},operations:{supportsEditing:u,supportsUpdate:y,supportsQuery:c,supportsQueryAttachments:h}}=e,f=e.operations.supportsChangeTracking;return{query:t,editing:{supportsGlobalId:r,supportsReturnServiceEditsInSourceSpatialReference:o,supportsRollbackOnFailure:s,supportsGeometryUpdate:!1,supportsUploadWithItemId:i},data:{supportsAttachment:d,supportsZ:a,supportsM:n,isVersioned:l},operations:{supportsQuery:c,supportsQueryAttachments:h,supportsEditing:u&&f,supportsAdd:!1,supportsDelete:!1,supportsUpdate:y&&f}}}get editingEnabled(){return this._isOverridden("editingEnabled")?this._get("editingEnabled"):this.userHasEditingPrivileges}set editingEnabled(e){null!=e?this._override("editingEnabled",e):this._clearOverride("editingEnabled")}get defaultPopupTemplate(){return(0,p.pC)(this.associatedLayer)||this.attributeStorageInfo?this.createPopupTemplate():null}readObjectIdField(e,t){return!e&&t.fields&&t.fields.some((t=>("esriFieldTypeOID"===t.type&&(e=t.name),!!e))),e||void 0}readGlobalIdField(e,t){return!e&&t.fields&&t.fields.some((t=>("esriFieldTypeGlobalID"===t.type&&(e=t.name),!!e))),e||void 0}get displayField(){return(0,p.pC)(this.associatedLayer)?this.associatedLayer.displayField:null}readProfile(e,t){const r=t.store.profile;return null!=r&&B[r]?B[r]:(G.error("Unknown or missing profile",{profile:r,layer:this}),"mesh-pyramids")}load(e){const t=(0,p.pC)(e)?e.signal:null,r=this.loadFromPortal({supportedTypes:["Scene Service"]},e).catch(u.r9).then((()=>this._fetchService(t))).then((()=>Promise.all([this._fetchIndexAndUpdateExtent(this.nodePages,t),this._setAssociatedFeatureLayer(t)]))).then((()=>this._validateElevationInfo())).then((()=>this._applyAssociatedLayerOverrides())).then((()=>this._populateFieldUsageInfo())).then((()=>(0,N.y)(this,{origin:"service"},t))).then((()=>(0,A.YN)(this.renderer,this.fieldsIndex))).then((()=>this.finishLoadEditablePortalLayer(e)));return this.addResolvingPromise(r),Promise.resolve(this)}createQuery(){const e=new k.Z;return"mesh"!==this.geometryType&&(e.returnGeometry=!0,e.returnZ=!0),e.where=this.definitionExpression||"1=1",e.sqlFormat="standard",e}queryExtent(e,t){return this._getAssociatedLayerForQuery().then((r=>r.queryExtent(e||this.createQuery(),t)))}queryFeatureCount(e,t){return this._getAssociatedLayerForQuery().then((r=>r.queryFeatureCount(e||this.createQuery(),t)))}queryFeatures(e,t){return this._getAssociatedLayerForQuery().then((r=>r.queryFeatures(e||this.createQuery(),t))).then((e=>{if(null!=e&&e.features)for(const t of e.features)t.layer=this,t.sourceLayer=this;return e}))}queryObjectIds(e,t){return this._getAssociatedLayerForQuery().then((r=>r.queryObjectIds(e||this.createQuery(),t)))}queryAttachments(e,t){return this._getAssociatedLayerForQuery().then((r=>r.queryAttachments(e,t)))}getFieldUsageInfo(e){const t={supportsLabelingInfo:!1,supportsRenderer:!1,supportsPopupTemplate:!1,supportsLayerQuery:!1};return this.loaded?this._fieldUsageInfo[e]||t:(G.error("#getFieldUsageInfo()","Unavailable until layer is loaded"),t)}createPopupTemplate(e){return(0,M.eZ)(this,e)}_getAssociatedLayerForQuery(){const e=this.associatedLayer;return(0,p.pC)(e)&&e.loaded?Promise.resolve(e):this._loadAssociatedLayerForQuery()}async _loadAssociatedLayerForQuery(){if(await this.load(),(0,p.Wi)(this.associatedLayer))throw new n.Z("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});try{await this.associatedLayer.load()}catch(e){throw new n.Z("scenelayer:query-not-available","SceneLayer associated feature layer could not be loaded",{layer:this,error:e})}return this.associatedLayer}hasCachedStatistics(e){return null!=this.statisticsInfo&&this.statisticsInfo.some((t=>t.name===e))}async queryCachedStatistics(e,t){if(await this.load(t),!this.statisticsInfo)throw new n.Z("scenelayer:no-cached-statistics","Cached statistics are not available for this layer");const r=this.fieldsIndex.get(e);if(!r)throw new n.Z("scenelayer:field-unexisting",`Field '${e}' does not exist on the layer`);for(const e of this.statisticsInfo)if(e.name===r.name){const r=(0,y.v_)(this.parsedUrl.path,e.href);return(0,a.default)(r,{query:{f:"json",token:this.apiKey},responseType:"json",signal:t?t.signal:null}).then((e=>e.data))}throw new n.Z("scenelayer:no-cached-statistics","Cached statistics for this attribute are not available")}async saveAs(e,t){return this._debouncedSaveOperations(1,{...t,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"};return this._debouncedSaveOperations(0,e)}async applyEdits(e,t){const s=await r.e(3746).then(r.bind(r,53746));if(await this.load(),(0,p.Wi)(this.associatedLayer))throw new n.Z(`${this.type}-layer:not-editable`,"Service is not editable");return await this.associatedLayer.load(),s.applyEdits(this,this.associatedLayer.source,e,t)}on(e,t){return super.on(e,t)}validateLayer(e){if(e.layerType&&-1===$.indexOf(e.layerType))throw new n.Z("scenelayer:layer-type-not-supported","SceneLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new n.Z("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});if(this.version.major>1)throw new n.Z("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});!function(e,t){let r=!1,s=!1;if(null==e)r=!0,s=!0;else{const i=t&&t.isGeographic;switch(e){case"east-north-up":case"earth-centered":r=!0,s=i;break;case"vertex-reference-frame":r=!0,s=!i;break;default:r=!1}}if(!r)throw new n.Z("scenelayer:unsupported-normal-reference-frame","Normal reference frame is invalid.");if(!s)throw new n.Z("scenelayer:incompatible-normal-reference-frame","Normal reference frame is incompatible with layer spatial reference.")}(this.normalReferenceFrame,this.spatialReference)}_getTypeKeywords(){const e=[];if("points"===this.profile)e.push("Point");else{if("mesh-pyramids"!==this.profile)throw new n.Z("scenelayer:unknown-profile","SceneLayer:save() encountered an unknown SceneLayer profile: "+this.profile);e.push("3DObject")}return e}_populateFieldUsageInfo(){if(this._fieldUsageInfo={},this.fields)for(const e of this.fields){const t=!(!this.attributeStorageInfo||!this.attributeStorageInfo.some((t=>t.name===e.name))),r=!!((0,p.pC)(this.associatedLayer)&&this.associatedLayer.fields&&this.associatedLayer.fields.some((t=>t&&e.name===t.name))),s={supportsLabelingInfo:t,supportsRenderer:t,supportsPopupTemplate:t||r,supportsLayerQuery:r};this._fieldUsageInfo[e.name]=s}}_applyAssociatedLayerOverrides(){this._applyAssociatedLayerFieldsOverrides(),this._applyAssociatedLayerPopupOverrides()}_applyAssociatedLayerFieldsOverrides(){if((0,p.Wi)(this.associatedLayer)||!this.associatedLayer.fields)return;let e=null;for(const t of this.associatedLayer.fields){const r=this.getField(t.name);r?(!r.domain&&t.domain&&(r.domain=t.domain.clone()),r.editable=t.editable,r.nullable=t.nullable,r.length=t.length):(e||(e=this.fields?this.fields.slice():[]),e.push(t.clone()))}e&&this._set("fields",e)}_applyAssociatedLayerPopupOverrides(){if((0,p.Wi)(this.associatedLayer))return;const e=["popupTemplate","popupEnabled"],t=(0,f.vw)(this);for(let r=0;r<e.length;r++){const s=e[r],i=this.originIdOf(s),o=this.associatedLayer.originIdOf(s);i<o&&(2===o||3===o)&&t.setAtOrigin(s,this.associatedLayer[s],o)}}async _setAssociatedFeatureLayer(e){if(-1===["mesh-pyramids","points"].indexOf(this.profile))return;const t=new E.W(this.parsedUrl,this.portalItem,this.apiKey,e);try{this.associatedLayer=await t.fetch()}catch(e){(0,u.D_)(e)||this._logWarningOnPopupEnabled()}}_logWarningOnPopupEnabled(){(0,c.tH)(this,["popupTemplate","popupEnabled"],(()=>this.popupEnabled&&null!=this.popupTemplate)).then((()=>()=>{const e=`this SceneLayer: ${this.title}`;null==this.attributeStorageInfo?G.warn(`Associated FeatureLayer could not be loaded and no binary attributes found. Popups will not work on ${e}`):G.info(`Associated FeatureLayer could not be loaded. Falling back to binary attributes for Popups on ${e}`)}))}_validateElevationInfo(){const e=this.elevationInfo;e&&("mesh-pyramids"===this.profile&&"absolute-height"!==e.mode&&G.warn(".elevationInfo=","Mesh scene layers only support absolute-height elevation mode"),e.featureExpressionInfo&&"0"!==e.featureExpressionInfo.expression&&G.warn(".elevationInfo=","Scene layers do not support featureExpressionInfo"))}};(0,s._)([(0,h.Cb)({types:{key:"type",base:P.Z,typeMap:{selection:j.Z}},json:{origins:{"web-scene":{name:"layerDefinition.featureReduction",write:!0},"portal-item":{name:"layerDefinition.featureReduction",write:!0}}}})],K.prototype,"featureReduction",void 0),(0,s._)([(0,h.Cb)({type:[Z],json:{read:!1,origins:{"web-scene":{name:"layerDefinition.rangeInfos",write:!0},"portal-item":{name:"layerDefinition.rangeInfos",write:!0}}}})],K.prototype,"rangeInfos",void 0),(0,s._)([(0,h.Cb)({json:{read:!1}})],K.prototype,"associatedLayer",void 0),(0,s._)([(0,h.Cb)({type:["show","hide"]})],K.prototype,"listMode",void 0),(0,s._)([(0,h.Cb)({type:["ArcGISSceneServiceLayer"]})],K.prototype,"operationalLayerType",void 0),(0,s._)([(0,h.Cb)({json:{read:!1},readOnly:!0})],K.prototype,"type",void 0),(0,s._)([(0,h.Cb)({...V.fields,readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],K.prototype,"fields",void 0),(0,s._)([(0,h.Cb)()],K.prototype,"types",null),(0,s._)([(0,h.Cb)()],K.prototype,"typeIdField",null),(0,s._)([(0,h.Cb)()],K.prototype,"formTemplate",null),(0,s._)([(0,h.Cb)({readOnly:!0})],K.prototype,"fieldsIndex",null),(0,s._)([(0,h.Cb)({type:U.Z,json:{read:{source:"layerDefinition.floorInfo"},write:{target:"layerDefinition.floorInfo"}}})],K.prototype,"floorInfo",void 0),(0,s._)([(0,h.Cb)(V.outFields)],K.prototype,"outFields",void 0),(0,s._)([(0,h.Cb)({type:D.U4,readOnly:!0,json:{read:!1}})],K.prototype,"nodePages",void 0),(0,s._)([(0,g.r)("service","nodePages",["nodePages","pointNodePages"])],K.prototype,"readNodePages",null),(0,s._)([(0,h.Cb)({type:[D.QI],readOnly:!0})],K.prototype,"materialDefinitions",void 0),(0,s._)([(0,h.Cb)({type:[D.Yh],readOnly:!0})],K.prototype,"textureSetDefinitions",void 0),(0,s._)([(0,h.Cb)({type:[D.H3],readOnly:!0})],K.prototype,"geometryDefinitions",void 0),(0,s._)([(0,h.Cb)({readOnly:!0})],K.prototype,"serviceUpdateTimeStamp",void 0),(0,s._)([(0,h.Cb)({readOnly:!0})],K.prototype,"attributeStorageInfo",void 0),(0,s._)([(0,h.Cb)({readOnly:!0})],K.prototype,"statisticsInfo",void 0),(0,s._)([(0,h.Cb)({type:String,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],K.prototype,"definitionExpression",void 0),(0,s._)([(0,h.Cb)({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],K.prototype,"path",void 0),(0,s._)([(0,h.Cb)(L.PV)],K.prototype,"elevationInfo",null),(0,s._)([(0,h.Cb)({type:String})],K.prototype,"geometryType",null),(0,s._)([(0,h.Cb)(L.iR)],K.prototype,"labelsVisible",void 0),(0,s._)([(0,h.Cb)({type:[x.Z],json:{origins:{service:{name:"drawingInfo.labelingInfo",read:{reader:R.r},write:!1}},name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:R.r},write:!0}})],K.prototype,"labelingInfo",void 0),(0,s._)([(0,h.Cb)(L.rn)],K.prototype,"legendEnabled",void 0),(0,s._)([(0,h.Cb)({type:Number,json:{origins:{"web-document":{default:1,write:{enabled:!0,target:{opacity:{type:Number},"layerDefinition.drawingInfo.transparency":{type:Number}}},read:{source:["opacity","layerDefinition.drawingInfo.transparency"],reader(e,t){var r,s;if("number"==typeof e&&e>=0&&e<=1)return e;const i=null==(r=t.layerDefinition)||null==(s=r.drawingInfo)?void 0:s.transparency;return void 0!==i?(0,W.b)(i):void 0}}},"portal-item":{write:!0},service:{read:!1}}}})],K.prototype,"opacity",void 0),(0,s._)([(0,h.Cb)({types:o.o,json:{origins:{service:{read:{source:"drawingInfo.renderer"}}},name:"layerDefinition.drawingInfo.renderer",write:!0},value:null})],K.prototype,"renderer",null),(0,s._)([(0,h.Cb)({json:{read:!1}})],K.prototype,"cachedDrawingInfo",void 0),(0,s._)([(0,g.r)("service","cachedDrawingInfo")],K.prototype,"readCachedDrawingInfo",null),(0,s._)([(0,h.Cb)({readOnly:!0,json:{read:!1}})],K.prototype,"capabilities",null),(0,s._)([(0,h.Cb)({type:Boolean,json:{read:!1}})],K.prototype,"editingEnabled",null),(0,s._)([(0,h.Cb)(L.C_)],K.prototype,"popupEnabled",void 0),(0,s._)([(0,h.Cb)({type:i.Z,json:{name:"popupInfo",write:!0}})],K.prototype,"popupTemplate",void 0),(0,s._)([(0,h.Cb)({readOnly:!0,json:{read:!1}})],K.prototype,"defaultPopupTemplate",null),(0,s._)([(0,h.Cb)({type:String,json:{read:!1}})],K.prototype,"objectIdField",void 0),(0,s._)([(0,g.r)("service","objectIdField",["objectIdField","fields"])],K.prototype,"readObjectIdField",null),(0,s._)([(0,h.Cb)({type:String,json:{read:!1}})],K.prototype,"globalIdField",void 0),(0,s._)([(0,g.r)("service","globalIdField",["globalIdField","fields"])],K.prototype,"readGlobalIdField",null),(0,s._)([(0,h.Cb)({readOnly:!0,type:String,json:{read:!1}})],K.prototype,"displayField",null),(0,s._)([(0,h.Cb)({type:String,json:{read:!1}})],K.prototype,"profile",void 0),(0,s._)([(0,g.r)("service","profile",["store.profile"])],K.prototype,"readProfile",null),(0,s._)([(0,h.Cb)({readOnly:!0,type:String,json:{origins:{service:{read:{source:"store.normalReferenceFrame"}}},read:!1}})],K.prototype,"normalReferenceFrame",void 0),(0,s._)([(0,h.Cb)(L.YI)],K.prototype,"screenSizePerspectiveEnabled",void 0),K=(0,s._)([(0,m.j)("esri.layers.SceneLayer")],K);const B={"mesh-pyramids":"mesh-pyramids",meshpyramids:"mesh-pyramids","features-meshes":"mesh-pyramids",points:"points","features-points":"points",lines:"lines","features-lines":"lines",polygons:"polygons","features-polygons":"polygons"},z={"mesh-pyramids":"mesh",points:"point",lines:"polyline",polygons:"polygon"},H=K},14109:(e,t,r)=>{r.d(t,{W:()=>d});var s=r(3475),i=r(57603),o=r(43388),a=r(19955),n=r(15356),l=r(49220),p=r(43117);class d{constructor(e,t,r,s){this.parsedUrl=e,this.portalItem=t,this.apiKey=r,this.signal=s,this.rootDocument=null;const i=this.parsedUrl.path.match(/^(.*)\/SceneServer\/layers\/([\d]*)\/?$/i);i&&(this.urlParts={root:i[1],layerId:parseInt(i[2],10)})}async fetch(){var e;if(!this.urlParts)return null;const t=null!=(e=this.portalItem)?e:await this.portalItemFromServiceItemId();if((0,o.Wi)(t))return this.loadFromUrl();const r=await this.findAndLoadRelatedPortalItem(t);return(0,o.Wi)(r)?null:this.loadFeatureLayerFromPortalItem(r)}async fetchPortalItem(){var e;if(!this.urlParts)return null;const t=null!=(e=this.portalItem)?e:await this.portalItemFromServiceItemId();return(0,o.Wi)(t)?null:this.findAndLoadRelatedPortalItem(t)}async fetchRootDocument(){if((0,o.pC)(this.rootDocument))return this.rootDocument;if((0,o.Wi)(this.urlParts))return this.rootDocument={},{};const e={query:{f:"json",token:this.apiKey},responseType:"json",signal:this.signal},t=`${this.urlParts.root}/SceneServer`;try{const r=await(0,i.default)(t,e);this.rootDocument=r.data}catch{this.rootDocument={}}return this.rootDocument}async fetchServiceOwningPortalUrl(){var e;const t=null==(e=s.id)?void 0:e.findServerInfo(this.parsedUrl.path);if(null!=t&&t.owningSystemUrl)return t.owningSystemUrl;const r=this.parsedUrl.path.replace(/(.*\/rest)\/.*/i,"$1")+"/info";try{const e=(await(0,i.default)(r,{query:{f:"json"},responseType:"json",signal:this.signal})).data.owningSystemUrl;if(e)return e}catch(e){(0,a.r9)(e)}return null}async findAndLoadRelatedPortalItem(e){try{return(await e.fetchRelatedItems({relationshipType:"Service2Service",direction:"reverse"},{signal:this.signal})).find((e=>"Feature Service"===e.type))||null}catch(e){return(0,a.r9)(e),null}}async loadFeatureLayerFromPortalItem(e){await e.load({signal:this.signal});const t=await this.findMatchingAssociatedSublayerUrl(e.url);return new n.default({url:t,portalItem:e}).load({signal:this.signal})}async loadFromUrl(){const e=await this.findMatchingAssociatedSublayerUrl(`${this.urlParts.root}/FeatureServer`);return new n.default({url:e}).load({signal:this.signal})}async findMatchingAssociatedSublayerUrl(e){const t=e.replace(/^(.*FeatureServer)(\/[\d]*\/?)?$/i,"$1"),r={query:{f:"json"},responseType:"json",authMode:"no-prompt",signal:this.signal},s=this.urlParts.layerId,o=this.fetchRootDocument(),a=(0,i.default)(t,r),[n,l]=await Promise.all([a,o]),p=l&&l.layers,d=n.data&&n.data.layers;if(!Array.isArray(d))throw new Error("expected layers array");if(Array.isArray(p)){for(let e=0;e<Math.min(p.length,d.length);e++)if(p[e].id===s)return`${t}/${d[e].id}`}else if(s<d.length)return`${t}/${d[s].id}`;throw new Error("could not find matching associated sublayer")}async portalItemFromServiceItemId(){const e=(await this.fetchRootDocument()).serviceItemId;if(!e)return null;const t=new p.default({id:e,apiKey:this.apiKey}),r=await this.fetchServiceOwningPortalUrl();(0,o.pC)(r)&&(t.portal=new l.Z({url:r}));try{return t.load({signal:this.signal})}catch(e){return(0,a.r9)(e),null}}}},64846:(e,t,r)=>{r.d(t,{C:()=>s});const s={attachment:{supportsContentType:!1,supportsExifInfo:!1,supportsKeywords:!1,supportsName:!1,supportsSize:!1},data:{isVersioned:!1,supportsAttachment:!1,supportsM:!1,supportsZ:!1},editing:{supportsDeleteByAnonymous:!1,supportsDeleteByOthers:!1,supportsGeometryUpdate:!1,supportsGlobalId:!1,supportsReturnServiceEditsInSourceSpatialReference:!1,supportsRollbackOnFailure:!1,supportsUpdateByAnonymous:!1,supportsUpdateByOthers:!1,supportsUpdateWithoutM:!1,supportsUploadWithItemId:!1},metadata:{supportsAdvancedFieldProperties:!1},operations:{supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsAdd:!1,supportsDelete:!1,supportsEditing:!1,supportsChangeTracking:!1,supportsQuery:!1,supportsQueryAttachments:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsUpdate:!1,supportsExceedsLimitStatistics:!1},queryRelated:{supportsCount:!1,supportsOrderBy:!1,supportsPagination:!1},query:{maxRecordCount:0,maxRecordCountFactor:0,standardMaxRecordCount:0,supportsCacheHint:!1,supportsCentroid:!1,supportsDisjointSpatialRelationship:!1,supportsDistance:!1,supportsDistinct:!1,supportsExtent:!1,supportsFormatPBF:!1,supportsGeometryProperties:!1,supportsHavingClause:!1,supportsHistoricMoment:!1,supportsMaxRecordCountFactor:!1,supportsOrderBy:!1,supportsPagination:!1,supportsPercentileStatistics:!1,supportsQuantization:!1,supportsQuantizationEditMode:!1,supportsQueryByOthers:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsSqlExpression:!1,supportsStandardizedQueriesOnly:!1,supportsTopFeaturesQuery:!1,supportsStatistics:!1,tileMaxRecordCount:0}}}}]);