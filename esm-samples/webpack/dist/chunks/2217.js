"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[2217],{42217:(e,t,i)=>{i.r(t),i.d(t,{default:()=>Qe});var n=i(23324),r=i(89037),s=i(50386),a=i(76877),o=i(43388),l=i(88200),c=i(19955),u=i(74791),h=(i(32780),i(76997)),f=i(20337),d=i(43329),p=i(56568),m=i(72903),y=i(23481),g=i(62697),x=i(21394),v=(i(15572),i(57603)),w=i(17671),b=i(54522),I=i(61642),_=i(23867),C=i(80593),S=i(70255),R=i(54552),T=i(61788),M=i(58255),k=i(3982),P=i(49030);const O=f.Z.getLogger("esri.layers.mixins.ImageryTileMixin"),F=e=>{let t=class extends e{constructor(){super(...arguments),this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.fullExtent=null,this.interpolation="nearest",this.raster=null,this.rasterInfo=null,this.sourceJSON=null,this.spatialReference=null,this.tileInfo=null,this.symbolizer=null}set multidimensionalDefinition(e){this.raster&&(this._sliceId=this.raster.getSliceIndex(e)),this._set("multidimensionalDefinition",e)}set url(e){this._set("url",(0,I.Nm)(e,O))}set renderer(e){this._set("renderer",e),this.updateRenderer()}async updateRenderer(){if(!this.loaded)return;if(JSON.stringify(this._cachedRendererJson)===JSON.stringify(this.renderer))return;const e=this._rasterJobHandler.instance;e&&(this.symbolizer.rendererJSON=(0,T.ol)(this.renderer.toJSON()),this.symbolizer.bind(),await e.updateSymbolizer(this.symbolizer),this._cachedRendererJson=this.renderer.toJSON())}async applyRenderer(e,t){const i=e&&e.pixelBlock;if(!(i&&i.pixels&&i.pixels.length>0))return null;let n;this.updateRenderer();const r=this._rasterJobHandler.instance,{bandIds:s}=this;return n=r?await r.symbolize({...e,simpleStretchParams:t,bandIds:s}):this.symbolizer.symbolize({...e,simpleStretchParams:t,bandIds:s}),n}getTileUrl(e,t,i){return"RasterTileServer"===this.raster.datasetFormat?`${this.url}/tile/${e}/${t}/${i}`:""}getCompatibleTileInfo(e,t,i=!1){if(!this.loaded)return null;if(i&&e.equals(this.spatialReference))return this.tileInfo;const n=(0,b.C5)(e);return R.Z.create({size:256,spatialReference:e,origin:n?{x:n.origin[0],y:n.origin[1]}:{x:t.xmin,y:t.ymax}})}getCompatibleFullExtent(e){return this.loaded?(this._compatibleFullExtent&&this._compatibleFullExtent.spatialReference.equals(e)||(this._compatibleFullExtent=this.raster.computeExtent(e)),this._compatibleFullExtent):null}async fetchTile(e,t,i,n={}){if(n.requestAsImageElement){const r=this.getTileUrl(e,t,i);return(0,v.default)(r,{responseType:"image",query:{sliceId:this._sliceId,_ts:n.timestamp,...this.raster.ioConfig.customFetchParameters},signal:n.signal}).then((e=>e.data))}await this._initJobHandler();const r="raster-shaded-relief"===this.renderer.type?{cols:1,rows:1}:null;if(this.multidimensionalDefinition){const e=this._sliceId;n={multidimensionalDefinition:this.multidimensionalDefinition,sliceId:e,buffer:r,...n}}return this.raster.fetchTile(e,t,i,n)}async fetchPixels(e,t,i,n){if(await this._initJobHandler(),this.multidimensionalDefinition){const e=this._sliceId;n={multidimensionalDefinition:this.multidimensionalDefinition,sliceId:e,...n}}return this.raster.fetchPixels(e,t,i,n)}identify(e,t={}){return this.multidimensionalDefinition&&!t.multidimensionalDefinition&&(t={...t,multidimensionalDefinition:this.multidimensionalDefinition}),this.raster.identify(e,t)}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}hasStandardTime(){var e;const t=this.rasterInfo.multidimensionalInfo;if(!(0,o.pC)(t)||"standard-time"!==this.rasterInfo.dataType)return!1;const i=null==(e=this.multidimensionalDefinition[0])?void 0:e.variableName;return t.variables.some((e=>e.name===i&&e.dimensions.some((e=>"StdTime"===e.name))))}getStandardTimeValue(e){return new Date(24*(e-25569)*3600*1e3).toString()}_configDefaultSettings(){this._configDefaultInterpolation(),this._configDefaultSlice(),this._configDefaultRenderer()}_initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new S.Z;return this._rasterJobHandler.connectionPromise=e.initialize().then((()=>{this._rasterJobHandler.instance=e,this.raster.rasterJobHandler=e,this.renderer&&this.updateRenderer()})).catch((()=>null)),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this.raster.rasterJobHandler=null}_configDefaultInterpolation(){if(null==this.interpolation){var e;const t=(0,T.In)(this.rasterInfo,this.raster.tileType,null==(e=this.sourceJSON)?void 0:e.defaultResamplingMethod);this._set("interpolation",t)}}_configDefaultSlice(){const{multidimensionalInfo:e}=this.raster.rasterInfo;if((0,o.pC)(e)){if(!this.multidimensionalDefinition){const t=e.variables[0],i=[];t.dimensions.forEach((e=>{i.push(new C.Z({variableName:t.name,dimensionName:e.name,values:e.hasRegularIntervals?e.extent[0]:e.values[0],isSlice:!0}))})),this.multidimensionalDefinition=i}this._sliceId=this.raster.getSliceIndex(this.multidimensionalDefinition)}}_configDefaultRenderer(){const e=this.raster.rasterInfo;var t,i;this.bandIds||(this.bandIds=(0,T.YD)(e)),this.renderer||(this.renderer=(0,T.Ob)(e,{bandIds:this.bandIds,variableName:null==(t=this.multidimensionalDefinition)||null==(i=t[0])?void 0:i.variableName})),this.symbolizer?(this.symbolizer.rendererJSON=(0,T.ol)(this.renderer.toJSON()),this.symbolizer.rasterInfo=e):this.symbolizer=new M.Z({rendererJSON:this.renderer.toJSON(),rasterInfo:e}),this.symbolizer.bind()||O.warn("imagery-tile-mixin","The given renderer is not supported by the layer.")}};return(0,n._)([(0,u.Cb)()],t.prototype,"_cachedRendererJson",void 0),(0,n._)([(0,u.Cb)()],t.prototype,"_sliceId",void 0),(0,n._)([(0,u.Cb)()],t.prototype,"_compatibleFullExtent",void 0),(0,n._)([(0,u.Cb)()],t.prototype,"_rasterJobHandler",void 0),(0,n._)([(0,u.Cb)()],t.prototype,"bandIds",void 0),(0,n._)([(0,u.Cb)()],t.prototype,"copyright",void 0),(0,n._)([(0,u.Cb)({type:k.Z}),(0,w.B)("rasterInfo.extent")],t.prototype,"fullExtent",void 0),(0,n._)([(0,u.Cb)()],t.prototype,"interpolation",void 0),(0,n._)([(0,u.Cb)()],t.prototype,"ioConfig",void 0),(0,n._)([(0,u.Cb)({type:[C.Z]})],t.prototype,"multidimensionalDefinition",null),(0,n._)([(0,u.Cb)()],t.prototype,"raster",void 0),(0,n._)([(0,u.Cb)({readOnly:!0}),(0,w.B)("raster.rasterInfo")],t.prototype,"rasterInfo",void 0),(0,n._)([(0,u.Cb)()],t.prototype,"sourceJSON",void 0),(0,n._)([(0,u.Cb)({type:P.Z}),(0,w.B)("rasterInfo.spatialReference")],t.prototype,"spatialReference",void 0),(0,n._)([(0,u.Cb)({type:R.Z}),(0,w.B)("rasterInfo.storageInfo.tileInfo")],t.prototype,"tileInfo",void 0),(0,n._)([(0,u.Cb)(_.HQ)],t.prototype,"url",null),(0,n._)([(0,u.Cb)({types:s.dr})],t.prototype,"renderer",null),(0,n._)([(0,u.Cb)()],t.prototype,"symbolizer",void 0),t=(0,n._)([(0,m.j)("esri.layers.ImageryTileMixin")],t),t};var D=i(5677),z=i(67843),B=i(97027),Z=i(42673),A=i(73132),N=i(55604),L=i(45119),E=i(61553),H=i(12210),J=i(12659),j=i(79197),q=i(79031),W=i(62296),U=i(28769),$=i(75508);let G=class extends((0,J.v)(H.wq)){constructor(){super(...arguments),this.rasterJobHandler=null,this.datasetName=null,this.datasetFormat=null,this.rasterInfo=null,this.ioConfig={sampling:"closest"}}async init(){const e=(0,U.zD)();this.addResolvingPromise(e),await this.when()}normalizeCtorArgs(e){return e&&e.ioConfig&&(e={...e,ioConfig:{resolution:null,bandIds:null,sampling:"closest",tileInfo:R.Z.create(),...e.ioConfig}}),e}set url(e){this._set("url",(0,I.Nm)(e,f.Z.getLogger(this.declaredClass)))}async open(e){throw new a.Z("BaseRaster:open-not-implemented","open() is not implemented")}async fetchTile(e,t,i,n={}){var r;const{tileInfo:s}=n,a=s.lodAt(e),l=this.getTileExtent({x:a.resolution,y:a.resolution},t,i,s.origin,s.spatialReference,s.size);return null!=(r=n.multidimensionalDefinition)&&r.length&&(0,o.pC)(this.rasterInfo.multidimensionalInfo)&&null==n.sliceId&&(n={...n,sliceId:this.getSliceIndex(n.multidimensionalDefinition)||0}),this.fetchPixels(l,s.size[0],s.size[1],n)}async identify(e,t={}){const{spatialReference:i,extent:n}=this.rasterInfo,{datumTransformation:r}=t;let s=(0,U.nF)(e,i,r);if(!n.intersects(s))return{location:s,value:null};if((0,o.pC)(this.rasterInfo.transform)){const e=this.rasterInfo.transform.inverseTransform(s);if(!this.rasterInfo.nativeExtent.intersects(e))return{location:e,value:null};s=e}let a=0;if(t.srcResolution)a=(0,U.kr)(t.srcResolution,this.rasterInfo,this.ioConfig.sampling).pyramidLevel;else if(a=await this.computeBestPyramidLevelForLocation(e,t),null==a)return{location:s,value:null};const l=this.identifyPixelLocation(s,a,null);if(null===l)return{location:s,value:null};const{row:c,col:u,rowOffset:h,colOffset:f}=l,d=(0,j.Rq)(this.url,t.sliceId),p=`${a}/${c}/${u}`;let m=(0,j.Qg)(d,null,p);(0,o.pC)(m)||(m=this.fetchRawTile(a,c,u,t),(0,j.gX)(d,null,p,m));const y=await m;if(!(y&&y.pixels&&y.pixels.length>0))return{location:s,value:null};const g=h*this.rasterInfo.storageInfo.blockHeight+f;return{location:s,value:!y.mask||y.mask[g]?y.pixels.map((e=>e[g])):null,pyramidLevel:a}}async fetchPixels(e,t,i,n={}){e=(0,U.kZ)(e);const r=(0,U.Hq)(e),s=this.rasterInfo.spatialReference,a=!e.spatialReference.equals(s),{datumTransformation:l}=n,c=new $.Z({x:(e.xmax-e.xmin)/t,y:(e.ymax-e.ymin)/i,spatialReference:e.spatialReference}),u=n.srcResolution||(a?(0,U.VO)(c,s,e,l):c);if(!u)return null;const{pyramidLevel:h,pyramidResolution:f,excessiveReading:d}=(0,U.kr)(u,this.rasterInfo,this.ioConfig.sampling);if(d)return null;const p=this.rasterInfo.storageInfo;let m=a?(0,U.tB)(e,s,l):e;const y=(0,o.Wg)(this.rasterInfo.transform);if(y&&(m=y.inverseTransform(m)),null==m)return null;const g={x:Math.floor((m.xmin-p.origin.x)/f.x+.1),y:Math.floor((p.origin.y-m.ymax)/f.y+.1)},x=Math.ceil((m.xmax-m.xmin)/f.x-.1),v=Math.ceil((m.ymax-m.ymin)/f.y-.1);if(x/t>8||v/i>8||r>=2)return null;const w=await this.fetchRawPixels(h,g,{width:x,height:v,wrapCount:r},n);if(!w)return null;const b=h>0?p.pyramidBlockWidth:p.blockWidth,I=h>0?p.pyramidBlockHeight:p.blockHeight;if(!a&&1===w.pixelBlocks.length&&b===t&&I===i&&u.x===c.x&&u.y===c.y)return{extent:e,srcExtent:m,pixelBlock:w.pixelBlocks[0]};const _=(0,U.Qp)(e,w.extent,c,l,y,r>0);let C;const S=!n.requestRawData,R={rows:_.spacing[0],cols:_.spacing[1]},T=(0,o.Wg)(this._getRasterTileAlignmentInfo(h,w.extent.xmin)),{pixelBlocks:M,mosaicSize:k,isPartiallyFilled:P}=w;if(this.rasterJobHandler)C=await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:M,srcMosaicSize:k,destDimension:S?{width:t,height:i}:null,coefs:S?_.coefficients:null,sampleSpacing:S?R:null,interpolation:n.interpolation,alignmentInfo:T},n);else{const e=(0,W.us)(M,k,null,null,T);C=S?(0,W.Uk)(e,{width:t,height:i},_.coefficients,R,n.interpolation):e}return n.requestRawData?{srcExtent:m,pixelBlock:C,transformGrid:_,extent:e,isPartiallyFilled:P}:{srcExtent:m,extent:e,pixelBlock:C}}async fetchRawPixels(e,t,i,n){const{origin:r,blockBoundary:s}=this.rasterInfo.storageInfo,{blockWidth:a,blockHeight:l}=this.getBlockWidthHeight(e);let{x:c,y:u}=t,{width:h,height:f,wrapCount:d}=i;const p=(0,o.Wg)(this._getRasterTileAlignmentInfo(e,0));n.buffer&&(c-=n.buffer.cols,u-=n.buffer.rows,h+=2*n.buffer.cols,f+=2*n.buffer.rows);const m=Math.floor(c/a),y=Math.floor(u/l),g=Math.floor((c+h-1)/a),x=Math.floor((u+f-1)/l),v=s[e];if(!v)return null;const{minRow:w,minCol:b,maxCol:I,maxRow:_}=v;if(x<w||g<b||y>_||m>I)return null;const C=[];let S,R=!1;for(let t=y;t<=x;t++)for(let i=m;i<=g;i++){const r=0===d||null==p||i<p.worldColumnCountFromOrigin?i:i%p.worldColumnCountFromOrigin-p.originColumnOffset;t>=w&&r>=b&&_>=t&&I>=r?(S=this._fetchRawTile(e,t,r,n),this.ioConfig.allowPartialFill&&(S=new Promise((e=>{S.then((t=>e(t))).catch((()=>{R=!0,e(null)}))}))),C.push(S)):C.push(null)}if(0===C.length)return null;const T=await Promise.all(C),M={height:(x-y+1)*l,width:(g-m+1)*a},{spatialReference:P}=this.rasterInfo,O=this.getPyramidPixelSize(e),{x:F,y:D}=O;return{extent:new k.Z({xmin:r.x+m*a*F,xmax:r.x+(g+1)*a*F,ymin:r.y-(x+1)*l*D,ymax:r.y-y*l*D,spatialReference:P}),pixelBlocks:T,mosaicSize:M,isPartiallyFilled:R}}async fetchRawTile(e,t,i,n){throw new a.Z("BaseRaster:read-not-implemented","fetchRawTile() is not implemented")}computeExtent(e){return(0,U.tB)(this.rasterInfo.extent,e)}decodePixelBlock(e,t){return!this.rasterJobHandler||t.useCanvas?(0,q.Jx)(e,t):this.rasterJobHandler.decode({data:e,options:t})}async request(e,t,i){var n,r;const{customFetchParameters:s}=this.ioConfig,{range:a,query:o,headers:l}=t;i=null!=(n=null!=(r=i)?r:t.retryCount)?n:this.ioConfig.retryCount;const c=a?{Range:`bytes=${a.from}-${a.to}`}:null;try{return await(0,v.default)(e,{...t,query:{...o,...s},headers:{...l,...c}})}catch(n){if(i>0)return i--,this.request(e,t,i);throw n}}getSliceIndex(e){const{multidimensionalInfo:t}=this.rasterInfo;if(!(0,o.pC)(t)||null==e||!e.length)return null;let i=0;const n=e[0].variableName;for(let r=0;r<t.variables.length;r++){const s=t.variables[r],a=s.dimensions;if(s.name!==n){i+=a.map((e=>this._getDimensionValuesCount(e))).reduce(((e,t)=>e+t));break}const o=a.map((e=>this._getDimensionValuesCount(e))),l=a.length;for(let t=0;t<l;t++){const n=e.filter((e=>e.dimensionName===a[t].name))[0];if(null==n)return null;const r=Array.isArray(n.values[0])?n.values[0][0]:n.values[0],s=this._getIndexFromDimensions(r,a[t]);if(-1===s)return null;o.shift(),i+=t===l-1?s:s*o.reduce(((e,t)=>e+t))}}return i}updateTileInfo(){const{storageInfo:e,spatialReference:t,extent:i,pixelSize:n}=this.rasterInfo;if(!e.tileInfo){const r=[],s=e.maximumPyramidLevel||0;let a=Math.max(n.x,n.y),o=1/.0254*96*a;for(let e=0;e<=s;e++)r.push({level:s-e,resolution:a,scale:o}),a*=2,o*=2;const l=new $.Z({x:i.xmin,y:i.ymax,spatialReference:t});e.tileInfo=new R.Z({origin:l,size:[e.blockWidth,e.blockHeight],spatialReference:t,lods:r}),e.isVirtualTileInfo=!0}}createRemoteDatasetStorageInfo(e,t=512,i=512,n){const{width:r,height:s,nativeExtent:a,pixelSize:o,spatialReference:l}=e,c=new $.Z({x:a.xmin,y:a.ymax,spatialReference:l});null==n&&(n=Math.max(0,Math.round(Math.log(Math.max(r,s))/Math.LN2-8)));const u=this.computeBlockBoundary(a,512,512,{x:a.xmin,y:a.ymax},[o],n);e.storageInfo=new E.Z({blockWidth:t,blockHeight:i,pyramidBlockWidth:t,pyramidBlockHeight:i,origin:c,firstPyramidLevel:1,maximumPyramidLevel:n,blockBoundary:u})}async computeBestPyramidLevelForLocation(e,t={}){return 0}computeBlockBoundary(e,t,i,n,r,s=0,a=2){if(1===r.length&&s>0){r=[...r];let{x:e,y:t}=r[0];for(let i=0;i<s;i++)e*=a,t*=a,r.push({x:e,y:t})}const o=[],{x:l,y:c}=n;for(let n=0;n<r.length;n++){const{x:s,y:a}=r[n];o.push({minCol:Math.floor((e.xmin-l+.1*s)/t/s),maxCol:Math.floor((e.xmax-l-.1*s)/t/s),minRow:Math.floor((c-e.ymax+.1*a)/i/a),maxRow:Math.floor((c-e.ymin-.1*a)/i/a)})}return o}getPyramidPixelSize(e){const{nativePixelSize:t}=this.rasterInfo,{pyramidResolutions:i,pyramidScalingFactor:n}=this.rasterInfo.storageInfo;if(0===e)return t;if((0,o.pC)(i)&&i.length)return i[e-1];const r=n**e;return{x:t.x*r,y:t.y*r}}identifyPixelLocation(e,t,i){const{spatialReference:n,nativeExtent:r}=this.rasterInfo,{blockWidth:s,blockHeight:a,maximumPyramidLevel:o,origin:l}=this.rasterInfo.storageInfo,c=(0,U.nF)(e,n,i);if(!r.intersects(c))return null;if(t<0||t>o)return null;const u=this.getPyramidPixelSize(t),{x:h,y:f}=u,d=(l.y-c.y)/f/a,p=(c.x-l.x)/h/s,m=Math.min(a-1,Math.floor((d-Math.floor(d))*a)),y=Math.min(s-1,Math.floor((p-Math.floor(p))*s));return{pyramidLevel:t,row:Math.floor(d),col:Math.floor(p),rowOffset:m,colOffset:y,srcLocation:c}}getTileExtent(e,t,i,n,r,s){const[a,o]=s,l=n.x+i*a*e.x,c=l+a*e.x,u=n.y-t*o*e.y,h=u-o*e.y;return new k.Z({xmin:l,xmax:c,ymin:h,ymax:u,spatialReference:r})}getBlockWidthHeight(e){return{blockWidth:e>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,blockHeight:e>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight}}isBlockOutside(e,t,i){const n=this.rasterInfo.storageInfo.blockBoundary[e];return!n||n.maxRow<t||n.maxCol<i||n.minRow>t||n.minCol>i}_fetchRawTile(e,t,i,n){const r=this.rasterInfo.storageInfo.blockBoundary[e];if(!r)return Promise.resolve(null);const{minRow:s,minCol:a,maxCol:l,maxRow:u}=r;if(t<s||i<a||t>u||i>l)return Promise.resolve(null);const h=(0,j.Rq)(this.url,n.sliceId),f=`${e}/${t}/${i}`;let d=(0,j.Qg)(h,n.registryId,f);if(!(0,o.pC)(d)){const r=(0,c.yi)();d=this.fetchRawTile(e,t,i,{...n,signal:r.signal}),(0,j.gX)(h,n.registryId,f,d,r),d.catch((()=>{(0,j.Gc)(h,n.registryId,f)}))}return n.signal&&(0,c.fu)(n,(()=>{(0,j.OE)(h,n.registryId,f)})),d}_getIndexFromDimensions(e,t){const{extent:i,interval:n,unit:r,values:s}=t;if(null!=s&&s.length)return Array.isArray(s[0])?s.findIndex((t=>t[0]<=e&&t[1]>=e)):s.indexOf(e);if(e>i[1])return-1;const a=i[0];let o=-1;if("ISO8601"===r){var l;switch((null==(l=t.intervalUnit)?void 0:l.toLowerCase())||"seconds"){case"seconds":o=Math.round((e-a)/1e3/n);break;case"minutes":o=Math.round((e-a)/6e4/n);break;case"hours":o=Math.round((e-a)/36e5/n);break;case"days":o=Math.round((e-a)/864e5/n);break;case"years":o=Math.round((new Date(e).getUTCFullYear()-new Date(a).getUTCFullYear())/n);break;case"decades":o=Math.round((new Date(e).getUTCFullYear()-new Date(a).getUTCFullYear())/10/n)}return o}return Math.round((e-a)/n)}_getDimensionValuesCount(e){const{extent:t,interval:i,unit:n,values:r}=e;let s=(null==r?void 0:r.length)||0;if(s)return s;const a=t[0];if(0===s&&"ISO8601"===n){var o;switch((null==(o=e.intervalUnit)?void 0:o.toLowerCase())||"seconds"){case"seconds":s=Math.round((t[1]-t[0])/1e3/i);break;case"minutes":s=Math.round((t[1]-t[0])/6e4/i);break;case"hours":s=Math.round((t[1]-t[0])/36e5/i);break;case"days":s=Math.round((t[1]-t[0])/864e5/i);break;case"years":s=Math.round((new Date(t[1]).getUTCFullYear()-new Date(a).getUTCFullYear())/i);break;case"decades":s=Math.round((new Date(t[1]).getUTCFullYear()-new Date(a).getUTCFullYear())/10/i)}return s}return Math.round((t[1]-t[0])/i)}_getRasterTileAlignmentInfo(e,t){return null==this._rasterTileAlighmentInfo&&(this._rasterTileAlighmentInfo=(0,U.P_)(this.rasterInfo)),(0,o.pC)(this._rasterTileAlighmentInfo.pyramidsInfo)?{startX:t,halfWorldWidth:this._rasterTileAlighmentInfo.halfWorldWidth,hasGCSSShiftTransform:this._rasterTileAlighmentInfo.hasGCSSShiftTransform,...this._rasterTileAlighmentInfo.pyramidsInfo[e]}:null}};(0,n._)([(0,u.Cb)()],G.prototype,"_rasterTileAlighmentInfo",void 0),(0,n._)([(0,u.Cb)(_.HQ)],G.prototype,"url",null),(0,n._)([(0,u.Cb)({type:String,json:{write:!0}})],G.prototype,"datasetName",void 0),(0,n._)([(0,u.Cb)({type:String,json:{write:!0}})],G.prototype,"datasetFormat",void 0),(0,n._)([(0,u.Cb)()],G.prototype,"rasterInfo",void 0),(0,n._)([(0,u.Cb)()],G.prototype,"ioConfig",void 0),(0,n._)([(0,u.Cb)()],G.prototype,"sourceJSON",void 0),G=(0,n._)([(0,m.j)("esri.layers.support.rasterDatasets.BaseRaster")],G);const V=G;var X=i(56045);function Y(e){const t=e.fields,i=e.records,n=t.some((e=>"oid"===e.name.toLowerCase()))?"OBJECTID":"OID",r=[{name:n,type:"esriFieldTypeOID",alias:"OID"}].concat(t.map((e=>({name:e.name,type:"esriFieldType"+e.typeName,alias:e.name})))),s=r.map((e=>e.name)),a=[];let o=0,l=0;return i.forEach((e=>{const t={};for(t[n]=o++,l=1;l<s.length;l++)t[s[l]]=e[l-1];a.push({attributes:t})})),{displayFieldName:"",fields:r,features:a}}const Q=class{static get supportedVersions(){return[5]}static parse(e){const t=new DataView(e),i=3&t.getUint8(0);if(3!==i)return{header:{version:i},recordSet:null};const n=t.getUint32(4,!0),r=t.getUint16(8,!0),s=t.getUint16(10,!0),a={version:i,recordCount:n,headerByteCount:r,recordByteCount:s};let o=32;const l=[],c=[];let u;if(3===i){for(;13!==t.getUint8(o);)u=String.fromCharCode(t.getUint8(o+11)).trim(),l.push({name:(0,X.f)(new Uint8Array(e,o,11)),type:u,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(u)],length:t.getUint8(o+16)}),o+=32;if(o+=1,l.length>0)for(;c.length<n&&e.byteLength-o>s;){const i=[];32===t.getUint8(o)?(o+=1,l.forEach((t=>{if("C"===t.type)i.push((0,X.f)(new Uint8Array(e,o,t.length)).trim());else if("N"===t.type)i.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim(),10));else if("F"===t.type)i.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim()));else if("D"===t.type){const n=String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim();i.push(new Date(parseInt(n.substring(0,4),10),parseInt(n.substring(4,6),10)-1,parseInt(n.substring(6,8),10)))}o+=t.length})),c.push(i)):o+=s}}return{header:a,fields:l,records:c,recordSet:Y({fields:l,records:c})}}};let K=class extends H.wq{constructor(){super(...arguments),this.affectsPixelSize=!1}forwardTransform(e){return e}inverseTransform(e){return e}};(0,n._)([(0,u.Cb)()],K.prototype,"affectsPixelSize",void 0),(0,n._)([(0,u.Cb)({json:{write:!0}})],K.prototype,"spatialReference",void 0),K=(0,n._)([(0,m.j)("esri.layers.support.rasterTransforms.BaseRasterTransform")],K);const ee=K;let te=class extends ee{constructor(){super(...arguments),this.type="identity"}};(0,n._)([(0,d.J)({IdentityXform:"identity"})],te.prototype,"type",void 0),te=(0,n._)([(0,m.j)("esri.layers.support.rasterTransforms.IdentityTransform")],te);const ie=te;var ne=i(81018);function re(e,t,i){const{x:n,y:r}=t;if(i<2)return{x:e[0]+n*e[2]+r*e[4],y:e[1]+n*e[3]+r*e[5]};if(2===i){const t=n*n,i=r*r,s=n*r;return{x:e[0]+n*e[2]+r*e[4]+t*e[6]+s*e[8]+i*e[10],y:e[1]+n*e[3]+r*e[5]+t*e[7]+s*e[9]+i*e[11]}}const s=n*n,a=r*r,o=n*r,l=s*n,c=s*r,u=n*a,h=r*a;return{x:e[0]+n*e[2]+r*e[4]+s*e[6]+o*e[8]+a*e[10]+l*e[12]+c*e[14]+u*e[16]+h*e[18],y:e[1]+n*e[3]+r*e[5]+s*e[7]+o*e[9]+a*e[11]+l*e[13]+c*e[15]+u*e[17]+h*e[19]}}function se(e,t,i){const{xmin:n,ymin:r,xmax:s,ymax:a,spatialReference:o}=t;let l=[];if(i<2)l.push({x:n,y:a}),l.push({x:s,y:a}),l.push({x:n,y:r}),l.push({x:s,y:r});else{let e=10;for(let t=0;t<e;t++)l.push({x:n,y:r+(a-r)*t/(e-1)}),l.push({x:s,y:r+(a-r)*t/(e-1)});e=8;for(let t=1;t<=e;t++)l.push({x:n+(s-n)*t/e,y:r}),l.push({x:n+(s-n)*t/e,y:a})}l=l.map((t=>re(e,t,i)));const c=l.map((e=>e.x)),u=l.map((e=>e.y));return new k.Z({xmin:Math.min.apply(null,c),xmax:Math.max.apply(null,c),ymin:Math.min.apply(null,u),ymax:Math.max.apply(null,u),spatialReference:o})}let ae=class extends ee{constructor(){super(...arguments),this.polynomialOrder=1,this.type="polynomial"}readForwardCoefficients(e,t){const{coeffX:i,coeffY:n}=t;if(null==i||!i.length||null==n||!n.length||i.length!==n.length)return null;const r=[];for(let e=0;e<i.length;e++)r.push(i[e]),r.push(n[e]);return r}writeForwardCoefficients(e,t,i){const n=[],r=[];for(let t=0;t<(null==e?void 0:e.length);t++)t%2==0?n.push(e[t]):r.push(e[t]);t.coeffX=n,t.coeffY=r}get inverseCoefficients(){let e=this._get("inverseCoefficients");const t=this._get("forwardCoefficients");return!e&&t&&this.polynomialOrder<2&&(e=function(e){const[t,i,n,r,s,a]=e,o=n*a-s*r,l=s*r-n*a;return[(s*i-t*a)/o,(n*i-t*r)/l,a/o,r/l,-s/o,-n/l]}(t)),e}set inverseCoefficients(e){this._set("inverseCoefficients",e)}readInverseCoefficients(e,t){const{inverseCoeffX:i,inverseCoeffY:n}=t;if(null==i||!i.length||null==n||!n.length||i.length!==n.length)return null;const r=[];for(let e=0;e<i.length;e++)r.push(i[e]),r.push(n[e]);return r}writeInverseCoefficients(e,t,i){const n=[],r=[];for(let t=0;t<(null==e?void 0:e.length);t++)t%2==0?n.push(e[t]):r.push(e[t]);t.inverseCoeffX=n,t.inverseCoeffY=r}forwardTransform(e){if("point"===e.type){const t=re(this.forwardCoefficients,e,this.polynomialOrder);return new $.Z({x:t.x,y:t.y,spatialReference:e.spatialReference})}return se(this.forwardCoefficients,e,this.polynomialOrder)}inverseTransform(e){if("point"===e.type){const t=re(this.inverseCoefficients,e,this.polynomialOrder);return new $.Z({x:t.x,y:t.y,spatialReference:e.spatialReference})}return se(this.inverseCoefficients,e,this.polynomialOrder)}};(0,n._)([(0,u.Cb)({json:{write:!0}})],ae.prototype,"polynomialOrder",void 0),(0,n._)([(0,u.Cb)()],ae.prototype,"forwardCoefficients",void 0),(0,n._)([(0,p.r)("forwardCoefficients",["coeffX","coeffY"])],ae.prototype,"readForwardCoefficients",null),(0,n._)([(0,ne.c)("forwardCoefficients")],ae.prototype,"writeForwardCoefficients",null),(0,n._)([(0,u.Cb)({json:{write:!0}})],ae.prototype,"inverseCoefficients",null),(0,n._)([(0,p.r)("inverseCoefficients",["inverseCoeffX","inverseCoeffY"])],ae.prototype,"readInverseCoefficients",null),(0,n._)([(0,ne.c)("inverseCoefficients")],ae.prototype,"writeInverseCoefficients",null),(0,n._)([(0,u.Cb)()],ae.prototype,"affectsPixelSize",void 0),(0,n._)([(0,d.J)({PolynomialXform:"polynomial"})],ae.prototype,"type",void 0),ae=(0,n._)([(0,m.j)("esri.layers.support.rasterTransforms.PolynomialTransform")],ae);const oe=ae,le={PolynomialXform:oe,IdentityXform:ie},ce=Object.keys(le);var ue=i(4130);const he=new Map;he.set("int16","esriFieldTypeSmallInteger"),he.set("int32","esriFieldTypeInteger"),he.set("int64","esriFieldTypeInteger"),he.set("float32","esriFieldTypeSingle"),he.set("float64","esriFieldTypeDouble"),he.set("text","esriFieldTypeString");let fe=class extends V{constructor(){super(...arguments),this.storageInfo=null,this.datasetFormat="CRF"}async open(e){await this.init();const{data:t}=await this.request(this.url+"/conf.json",{signal:null==e?void 0:e.signal});if(!this._validateHeader(t))throw new a.Z("cloudraster:open","Invalid or unsupported conf.json.");this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{storageInfo:i,rasterInfo:n}=this._parseHeader(t);if("thematic"===n.dataType){const e=await this._fetchAuxiliaryInformation();n.attributeTable=e}this._set("storageInfo",i),this._set("rasterInfo",n),this.ioConfig.retryCount=this.ioConfig.retryCount||0}async fetchRawTile(e,t,i,n={}){const r=this.rasterInfo.storageInfo.maximumPyramidLevel-e;if(r<0)return null;const s=this._buildCacheFilePath(r,t,i,n.multidimensionalDefinition),a=this._getIndexRecordFromBundle(t,i),o=await this.request(s,{range:{from:0,to:this.storageInfo.headerSize-1},responseType:"array-buffer",signal:n.signal});if(!o)return null;const l=new Uint8Array(o.data),c=this._getTileEndAndContentType(l,a);if(0===c.recordSize)return null;const u=await this.request(s,{range:{from:c.position,to:c.position+c.recordSize},responseType:"array-buffer",signal:n.signal});return u?this.decodePixelBlock(u.data,{width:this.rasterInfo.storageInfo.tileInfo.size[0],height:this.rasterInfo.storageInfo.tileInfo.size[1],planes:null,pixelType:null}):null}_validateHeader(e){return e&&"RasterInfo"===e.type&&!["origin","extent","geodataXform","LODInfos","blockWidth","blockHeight","bandCount","pixelType","pixelSizeX","pixelSizeY","format","packetSize"].some((t=>!e[t]))}_parseHeader(e){var t,i;const n=["u1","u2","u4","u8","s8","u16","s16","u32","s32","f32","f64"][e.pixelType],{bandCount:r,histograms:s,colormap:a,blockWidth:o,blockHeight:l,firstPyramidLevel:c,maximumPyramidLevel:u}=e,h=e.statistics&&e.statistics.map((e=>({min:e.min,max:e.max,avg:e.mean,stddev:e.standardDeviation,median:e.median,mode:e.mode}))),f=e.extent.spatialReference,d=null==(t=e.geodataXform)?void 0:t.spatialReference,p=new P.Z(null!=f&&f.wkid||null!=f&&f.wkt?f:d);let m=new k.Z({xmin:e.extent.xmin,ymin:e.extent.ymin,xmax:e.extent.xmax,ymax:e.extent.ymax,spatialReference:p});const y=new $.Z({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:p}),g=Math.round((m.xmax-m.xmin)/y.x),x=Math.round((m.ymax-m.ymin)/y.y),v=this._parseTransform(e.geodataXform),w=v?m:null;v&&(m=v.forwardTransform(m),y.x=(m.xmax-m.xmin)/g,y.y=(m.ymax-m.ymin)/x);const b=null!=(i=e.properties)?i:{},I=e.format.toLowerCase().replace("cache/",""),_=new $.Z(e.origin.x,e.origin.y,p);let C,S,T,M;if(a&&a.colors)for(C=[],S=0;S<a.colors.length;S++)T=a.colors[S],M=a.values?a.values[S]:S,C.push([M,255&T,T<<16>>>24,T<<8>>>24,T>>>24]);const O=e.LODInfos,F=[];for(S=0;S<O.levels.length;S++)F.push({level:O.levels[S],resolution:O.resolutions[S],scale:96/.0254*O.resolutions[S]});const D=new R.Z({dpi:96,lods:F,format:I,origin:_,size:[o,l],spatialReference:p}),z={recordSize:8,packetSize:e.packetSize,headerSize:e.packetSize*e.packetSize*8+64},B=[{maxCol:Math.ceil(g/o)-1,maxRow:Math.ceil(x/l)-1,minCol:0,minRow:0}];let Z=2;if(u>0)for(S=0;S<u;S++)B.push({maxCol:Math.ceil(g/Z/o)-1,maxRow:Math.ceil(x/Z/l)-1,minCol:0,minRow:0}),Z*=2;const A=e.mdInfo;return{storageInfo:z,rasterInfo:new L.Z({width:g,height:x,pixelType:n,bandCount:r,extent:m,nativeExtent:w,transform:v,spatialReference:p,pixelSize:y,keyProperties:b,statistics:h,histograms:s,multidimensionalInfo:A,colormap:C,storageInfo:new E.Z({blockWidth:o,blockHeight:l,pyramidBlockWidth:o,pyramidBlockHeight:l,origin:_,tileInfo:D,firstPyramidLevel:c,maximumPyramidLevel:u,blockBoundary:B})})}}_parseTransform(e){var t,i;if(!function(e){const t=null==e?void 0:e.type;return!e||ce.includes(t)}(e))throw new a.Z("cloudraster:open","the data contains unsupported geodata transform types");const n=function(e){if(!(null==e?void 0:e.type))return null;const t=le[null==e?void 0:e.type];if(t){const i=new t;return i.read(e),i}return null}(e);if("identity"===n.type)return null;if("polynomial"!==n.type||null==(t=n.forwardCoefficients)||!t.length||null==(i=n.inverseCoefficients)||!i.length)throw new a.Z("cloudraster:open","the data contains unsupported geodata transforms - both forward and inverse coefficients are required currently");return n}async _fetchAuxiliaryInformation(e){const t=this.request(this.url+"/conf.vat.json",{signal:e}).then((e=>e.data)).catch((()=>null)),i=this.request(this.url+"/conf.vat.dbf",{responseType:"array-buffer",signal:e}).then((e=>e.data)).catch((()=>null)),n=await Promise.all([t,i]);let r;if(n[0]){let e=n[0].fields;const t=n[0].values;if(e&&t){e=e.map((e=>({type:"OID"===e.name?"esriFieldTypeOID":he.get(e.type),name:e.name,alias:e.alias||e.name})));const i=t.map((e=>({attributes:e})));e&&t&&(r={fields:e,features:i})}}return!r&&n[1]&&(r=Q.parse(n[1]).recordSet),ue.default.fromJSON(r)}_buildCacheFilePath(e,t,i,n){const r=this.storageInfo.packetSize,s=Math.floor(t/r)*r,a=Math.floor(i/r)*r,l="R"+this._toHexString4(s)+"C"+this._toHexString4(a);let c="L";c+=e>=10?e.toString():"0"+e.toString();const{multidimensionalInfo:u}=this.rasterInfo,h=null==n?void 0:n[0];if(!(0,o.pC)(u)||!h)return`${this.url}/_alllayers/${c}/${l}.bundle`;let f=u.variables.filter((e=>e.name===h.variableName))[0].dimensions[0].values.indexOf(h.values[0]).toString(16);const d=4-f.length;for(let e=0;e<d;e++)f="0"+f;return f="S"+f,`${this.url}/_alllayers/${h.variableName}/${f}/${c}/${l}.bundle`}_getIndexRecordFromBundle(e,t){const i=this.storageInfo.packetSize,n=i*(e%i)+t%i;if(n<0)throw"Invalid level / row / col";return 20+n*this.storageInfo.recordSize+44}_getTileEndAndContentType(e,t){const i=e.subarray(t,t+8);let n,r=0;for(n=0;n<5;n++)r|=(255&i[n])<<8*n;const s=0xffffffffff&r;for(r=0,n=5;n<8;n++)r|=(255&i[n])<<8*(n-5);return{position:s,recordSize:0xffffffffff&r}}_toHexString4(e){let t=e.toString(16);if(4!==t.length){let e=4-t.length;for(;e-- >0;)t="0"+t}return t}};(0,n._)([(0,u.Cb)({readOnly:!0})],fe.prototype,"storageInfo",void 0),(0,n._)([(0,u.Cb)({type:String,json:{write:!0}})],fe.prototype,"datasetFormat",void 0),fe=(0,n._)([(0,m.j)("esri.layers.support.rasterDatasets.CloudRaster")],fe);const de=fe;let pe=class extends V{constructor(){super(...arguments),this.datasetFormat="MEMORY"}async open(e){var t;await this.init();const{pixelBlock:i,statistics:n,histograms:r,name:s,keyProperties:a,nativeExtent:o,transform:l}=this.data,{width:c,height:u,pixelType:h}=i,f=this.data.extent||new k.Z({xmin:-.5,ymin:.5,xmax:c-.5,ymax:u-.5,spatialReference:new P.Z({wkid:3857})}),d=null!=(t=this.data.isPseudoSpatialReference)?t:!this.data.extent,p={x:f.width/c,y:f.height/u},m=new L.Z({width:c,height:u,pixelType:h,extent:f,nativeExtent:o,transform:l,pixelSize:p,spatialReference:f.spatialReference,bandCount:3,keyProperties:a||{},statistics:n,isPseudoSpatialReference:d,histograms:r});this.createRemoteDatasetStorageInfo(m,512,512),this._set("rasterInfo",m),this.updateTileInfo(),await this._buildInMemoryRaster(i,{width:512,height:512},e),this.datasetName=s,this.url="/InMemory/"+s}fetchRawTile(e,t,i,n={}){const r=this._pixelBlockTiles.get(`${e}/${t}/${i}`);return Promise.resolve(r)}async _buildInMemoryRaster(e,t,i){const n=this.rasterInfo.storageInfo.maximumPyramidLevel,r=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:e,tileSize:t,maximumPyramidLevel:n},i):Promise.resolve((0,W.Vl)(e,t,n)),s=(0,o.pC)(this.rasterInfo.statistics),l=(0,o.pC)(this.rasterInfo.histograms),u=s&&l?Promise.resolve({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:e},i):Promise.resolve((0,W.Hv)(e)),h=await(0,c.as)([r,u]);if(!h[0].value&&h[1].value)throw new a.Z("inmemory-raster:open","failed to build in memory raster");var f,d;this._pixelBlockTiles=h[0].value,s||(this.rasterInfo.statistics=null==(f=h[1].value)?void 0:f.statistics),l&&(this.rasterInfo.histograms=null==(d=h[1].value)?void 0:d.histograms)}};(0,n._)([(0,u.Cb)({type:String,json:{write:!0}})],pe.prototype,"datasetFormat",void 0),(0,n._)([(0,u.Cb)()],pe.prototype,"data",void 0),pe=(0,n._)([(0,m.j)("esri.layers.support.rasterDatasets.InMemoryRaster")],pe);const me=pe;function ye(e,t){if(!e||!t)return[];let i=t;t.indexOf("/")>-1?(i=t.slice(0,t.indexOf("/")),t=t.slice(t.indexOf("/")+1)):t="";const n=[];if(t){const r=ye(e,i);for(let e=0;e<r.length;e++)ye(r[e],t).forEach((e=>n.push(e)));return n}const r=e.getElementsByTagNameNS("*",i);if(!r||0===r.length)return[];for(let e=0;e<r.length;e++)n.push(r[e]||r.item[e]);return n}function ge(e,t){if(!e||!t)return null;let i=t;t.indexOf("/")>-1?(i=t.slice(0,t.indexOf("/")),t=t.slice(t.indexOf("/")+1)):t="";const n=ye(e,i);return n.length>0?t?ge(n[0],t):n[0]:null}function xe(e,t=null){const i=t?ge(e,t):e;let n;return i?(n=i.textContent||i.nodeValue,n?n.trim():null):null}function ve(e,t){const i=ye(e,t),n=[];let r;for(let e=0;e<i.length;e++)r=i[e].textContent||i[e].nodeValue,r&&(r=r.trim(),""!==r&&n.push(r));return n}function we(e,t){return ve(e,t).map((e=>Number(e)))}function be(e,t){const i=xe(e,t);return Number(i)}function Ie(e,t){var i;const n=null==e||null==(i=e.nodeName)?void 0:i.toLowerCase(),r=t.toLowerCase();return n.slice(n.lastIndexOf(":")+1)===r}function _e(e,t){if(!e||!t)return null;const i=[];for(let n=0;n<e.length;n++)i.push(e[n]),i.push(t[n]);return i}function Ce(e){if(!e)return null;let t=Number(e);if(!isNaN(t)&&0!==t)return new P.Z({wkid:t});if((e=String(e)).startsWith("COMPD_CS")){if(!e.includes("VERTCS")||!e.includes("GEOGCS")&&!e.startsWith("PROJCS"))return null;const i=e.indexOf("VERTCS"),n=e.indexOf("PROJCS"),r=n>-1?n:e.indexOf("GEOGCS");if(-1===r)return null;const s=e.slice(r,e.lastIndexOf("]",i)+1).trim(),a=e.slice(r,e.lastIndexOf("]")).trim();t=Se(s);const o=new P.Z(t?{wkid:t}:{wkt:s}),l=Se(a);return l&&(o.vcsWkid=l),o}return e.startsWith("GEOGCS")||e.startsWith("PROJCS")?(t=Se(e),new P.Z(0!==t?{wkid:t}:{wkt:e})):null}function Se(e){const t=e.replace(/\]/g,"[").replace(/\"/g,"").split("[").map((e=>e.trim())).filter((e=>""!==e)),i=t[t.length-1].split(",");if("EPSG"===i[0]&&e.endsWith('"]]')){const e=Number(i[1]);if(!isNaN(e)&&0!==e)return e}return 0}function Re(e){var t;if("pamdataset"!==(null==e||null==(t=e.documentElement.tagName)?void 0:t.toLowerCase()))return{};const i={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};e.documentElement.childNodes.forEach((e=>{if(1===e.nodeType)if(Ie(e,"SRS")){if(!i.spatialReference){const t=xe(e);i.spatialReference=Ce(t)}}else if(Ie(e,"Metadata"))if("xml:ESRI"===e.getAttribute("domain")){const{spatialReference:t,transform:n}=function(e){var t;const i=ge(e,"GeodataXform"),n=Ce(be(i,"SpatialReference/WKID")||xe(i,"SpatialReference/WKT"));if("typens:PolynomialXform"!==i.getAttribute("xsi:type"))return{spatialReference:n,transform:null};const r=null!=(t=be(i,"PolynomialOrder"))?t:1,s=we(i,"CoeffX/Double"),a=we(i,"CoeffY/Double"),o=we(i,"InverseCoeffX/Double"),l=we(i,"InverseCoeffY/Double"),c=_e(s,a),u=_e(o,l);return{spatialReference:n,transform:new oe({spatialReference:n,polynomialOrder:r,forwardCoefficients:c,inverseCoefficients:u})}}(e);i.transform=n,i.spatialReference||(i.spatialReference=t)}else ye(e,"MDI").forEach((e=>i.metadata[e.getAttribute("key")]=xe(e)));else if(Ie(e,"PAMRasterBand")){const t=function(e){var t;const i=be(e,"NoDataValue"),n=ge(e,"Histograms/HistItem"),r=be(n,"HistMin"),s=be(n,"HistMax"),a=be(n,"BucketCount"),o=null==(t=xe(n,"HistCounts"))?void 0:t.split("|").map((e=>Number(e)));let l,c,u,h;ye(e,"Metadata/MDI").forEach((e=>{var t;const i=Number(null!=(t=e.textContent)?t:e.nodeValue);switch(e.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":l=i;break;case"STATISTICS_MAXIMUM":c=i;break;case"STATISTICS_MEAN":u=i;break;case"STATISTICS_STDDEV":h=i}}));const f=be(e,"Metadata/SourceBandIndex");return{noDataValue:i,histogram:null!=o&&o.length&&null!=l&&null!=c?{min:r,max:s,size:a||o.length,counts:o}:null,sourceBandIndex:f,statistics:null!=l&&null!=c?{min:l,max:c,avg:u,stddev:h}:null}}(e);null!=t.sourceBandIndex&&null==i.rasterBands[t.sourceBandIndex]?i.rasterBands[t.sourceBandIndex]=t:i.rasterBands.push(t)}}));const n=i.rasterBands;if(n){const e=!!n[0].statistics;i.statistics=e?n.map((e=>e.statistics)):null;const t=!!n[0].histogram;i.histograms=t?n.map((e=>e.histogram)):null}return i}let Te=class extends V{async open(e){await this.init();const t=await this._fetchData(e);let{spatialReference:i,statistics:n,histograms:r,transform:s}=await this._fetchAuxiliaryData(e);const a=!i;a&&(i=new P.Z({wkid:3857})),null!=r&&r.length&&null==n&&(n=(0,W.Oh)(r));const{width:o,height:l}=t;let c=new k.Z({xmin:-.5,ymin:.5-l,xmax:o-.5,ymax:.5,spatialReference:i});const u=s?s.forwardTransform(c):c;let h=!0;if(s){const e=s.forwardCoefficients;h=e&&0===e[1]&&0===e[2],h&&(s=null,c=u)}const f=new me({data:{extent:u,nativeExtent:c,transform:s,pixelBlock:t,statistics:n,histograms:r,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:a}});await f.open(),this._set("rasterInfo",f.rasterInfo),this._inMemoryRaster=f}fetchRawTile(e,t,i,n={}){return this._inMemoryRaster.fetchRawTile(e,t,i,n)}async _fetchData(e){const{data:t}=await this.request(this.url,{responseType:"array-buffer",signal:null==e?void 0:e.signal}),i=(0,q.y6)(t).toUpperCase();if("JPG"!==i&&"PNG"!==i&&"GIF"!==i&&"BMP"!==i)throw new a.Z("image-aux-raster:open","the data is not a supported format");return this._set("datasetFormat",i),await this.decodePixelBlock(t,{format:"jpg",width:1,height:1,useCanvas:!0})}async _fetchAuxiliaryData(e){var t,i;const n=(0,o.Wg)(null==e?void 0:e.signal),r=null!=(t=this.ioConfig.skipExtensions)?t:[],s=r.indexOf("aux.xml")>-1?null:this.request(this.url+".aux.xml",{responseType:"xml",signal:n}),a=this.datasetFormat,l="JPG"===a?"jgw":"PNG"===a?"pgw":"BMP"===a?"bpw":null,u=r.indexOf(l)>-1?null:this.request(this.url.slice(0,this.url.lastIndexOf("."))+"."+l,{responseType:"text",signal:n}),h=await(0,c.as)([s,u]);if(null!=n&&n.aborted)throw(0,c.zE)();const f=Re(null==(i=h[0].value)?void 0:i.data);if(!f.transform){const e=h[1].value?h[1].value.data.split("\n").slice(0,6).map((e=>Number(e))):null;f.transform=6===(null==e?void 0:e.length)?new oe({forwardCoefficients:[e[4],e[5],e[0],-e[1],e[2],-e[3]]}):null}return f}};(0,n._)([(0,u.Cb)({type:String,json:{write:!0}})],Te.prototype,"datasetFormat",void 0),Te=(0,n._)([(0,m.j)("esri.layers.support.rasterDatasets.ImageAuxRaster")],Te);const Me=Te;var ke=i(2364),Pe=i(72878),Oe=i(46002);let Fe=class extends ee{constructor(){super(...arguments),this.type="gcs-shift",this.tolerance=1e-8}forwardTransform(e){return"point"===(e=e.clone()).type?(e.x>180+this.tolerance&&(e.x-=360),e):(e.xmin>=180-this.tolerance?(e.xmax-=360,e.xmin-=360):e.xmax>180+this.tolerance&&(e.xmin=-180,e.xmax=180),e)}inverseTransform(e){return"point"===(e=e.clone()).type?(e.x<-this.tolerance&&(e.x+=360),e):(e.xmin<-this.tolerance&&(e.xmin+=360,e.xmax+=360),e)}};(0,n._)([(0,d.J)({GCSShiftXform:"gcs-shift"})],Fe.prototype,"type",void 0),(0,n._)([(0,u.Cb)()],Fe.prototype,"tolerance",void 0),Fe=(0,n._)([(0,m.j)("esri.layers.support.rasterTransforms.GCSShiftTransform")],Fe);const De=Fe;let ze=class extends V{constructor(){super(...arguments),this._levelOffset=0,this._slices=null,this._tilemapCache=null,this.datasetFormat="RasterTileServer"}async open(e){await this.init();const t=e&&e.signal,i=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:"json"},signal:t});i.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));const n=i.data;if(this.sourceJSON=n,!n)throw new a.Z("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!n.tileInfo)throw new a.Z("imageserverraster:open","use ImageryLayer to open non-tiled image services");this._fixScaleInServiceInfo(),this.tileType=n.cacheType,null==this.tileType&&(["jpg","jpeg","png","png8","png24","png32","mixed"].indexOf(n.tileInfo.format.toLowerCase())>-1?this.tileType="Map":"lerc"===n.tileInfo.format.toLowerCase()?this.tileType="Elevation":this.tileType="Raster"),this.datasetName=n.name.slice(n.name.indexOf("/")+1);const r=await this._fetchRasterInfo({signal:t});if(!(0,o.pC)(r))throw new a.Z("image-server-raster:open","cannot initialize image service");{const e="Map"===this.tileType?(0,Pe.d)(n.tileInfo,n):R.Z.fromJSON(n.tileInfo),{extent:t,pixelSize:i}=r,s=.5/r.width*i.x;let a,o;const l=e.lodAt(Math.max.apply(null,e.lods.map((e=>e.level))));"Map"!==this.tileType&&0!==n.maxScale&&("Raster"===this.tileType?(a=e.lods.filter((e=>e.resolution===i.x))[0],a||(a=e.lods[e.lods.length-1])):(a=e.lods.filter((e=>Math.abs(e.scale-n.maxScale)<s))[0],a||(a=e.lods.filter((e=>e.scale>n.maxScale)).sort(((e,t)=>e.scale>t.scale?1:-1))[0])),i.x=i.y=a.resolution,r.width=Math.ceil((t.xmax-t.xmin)/i.x-.1),r.height=Math.ceil((t.ymax-t.ymin)/i.y-.1)),a||(a=l);const c=e.lodAt(Math.min.apply(null,e.lods.map((e=>e.level))));"Map"===this.tileType?this._levelOffset=e.lods[0].level:0!==n.minScale&&"Elevation"===this.tileType&&(o=e.lods.filter((e=>Math.abs(e.scale-n.minScale)<s))[0],this._levelOffset=o.level-c.level),o||(o=c);const u=Math.max(i.x,i.y);(Math.abs(i.x-i.y)>s||!e.lods.some((e=>Math.abs(e.resolution-u)<s)))&&(i.x=i.y=a.resolution,r.width=Math.ceil((t.xmax-t.xmin)/i.x-.1),r.height=Math.ceil((t.ymax-t.ymin)/i.y-.1));const h=a.level-o.level,[f,d]=e.size,p=[];e.lods.forEach((e=>{e.level>=o.level&&e.level<=a.level&&p.push({x:e.resolution,y:e.resolution})})),p.sort(((e,t)=>e.x-t.x));const m=this.computeBlockBoundary(t,f,d,e.origin,p,h),y=p.length>1?p.slice(1):null;r.storageInfo=new E.Z({blockWidth:e.size[0],blockHeight:e.size[1],pyramidBlockWidth:e.size[0],pyramidBlockHeight:e.size[1],pyramidResolutions:y,compression:e.format,origin:e.origin,firstPyramidLevel:1,maximumPyramidLevel:h,tileInfo:e,blockBoundary:m}),this._fixGCSShift(r),this._set("rasterInfo",r)}if(n.capabilities.toLowerCase().indexOf("tilemap")>-1){const e={tileInfo:r.storageInfo.tileInfo,parsedUrl:(0,ke.mN)(this.url),url:this.url,tileServers:[],type:"tile"};this._tilemapCache=new Oe.y({layer:e})}}async fetchRawTile(e,t,i,n={}){const{storageInfo:r,extent:s}=this.rasterInfo,a=r.maximumPyramidLevel-e+this._levelOffset,o=`${this.url}/tile/${a}/${t}/${i}`,l=this._slices?{sliceId:n.sliceId||0}:null,{data:c}=await this.request(o,{query:l,responseType:"array-buffer",signal:n.signal});if(!c)return null;const u=await this.decodePixelBlock(c,{width:r.tileInfo.size[0],height:r.tileInfo.size[1],planes:null,pixelType:null,isPoint:"Elevation"===this.tileType}),h=r.blockBoundary[e];if("jpg"!==r.compression||i>h.minCol&&i<h.maxCol&&t>h.minRow&&t<h.maxRow)return u;const{origin:f,blockWidth:d,blockHeight:p}=r,{x:m,y}=this.getPyramidPixelSize(e),g=Math.round((s.xmin-f.x)/m)%d,x=Math.round((s.xmax-f.x)/m)%d,v=Math.round((f.y-s.ymax)/y)%p,w=Math.round((f.y-s.ymin)/y)%p,b=i===h.minCol?g:0,I=t===h.minRow?v:0,_=i===h.maxCol?x:d,C=t===h.maxRow?w:p;return(0,W.pW)(u,{x:b,y:I},{width:_-b,height:C-I}),u}getSliceIndex(e){if(null==e||!e.length||!this._slices)return null;const t=e;for(let e=0;e<this._slices.length;e++){const i=this._slices[e].multidimensionalDefinition;if(i.length===t.length&&!i.some((e=>{const i=t.filter((t=>e.variableName===t.variableName&&t.dimensionName===e.dimensionName))[0];return!i||(Array.isArray(e.values[0])?e.values[0][0]:e.values[0])!==(Array.isArray(i.values[0])?i.values[0][0]:i.values[0])})))return e}return null}async fetchVariableStatisticsHistograms(e,t){const i=this.request(this.url+"/statistics",{query:{variable:e,f:"json"},signal:t}).then((e=>{var t;return null==(t=e.data)?void 0:t.statistics})),n=this.request(this.url+"/histograms",{query:{variable:e,f:"json"},signal:t}).then((e=>{var t;return null==(t=e.data)?void 0:t.histograms})),r=await Promise.all([i,n]);return r[0]&&r[0].forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),{statistics:r[0]||null,histograms:r[1]||null}}async computeBestPyramidLevelForLocation(e,t={}){if(!this._tilemapCache)return 0;let i=this.identifyPixelLocation(e,0,(0,o.Wg)(t.datumTransformation));if(null===i)return null;let n=0;const{maximumPyramidLevel:r}=this.rasterInfo.storageInfo;let s=r-n+this._levelOffset;const a=i.srcLocation;for(;s>=0;){try{if("available"===await this._tilemapCache.fetchAvailability(s,i.row,i.col,t))break}catch{}if(s--,n++,i=this.identifyPixelLocation(a,n,(0,o.Wg)(t.datumTransformation)),null===i)return null}return-1===s||null==i?null:n}async _fetchRasterInfo(e){const t=this.sourceJSON,i=Math.ceil((t.extent.xmax-t.extent.xmin)/t.pixelSizeX-.1),n=Math.ceil((t.extent.ymax-t.extent.ymin)/t.pixelSizeY-.1),r=P.Z.fromJSON(t.spatialReference||t.extent.spatialReference);if("Map"===this.tileType)return new L.Z({width:i,height:n,bandCount:3,extent:k.Z.fromJSON(t.extent),spatialReference:r,pixelSize:new $.Z({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:r}),pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}});const{slice:s,signal:a}=e,o=!!t.hasRasterAttributeTable&&this.request(this.url+"/rasterAttributeTable",{query:{slice:s,f:"json"},signal:a}).then((e=>ue.default.fromJSON(e.data))).catch((()=>null)),l=!!t.hasColormap&&this.request(this.url+"/colormap",{query:{slice:s,f:"json"},signal:a}).then((e=>{var t;return null==(t=e.data)?void 0:t.colormap})),c=!!t.hasHistograms&&this.request(this.url+"/histograms",{query:{slice:s,f:"json"},signal:a}).then((e=>{var t;return null==(t=e.data)?void 0:t.histograms})),u=this.request(this.url+"/keyProperties",{query:{f:"json"},signal:a}).then((e=>e.data)).catch((()=>{})),h=!!t.hasMultidimensions&&this._fetchMultidimensionalInfo(),f=!!t.hasMultidimensions&&this.request(this.url+"/slices",{query:{f:"json"},signal:a}).then((e=>e.data&&e.data.slices)).catch((()=>{}));return Promise.all([o,l,c,u,h,f]).then((e=>{let s=null;if(t.minValues&&t.minValues.length===t.bandCount){s=[];for(let e=0;e<t.minValues.length;e++)s.push({min:t.minValues[e],max:t.maxValues[e],avg:t.meanValues[e],stddev:t.stdvValues[e]})}return this._slices=e[5]||null,new L.Z({width:i,height:n,bandCount:t.bandCount,extent:k.Z.fromJSON(t.extent),spatialReference:r,pixelSize:new $.Z({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:r}),pixelType:t.pixelType.toLowerCase(),statistics:s,attributeTable:e[0]||null,colormap:e[1]||null,histograms:e[2]||null,keyProperties:e[3]||{},multidimensionalInfo:e[4]||null})}))}async _fetchMultidimensionalInfo(e){var t;const i=await this.request(this.url+"/multidimensionalInfo",{query:{f:"json"},signal:e}).then((e=>{var t;return null==(t=e.data)?void 0:t.multidimensionalInfo}));return null!=(t=i.variables)&&t.length&&i.variables.forEach((e=>{var t;null!=(t=e.statistics)&&t.length&&e.statistics.forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation}))})),i}_fixScaleInServiceInfo(){const{sourceJSON:e}=this;e.minScale&&e.minScale<0&&(e.minScale=0),e.maxScale&&e.maxScale<0&&(e.maxScale=0)}_fixGCSShift(e){const{extent:t,spatialReference:i}=e;0===t.xmin&&360===t.xmax&&i.wkid&&i.isGeographic&&(e.nativeExtent=e.extent,e.transform=new De,e.extent=e.transform.forwardTransform(t))}};(0,n._)([(0,u.Cb)({type:String,json:{write:!0}})],ze.prototype,"datasetFormat",void 0),(0,n._)([(0,u.Cb)()],ze.prototype,"tileType",void 0),ze=(0,n._)([(0,m.j)("esri.layers.support.rasterDatasets.ImageServerRaster")],ze);const Be=ze;var Ze=i(32911),Ae=i(85513);const Ne=new Map;Ne.set("Int8","s8"),Ne.set("UInt8","u8"),Ne.set("Int16","s16"),Ne.set("UInt16","u16"),Ne.set("Int32","s32"),Ne.set("UInt32","u32"),Ne.set("Float32","f32"),Ne.set("Float64","f32"),Ne.set("Double64","f32");const Le=new Map;Le.set("lerc",".lrc"),Le.set("none",".til"),Le.set("deflate",".pzp"),Le.set("jpeg",".jzp");let Ee=class extends V{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF"}async open(e){var t;await this.init(),this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const i=e?(0,o.Wg)(e.signal):null,n=await this.request(this.url,{responseType:"xml",signal:i}),{rasterInfo:r,files:s}=this._parseHeader(n.data);if(-1===(null==(t=this.ioConfig.skipExtensions)?void 0:t.indexOf("aux.xml"))){const t=await this._fetchAuxiliaryData(e);var a;null!=t&&(r.statistics=null!=(a=t.statistics)?a:r.statistics,r.histograms=t.histograms,t.histograms&&!(0,o.pC)(r.statistics)&&(r.statistics=(0,W.Oh)(t.histograms)))}this._set("rasterInfo",r),this._files=s;const l=await this.request(s.index,{responseType:"array-buffer",signal:i});this._storageIndex=this._parseIndex(l.data);let c,u,h=0,f=-1;const{blockWidth:d,blockHeight:p,compression:m}=this.rasterInfo.storageInfo,y=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:g,height:x,bandCount:v}=this.rasterInfo,w=[],b="none"===m?1:v;for(;h<this._storageIndex.length;)f++,c=Math.ceil(g/d/y**f),u=Math.ceil(x/p/y**f),h+=c*u*b*4,w.push({maxRow:u,maxCol:c,minCol:0,minRow:0});this.rasterInfo.storageInfo.blockBoundary=w,f>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=f),this.updateTileInfo()}async fetchRawTile(e,t,i,n={}){const{blockWidth:r,blockHeight:s,blockBoundary:a,compression:o}=this.rasterInfo.storageInfo,l=a[e];if(!l||l.maxRow<t||l.maxCol<i||l.minRow>t||l.minCol>i)return null;const{bandCount:c,pixelType:u}=this.rasterInfo,{ranges:h,actualTileWidth:f,actualTileHeight:d}=this._getTileLocation(e,t,i);if(!h||0===h.length)return null;if(0===h[0].from&&0===h[0].to){const e=new Uint8Array(r*s);return new Ze.Z({width:r,height:s,pixels:null,mask:e,validPixelCount:0})}const{bandIds:p}=this.ioConfig,m="none"===o?1:c,y=[];let g=0;for(g=0;g<m;g++)(!p||p.indexOf[g]>-1)&&y.push(this.request(this._files.data,{range:{from:h[g].from,to:h[g].to},responseType:"array-buffer",signal:n.signal}));const x=await Promise.all(y),v=x.map((e=>e.data.byteLength)).reduce(((e,t)=>e+t)),w=new Uint8Array(v);let b=0;for(g=0;g<m;g++)w.set(new Uint8Array(x[g].data),b),b+=x[g].data.byteLength;const I="lerc"===this.rasterInfo.storageInfo.compression?"lerc":"bip",_=await this.decodePixelBlock(w.buffer,{width:r,height:s,format:I,pixelType:u});let C=0,S=0;if(f!==r||d!==s){let e=_.mask;if(e)for(g=0;g<s;g++)if(S=g*r,g<d)for(C=f;C<r;C++)e[S+C]=0;else for(C=0;C<r;C++)e[S+C]=0;else for(e=new Uint8Array(r*s),_.mask=e,g=0;g<d;g++)for(S=g*r,C=0;C<f;C++)e[S+C]=1}return _}_parseIndex(e){if(e.byteLength%16>0)throw"invalid array buffer must be multiples of 16";let t,i,n,r,s,a;if(Ae.f){for(i=new Uint8Array(e),r=new ArrayBuffer(e.byteLength),n=new Uint8Array(r),s=0;s<e.byteLength/4;s++)for(a=0;a<4;a++)n[4*s+a]=i[4*s+3-a];t=new Uint32Array(r)}else t=new Uint32Array(e);return t}_getTileLocation(e,t,i){const{blockWidth:n,blockHeight:r,pyramidScalingFactor:s,compression:a}=this.rasterInfo.storageInfo,{width:o,height:l,bandCount:c}=this.rasterInfo,u="none"===a?1:c;let h,f,d,p=0,m=0;for(d=0;d<e;d++)m=s**d,h=Math.ceil(o/n/m),f=Math.ceil(l/r/m),p+=h*f;m=s**e,h=Math.ceil(o/n/m),f=Math.ceil(l/r/m),p+=t*h+i,p*=4*u;const y=this._storageIndex.subarray(p,p+4*u);let g=0,x=0;const v=[];for(let e=0;e<u;e++)g=y[4*e+0]*2**32+y[4*e+1],x=g+y[4*e+2]*2**32+y[4*e+3],v.push({from:g,to:x});return{ranges:v,actualTileWidth:i<h-1?n:Math.ceil(o/m)-n*(h-1),actualTileHeight:t<f-1?r:Math.ceil(l/m)-r*(f-1)}}_parseHeader(e){const t=ge(e,"MRF_META/Raster");if(!t)throw new a.Z("mrf:open","not a valid MRF format");const i=ge(t,"Size"),n=parseInt(i.getAttribute("x"),10),r=parseInt(i.getAttribute("y"),10),s=parseInt(i.getAttribute("c"),10),o=(xe(t,"Compression")||"none").toLowerCase();if(!o||-1===["none","lerc"].indexOf(o))throw new a.Z("mrf:open","currently does not support compression "+o);const l=xe(t,"DataType")||"UInt8",c=Ne.get(l);if(null==c)throw new a.Z("mrf:open","currently does not support pixel type "+l);const u=ge(t,"PageSize"),h=parseInt(u.getAttribute("x"),10),f=parseInt(u.getAttribute("y"),10),d=ge(t,"DataValues");let p,m;if(d&&(m=d.getAttribute("NoData"),null!=m&&(p=m.trim().split(" ").map((e=>parseFloat(e))))),ge(e,"MRF_META/CachedSource"))throw new a.Z("mrf:open","currently does not support MRF referencing other data files");const y=ge(e,"MRF_META/GeoTags"),g=ge(y,"BoundingBox");if(null==g)throw new a.Z("mrf:open","missing node MRF_META/GeoTags/BoundingBox");const x=parseFloat(g.getAttribute("minx")),v=parseFloat(g.getAttribute("miny")),w=parseFloat(g.getAttribute("maxx")),b=parseFloat(g.getAttribute("maxy")),I=xe(y,"Projection")||"",_=xe(e,"datafile"),C=xe(e,"IndexFile");let S;if("LOCAL_CS[]"!==I)if(I.toLowerCase().startsWith("epsg:")){const e=Number(I.slice(5));isNaN(e)||0===e||(S=new P.Z({wkid:e}))}else S=Ce(I);const R=new k.Z(x,v,w,b);R.spatialReference=S;const T=ge(e,"MRF_META/Rsets"),M=parseInt(T&&T.getAttribute("scale")||"2",10),O=new E.Z({origin:new $.Z({x:R.xmin,y:R.ymax,spatialReference:S}),blockWidth:h,blockHeight:f,pyramidBlockWidth:h,pyramidBlockHeight:f,compression:o,pyramidScalingFactor:M}),F=new $.Z({x:(w-x)/n,y:(b-v)/r,spatialReference:S});return{rasterInfo:new L.Z({width:n,height:r,extent:R,spatialReference:S,bandCount:s,pixelType:c,pixelSize:F,noDataValue:p,storageInfo:O}),files:{mrf:this.url,index:C||this.url.replace(".mrf",".idx"),data:_||this.url.replace(".mrf",Le.get(o))}}}async _fetchAuxiliaryData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:null==e?void 0:e.signal});return Re(t)}catch{return null}}};(0,n._)([(0,u.Cb)()],Ee.prototype,"_files",void 0),(0,n._)([(0,u.Cb)()],Ee.prototype,"_storageIndex",void 0),(0,n._)([(0,u.Cb)({type:String,json:{write:!0}})],Ee.prototype,"datasetFormat",void 0),Ee=(0,n._)([(0,m.j)("esri.layers.support.rasterIO.MRFRaster")],Ee);const He=Ee;var Je=i(4273),je=i(88721);const qe=function(e,t){const i=e.get(t);return i&&i.values},We=function(e,t){const i=e.get(t);return i&&i.values[0]};let Ue=class extends V{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat="TIFF"}async open(e){var t,i,n;await this.init();const r=e?(0,o.Wg)(e.signal):null,{data:s}=await this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:"array-buffer",signal:r});if(!s)throw new a.Z("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{littleEndian:l,firstIFD:c,isBigTiff:u}=(0,Je.p)(s),h=[];await this.readIFDs(h,s,l,c,0,u?8:4,r);const f=(0,Je.g)(h),{width:d,height:p,tileWidth:m,tileHeight:y,planes:g,pixelType:x,compression:v,firstPyramidLevel:w,maximumPyramidLevel:b,pyramidBlockWidth:I,pyramidBlockHeight:_,tileBoundary:C,affine:S,metadata:R}=f;let T=Ce((null==(t=f.extent.spatialReference)?void 0:t.wkt)||(null==(i=f.extent.spatialReference)?void 0:i.wkid)),M=!1;null==T&&(M=!0,T=new P.Z({wkid:3857}));const O=new k.Z({...f.extent,spatialReference:T}),F=new $.Z(O?{x:O.xmin,y:O.ymax,spatialReference:T}:{x:0,y:0}),D=new E.Z({blockWidth:m,blockHeight:y,pyramidBlockWidth:I,pyramidBlockHeight:_,compression:v,origin:F,firstPyramidLevel:w,maximumPyramidLevel:b,blockBoundary:C}),z=new $.Z({x:(O.xmax-O.xmin)/d,y:(O.ymax-O.ymin)/p,spatialReference:T}),B=R?{BandProperties:R.bandProperties,DataType:R.dataType}:{},Z=new L.Z({width:d,height:p,bandCount:g,pixelType:x,compression:v,pixelSize:z,storageInfo:D,spatialReference:T,isPseudoSpatialReference:M,keyProperties:B,extent:O,statistics:R?R.statistics:null});if(null!=S&&S.length&&(Z.nativeExtent=new k.Z({xmin:-.5,ymin:.5-p,xmax:d-.5,ymax:.5,spatialReference:T}),Z.transform=new oe({polynomialOrder:1,forwardCoefficients:[S[2]+S[0]/2,S[5]-S[3]/2,S[0],S[3],-S[1],-S[4]]}),Z.extent=Z.transform.forwardTransform(Z.nativeExtent),Z.pixelSize=new $.Z({x:(O.xmax-O.xmin)/d,y:(O.ymax-O.ymin)/p,spatialReference:T}),D.origin.x=-.5,D.origin.y=.5),null==(n=this.ioConfig.skipExtensions)||!n.includes("aux.xml")){const t=await this._fetchAuxiliaryData(e);if(null!=t){var A;if(Z.statistics=null!=(A=t.statistics)?A:Z.statistics,Z.histograms=t.histograms,t.histograms&&!(0,o.pC)(Z.statistics)&&(Z.statistics=(0,W.Oh)(t.histograms)),t.transform&&!S){Z.transform=t.transform,Z.nativeExtent=Z.extent;const e=Z.transform.forwardTransform(Z.nativeExtent);Z.pixelSize=new $.Z({x:(e.xmax-e.xmin)/d,y:(e.ymax-e.ymin)/p,spatialReference:T}),Z.extent=e}Z.spatialReference||(Z.spatialReference=t.spatialReference)}}if(this._set("rasterInfo",Z),this._headerInfo={littleEndian:l,isBigTiff:u,ifds:h,...f},!this._headerInfo.isSupported)throw new a.Z("tiffraster:open","this tiff is not supported: "+this._headerInfo.message);this.updateTileInfo()}async fetchRawTile(e,t,i,n={}){var r;if(null==(r=this._headerInfo)||!r.isSupported||this.isBlockOutside(e,t,i))return null;const s=this.getTileLocation(e,t,i);if(!s)return null;const{ranges:a,actualTileWidth:o,actualTileHeight:l,ifd:c}=s,u=a.map((e=>this.request(this.url,{range:e,responseType:"array-buffer",signal:n.signal}))),h=await Promise.all(u),f=h.map((e=>e.data.byteLength)).reduce(((e,t)=>e+t)),d=1===h.length?h[0].data:new ArrayBuffer(f),p=[0],m=[0];if(h.length>1){const e=new Uint8Array(d);for(let t=0,i=0;t<h.length;t++){const n=h[t].data;e.set(new Uint8Array(n),i),p[t]=i,i+=n.byteLength,m[t]=n.byteLength}}const{blockWidth:y,blockHeight:g}=this.getBlockWidthHeight(e),x=await this.decodePixelBlock(d,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:c,offsets:p,sizes:m},width:y,height:g,planes:null,pixelType:null});let v,w,b;if(o!==y||l!==g){let e=x.mask;if(e)for(v=0;v<g;v++)if(b=v*y,v<l)for(w=o;w<y;w++)e[b+w]=0;else for(w=0;w<y;w++)e[b+w]=0;else for(e=new Uint8Array(y*g),x.mask=e,v=0;v<l;v++)for(b=v*y,w=0;w<o;w++)e[b+w]=1}return x}async readIFDs(e,t,i,n,r,s=4,a){if(!n)return null;(n>=t.byteLength||n<0)&&(t=(await this.request(this.url,{range:{from:n+r,to:n+r+this._bufferSize},responseType:"array-buffer",signal:a})).data,r=n+r,n=0);const o=await this.readIFD(t,i,n,r,je.Z.TIFF_TAGS,s,a);if(e.push(o.ifd),!o.nextIFD)return null;await this.readIFDs(e,t,i,o.nextIFD-r,r,s,a)}async readIFD(e,t,i,n,r=je.Z.TIFF_TAGS,s=4,a){if(!e)return null;const o=(0,Je.b)(e,t,i,n,r,s);if(o.success){const i=[];if(o.ifd.forEach((e=>{e.values||i.push(e)})),i.length>0){const r=i.map((e=>e.offlineOffsetSize)),s=Math.min.apply(null,r.map((e=>e[0])));if(Math.min.apply(null,r.map((e=>e[0]+e[1])))-s<=this._bufferSize){const{data:r}=await this.request(this.url,{range:{from:s,to:s+this._bufferSize},responseType:"array-buffer",signal:a});e=r,n=s,i.forEach((i=>(0,Je.c)(e,t,i,n)))}}if(o.ifd.has("GEOKEYDIRECTORY")){const i=o.ifd.get("GEOKEYDIRECTORY"),r=i.values;if(r&&r.length>4){const s=r[0]+"."+r[1]+"."+r[2],o=await this.readIFD(e,t,i.valueOffset+6-n,n,je.Z.GEO_KEYS,2,a);i.data=o.ifd,i.data&&i.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[s]})}}return o}if(o.requiredBufferSize&&o.requiredBufferSize!==e.byteLength){const i=await this.request(this.url,{range:{from:n,to:n+o.requiredBufferSize+4},responseType:"array-buffer",signal:a});return(e=i.data).byteLength<o.requiredBufferSize?null:this.readIFD(e,t,0,n,je.Z.TIFF_TAGS,4,a)}}getTileLocation(e,t,i){const{firstPyramidLevel:n,blockBoundary:r}=this.rasterInfo.storageInfo,s=0===e?0:e-(n-1),a=this._headerInfo.ifds[s];if(!a)return null;const o=(0,Je.i)(a,this._headerInfo),l=qe(a,"TILEOFFSETS");if(void 0===l)return null;const c=qe(a,"TILEBYTECOUNTS"),{minRow:u,minCol:h,maxRow:f,maxCol:d}=r[s];if(t>f||i>d||t<u||i<h)return null;const p=We(a,"IMAGEWIDTH"),m=We(a,"IMAGELENGTH"),y=We(a,"TILEWIDTH"),g=We(a,"TILELENGTH"),x=o?this.rasterInfo.bandCount:1,v=x*t*(d+1)+i,w=[{from:l[v],to:l[v+x-1]+c[v+x-1]-1}];if(o){let e=!0;for(let t=0;t<x;t++)if(l[v+t]+c[v+t]!==l[v+t+1]){e=!1;break}if(!e)for(let e=0;e<x;e++)w[e]={from:l[v+e],to:l[v+e]+c[v+e]-1}}const b=l[v],I=c[v];return null==b||null==I?null:{ranges:w,ifd:a,actualTileWidth:i===d?p%y:y,actualTileHeight:t===f?m%g:g}}async _fetchAuxiliaryData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:null==e?void 0:e.signal});return Re(t)}catch{return null}}};(0,n._)([(0,u.Cb)()],Ue.prototype,"_files",void 0),(0,n._)([(0,u.Cb)()],Ue.prototype,"_headerInfo",void 0),(0,n._)([(0,u.Cb)()],Ue.prototype,"_bufferSize",void 0),(0,n._)([(0,u.Cb)({type:String,json:{write:!0}})],Ue.prototype,"datasetFormat",void 0),Ue=(0,n._)([(0,m.j)("esri.layers.support.rasterDatasets.TIFFRaster")],Ue);const $e=Ue,Ge=new Map;Ge.set("CRF",{desc:"Cloud Raster Format",constructor:de}),Ge.set("MRF",{desc:"Meta Raster Format",constructor:He}),Ge.set("TIFF",{desc:"GeoTIFF",constructor:$e}),Ge.set("RasterTileServer",{desc:"Raster Tile Server",constructor:Be}),Ge.set("JPG",{desc:"JPG Raster Format",constructor:Me}),Ge.set("PNG",{desc:"PNG Raster Format",constructor:Me}),Ge.set("GIF",{desc:"GIF Raster Format",constructor:Me}),Ge.set("BMP",{desc:"BMP Raster Format",constructor:Me});var Ve=i(68663);function Xe(){return{enabled:!this.loaded||"RasterTileServer"===this.raster.datasetFormat&&"Raster"===this.raster.tileType}}let Ye=class extends((0,g.h)((0,Z.M)((0,B.Q)((0,D.q)((0,z.I)((0,x.N)(F((0,l.R)(y.Z))))))))){constructor(...e){super(...e),this.bandIds=null,this.interpolation=null,this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.title=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.fields=null}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){const t=(0,o.pC)(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).catch(c.r9).then((()=>this._openRaster(t)))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get rasterFields(){var e,t;let i=[new A.Z({name:"Raster.ServicePixelValue",alias:"Pixel Value",domain:null,editable:!1,length:50,type:"string"})];const n=null==(e=this.rasterInfo)||null==(t=e.attributeTable)?void 0:t.fields;if(n){const e=n.filter((e=>"oid"!==e.type&&"value"!==e.name.toLowerCase())).map((e=>{const t=e.clone();return t.name="Raster."+e.name,t}));i=i.concat(e)}return i}set renderer(e){this._set("renderer",e),this.updateRenderer()}readRenderer(e,t,i){const n=t&&t.layerDefinition&&t.layerDefinition.drawingInfo&&t.layerDefinition.drawingInfo.renderer,r=(0,s.ij)(n,i)||void 0;if(null!=r)return r}createPopupTemplate(e){return(0,Ve.eZ)({fields:this.rasterFields,title:this.title},e)}write(e,t){const{raster:i}=this;if(this.loaded?"RasterTileServer"===i.datasetFormat&&("Raster"===i.tileType||"Map"===i.tileType):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))return super.write(e,t);if(t&&t.messages){const e=`${t.origin}/${t.layerContainerType||"operational-layers"}`;t.messages.push(new a.Z("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${e}'`,{layer:this}))}return null}async _openRaster(e){this.raster?(this.raster.rasterInfo||await this.raster.open(),this.url=this.raster.url):this.raster=await class{static get supportedFormats(){const e=new Set;return Ge.forEach(((t,i)=>e.add(i))),e}static async open(e){const{url:t,ioConfig:i,sourceJSON:n}=e;let r=e.datasetFormat;null==r&&t.lastIndexOf(".")&&(r=t.slice(t.lastIndexOf(".")+1).toUpperCase()),"OVR"===r||"TIF"===r?r="TIFF":"JPG"!==r&&"JPEG"!==r&&"JFIF"!==r||(r="JPG"),t.toLowerCase().indexOf("/imageserver")>-1&&-1===t.toLowerCase().indexOf("/wcsserver")&&(r="RasterTileServer");const s={url:t,sourceJSON:n,datasetFormat:r,ioConfig:i||{bandIds:null,sampling:null}};let o,l;if(this.supportedFormats.has(r))return o=Ge.get(r).constructor,l=new o(s),await l.open({signal:e.signal}),l;if(r)throw new a.Z("rasterfactory:open","not a supported format "+r);const c=Array.from(Ge.keys());let u=0;const h=function(){return r=c[u++],r?(o=Ge.get(r).constructor,l=new o(s),l.open({signal:e.signal}).then((()=>l)).catch((()=>h()))):null};return h()}static register(e,t,i){Ge.has(e.toUpperCase())||Ge.set(e.toUpperCase(),{desc:t,constructor:i})}}.open({url:this.url,sourceJSON:this.sourceJSON,ioConfig:{sampling:"closest",...this.ioConfig,customFetchParameters:this.customParameters},signal:e});const{rasterInfo:t}=this.raster;if(!t)throw new a.Z("imagery-tile-layer:load","cannot load resources on "+this.url);this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,null!=this.sourceJSON&&(this._set("version",this.sourceJSON.currentVersion),this._set("copyright",this.sourceJSON.copyrightText)),null==this.title&&(this.title=this.raster.datasetName),"Map"===this.raster.tileType&&(this.popupEnabled=!1),this._configDefaultSettings(),this.watch("customParameters",(e=>this.raster.ioConfig.customFetchParameters=e))}};(0,n._)([(0,u.Cb)({type:[h.z8],json:{write:{overridePolicy:Xe}}})],Ye.prototype,"bandIds",void 0),(0,n._)([(0,u.Cb)({json:{write:{overridePolicy:Xe}}}),(0,d.J)(N.c)],Ye.prototype,"interpolation",void 0),(0,n._)([(0,u.Cb)({json:{write:!0}})],Ye.prototype,"multidimensionalDefinition",void 0),(0,n._)([(0,u.Cb)(_.rn)],Ye.prototype,"legendEnabled",void 0),(0,n._)([(0,u.Cb)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],Ye.prototype,"isReference",void 0),(0,n._)([(0,u.Cb)({type:["show","hide"]})],Ye.prototype,"listMode",void 0),(0,n._)([(0,u.Cb)()],Ye.prototype,"sourceJSON",void 0),(0,n._)([(0,u.Cb)({readOnly:!0})],Ye.prototype,"version",void 0),(0,n._)([(0,u.Cb)()],Ye.prototype,"title",void 0),(0,n._)([(0,u.Cb)({readOnly:!0,json:{read:!1}})],Ye.prototype,"type",void 0),(0,n._)([(0,u.Cb)({type:["ArcGISTiledImageServiceLayer"]})],Ye.prototype,"operationalLayerType",void 0),(0,n._)([(0,u.Cb)({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(e,t)=>!t.disablePopup},write:{target:"disablePopup",overridePolicy:Xe,writer(e,t,i){t[i]=!e}}}})],Ye.prototype,"popupEnabled",void 0),(0,n._)([(0,u.Cb)({type:r.Z,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy:Xe}}})],Ye.prototype,"popupTemplate",void 0),(0,n._)([(0,u.Cb)({readOnly:!0})],Ye.prototype,"defaultPopupTemplate",null),(0,n._)([(0,u.Cb)({readOnly:!0,type:[A.Z]})],Ye.prototype,"fields",void 0),(0,n._)([(0,u.Cb)({readOnly:!0,type:[A.Z]})],Ye.prototype,"rasterFields",null),(0,n._)([(0,u.Cb)({types:s.dr,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:Xe},origins:{"web-scene":{types:s.FK,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type})}}}}})],Ye.prototype,"renderer",null),(0,n._)([(0,p.r)("renderer")],Ye.prototype,"readRenderer",null),Ye=(0,n._)([(0,m.j)("esri.layers.ImageryTileLayer")],Ye);const Qe=Ye},46002:(e,t,i)=>{i.d(t,{y:()=>C});var n,r=i(23324),s=i(57603),a=i(22685),o=i(76877),l=i(24022),c=i(20337),u=i(98502),h=i(27946),f=i(19955),d=i(16741),p=i(2364),m=i(77030),y=i(74791),g=(i(32780),i(73636)),x=i(72903),v=i(89847),w=i(7175);class b{constructor(){this.location={left:0,top:0,width:0,height:0},this._allAvailability="unknown",this.byteSize=40}getAvailability(e,t){if("unknown"!==this._allAvailability)return this._allAvailability;const i=(e-this.location.top)*this.location.width+(t-this.location.left),n=i%8,r=i>>3,s=this._tileAvailabilityBitSet;return r<0||r>s.length?"unknown":s[r]&1<<n?"available":"unavailable"}_updateFromData(e){const t=this.location.width,i=this.location.height;let n=!0,r=!0;const s=Math.ceil(t*i/8),a=new Uint8Array(s);let o=0;for(let t=0;t<e.length;t++){const i=t%8;e[t]?(r=!1,a[o]|=1<<i):n=!1,7===i&&++o}r?this._allAvailability="unavailable":n?this._allAvailability="available":(this._allAvailability="unknown",this._tileAvailabilityBitSet=a,this.byteSize+=a.length)}static fromDefinition(e,t){const i=e.service.request||s.default,{row:n,col:r,width:a,height:l}=e,c={query:{f:"json"}};return t=t?{...c,...t}:c,i(function(e){let t;if("vector-tile"===e.service.type)t=`${e.service.url}/tilemap/${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`;else{const i=e.service.tileServers;t=`${i&&i.length?i[e.row%i.length]:e.service.url}/tilemap/${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`}const i=e.service.query;return i&&(t=`${t}?${i}`),t}(e),t).then((e=>e.data)).catch((e=>{if(e&&e.details&&422===e.details.httpStatus)return{location:{top:n,left:r,width:a,height:l},valid:!0,data:(0,v.a9)(a*l,0)};throw e})).then((e=>{if(e.location&&(e.location.top!==n||e.location.left!==r||e.location.width!==a||e.location.height!==l))throw new o.Z("tilemap:location-mismatch","Tilemap response for different location than requested",{response:e,definition:{top:n,left:r,width:a,height:l}});return b.fromJSON(e)}))}static fromJSON(e){b.validateJSON(e);const t=new b;return t.location=Object.freeze((0,w.d9)(e.location)),t._updateFromData(e.data),Object.freeze(t)}static validateJSON(e){if(!e||!e.location)throw new o.Z("tilemap:missing-location","Location missing from tilemap response");if(!1===e.valid)throw new o.Z("tilemap:invalid","Tilemap response was marked as invalid");if(!e.data)throw new o.Z("tilemap:missing-data","Data missing from tilemap response");if(!Array.isArray(e.data))throw new o.Z("tilemap:data-mismatch","Data must be an array of numbers");if(e.data.length!==e.location.width*e.location.height)throw new o.Z("tilemap:data-mismatch","Number of data items does not match width/height of tilemap")}}function I(e){return`${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`}const _=c.Z.getLogger("esri.layers.support.TilemapCache");let C=n=class extends a.Z{constructor(e){super(e),this._handles=new l.Z,this._pendingTilemapRequests={},this._availableLevels={},this.levels=5,this.cacheByteSize=2097152,this.request=s.default,this._prefetchingEnabled=!0}initialize(){this._tilemapCache=new u.Z(this.cacheByteSize),this._handles.add([this.watch(["layer.parsedUrl","layer.tileServers?"],(()=>this._initializeTilemapDefinition())),(0,m.S1)(this,"layer.tileInfo.lods",(e=>this._initializeAvailableLevels(e)),!0)]),this._initializeTilemapDefinition()}destroy(){this._handles&&(this._handles.destroy(),this._handles=null)}castLevels(e){return e<=2?(_.error("Minimum levels for Tilemap is 3, but got ",e),3):e}get size(){return 1<<this.levels}fetchTilemap(e,t,i,n){if(!this._availableLevels[e])return Promise.reject(new o.Z("tilemap-cache:level-unavailable",`Level ${e} is unavailable in the service`));const r=this._tmpTilemapDefinition,s=this._tilemapFromCache(e,t,i,r);if(s)return Promise.resolve(s);const a=n&&n.signal;return n={...n,signal:null},new Promise(((e,t)=>{(0,f.fu)(a,(()=>t((0,f.zE)())));const i=I(r);let s=this._pendingTilemapRequests[i];if(!s){s=b.fromDefinition(r,n).then((e=>(this._tilemapCache.put(i,e,e.byteSize),e)));const e=()=>delete this._pendingTilemapRequests[i];this._pendingTilemapRequests[i]=s,s.then(e,e)}s.then(e,t)}))}getAvailability(e,t,i){if(!this._availableLevels[e])return"unavailable";const n=this._tilemapFromCache(e,t,i,this._tmpTilemapDefinition);return n?n.getAvailability(t,i):"unknown"}getAvailabilityUpsample(e,t,i,n){n.level=e,n.row=t,n.col=i;const r=this.layer.tileInfo;for(r.updateTileInfo(n);;){const e=this.getAvailability(n.level,n.row,n.col);if("unavailable"!==e)return e;if(!r.upsampleTile(n))return"unavailable"}}fetchAvailability(e,t,i,n){return this._availableLevels[e]?this.fetchTilemap(e,t,i,n).catch((e=>e)).then((n=>{if(n instanceof b){const r=n.getAvailability(t,i);return"unavailable"===r?Promise.reject(new o.Z("tile-map:tile-unavailable","Tile is not available",{level:e,row:t,col:i})):r}if((0,f.D_)(n))throw n;return"unknown"})):Promise.reject(new o.Z("tilemap-cache:level-unavailable",`Level ${e} is unavailable in the service`))}fetchAvailabilityUpsample(e,t,i,n,r){n.level=e,n.row=t,n.col=i;const s=this.layer.tileInfo;s.updateTileInfo(n);const a=this.fetchAvailability(e,t,i,r).catch((e=>{if((0,f.D_)(e))throw e;if(s.upsampleTile(n))return this.fetchAvailabilityUpsample(n.level,n.row,n.col,n);throw e}));return this._fetchAvailabilityUpsamplePrefetch(n.id,e,t,i,r,a),a}async _fetchAvailabilityUpsamplePrefetch(e,t,i,r,s,a){if(!this._prefetchingEnabled)return;const o=`prefetch-${e}`;if(this._handles.has(o))return;const l=(0,f.yi)();a.then((()=>l.abort()),(()=>l.abort()));let c=!1;const u={remove(){c||(c=!0,l.abort())}};if(this._handles.add(u,o),await(0,d.MU)(10,l.signal).catch((()=>{})),c||(c=!0,this._handles.remove(o)),(0,f.Hc)(l))return;const h={id:e,level:t,row:i,col:r},p={...s,signal:l.signal},m=this.layer.tileInfo;for(let e=0;n._prefetches.length<n._maxPrefetch&&m.upsampleTile(h);++e){const e=this.fetchAvailability(h.level,h.row,h.col,p);n._prefetches.push(e);const t=()=>{n._prefetches.removeUnordered(e)};e.then(t,t)}}_initializeTilemapDefinition(){if(!this.layer.parsedUrl)return;const e=this.layer.parsedUrl,t=e.query;this._tilemapCache.clear(),this._tmpTilemapDefinition={service:{url:e.path,query:t?(0,p.B7)(t):null,tileServers:this.layer.tileServers,request:this.request,type:this.layer.type},width:this.size,height:this.size,level:0,row:0,col:0}}_tilemapFromCache(e,t,i,n){n.level=e,n.row=t-t%this.size,n.col=i-i%this.size;const r=I(n);return this._tilemapCache.get(r)}_initializeAvailableLevels(e){this._availableLevels={},e&&e.forEach((e=>this._availableLevels[e.level]=!0))}get test(){const e=this;return{get prefetchingEnabled(){return e._prefetchingEnabled},set prefetchingEnabled(t){e._prefetchingEnabled=t},hasTilemap:(t,i,n)=>!!e._tilemapFromCache(t,i,n,e._tmpTilemapDefinition)}}};C._maxPrefetch=4,C._prefetches=new h.Z({initialSize:n._maxPrefetch}),(0,r._)([(0,y.Cb)({constructOnly:!0,type:Number})],C.prototype,"levels",void 0),(0,r._)([(0,g.p)("levels")],C.prototype,"castLevels",null),(0,r._)([(0,y.Cb)({readOnly:!0,type:Number})],C.prototype,"size",null),(0,r._)([(0,y.Cb)({constructOnly:!0,type:Number})],C.prototype,"cacheByteSize",void 0),(0,r._)([(0,y.Cb)({constructOnly:!0})],C.prototype,"layer",void 0),(0,r._)([(0,y.Cb)({constructOnly:!0})],C.prototype,"request",void 0),C=n=(0,r._)([(0,x.j)("esri.layers.support.TilemapCache")],C)},79197:(e,t,i)=>{i.d(t,{OE:()=>h,Gc:()=>p,Qg:()=>f,Rq:()=>l,gX:()=>d,z2:()=>c,ET:()=>u,Vx:()=>y}),i(15572);var n=i(43388);var r=i(28769),s=i(75508);const a=new Map,o=new class{constructor(e=15e3,t=5e3){this._timer=null,this._cachedBlocks=new Map,this._size=-1,this._duration=e,this._interval=Math.min(e,t)}decreaseRefCount(e,t){const i=e+"/"+t,n=this._cachedBlocks;if(n.has(i)){const e=n.get(i);return e.refCount--,e.refCount<=0&&(n.delete(i),e.controller&&e.controller.abort()),e.refCount}return 0}getBlock(e,t){const i=e+"/"+t,n=this._cachedBlocks;if(n.has(i)){const e=n.get(i);return e.ts=Date.now(),e.refCount++,n.delete(i),n.set(i,e),e.block}return null}putBlock(e,t,i,n=null){const r=this._cachedBlocks,s=e+"/"+t;if(r.has(s)){const e=r.get(s);e.ts=Date.now(),e.refCount++}else r.set(s,{block:i,ts:Date.now(),refCount:1,controller:n});this.trim(),this.updateTimer()}deleteBlock(e,t){const i=this._cachedBlocks,n=e+"/"+t;i.has(n)&&i.delete(n)}updateMaxSize(e){this._size=e,this.trim()}empty(){this._cachedBlocks.clear(),this.clearTimer()}getCurrentSize(){return this._cachedBlocks.size}updateTimer(){if(null!=this._timer)return;const e=this._cachedBlocks;this._timer=setInterval((()=>{const t=Array.from(e),i=Date.now();for(let n=0;n<t.length&&t[n][1].ts<=i-this._duration;n++)e.delete(t[n][0]);0===e.size&&this.clearTimer()}),this._interval)}trim(){const e=this._cachedBlocks;if(-1===this._size||this._size>=e.size)return;const t=Array.from(e);for(let i=0;i<t.length-this._size;i++)e.delete(t[i][0])}clearTimer(){null!=this._timer&&(clearInterval(this._timer),this._timer=null)}};function l(e,t){return null==t?e:`${e}?sliceId=${t}`}function c(e,t){const i={extent:null,rasterInfo:t,cache:new Map};if(a.has(e)){const t=a.get(e);return t.push(i),t.length-1}return a.set(e,[i]),0}function u(e,t){if(a.has(e)){const i=a.get(e);i[t]=null,i.some((e=>null!=e))||a.delete(e)}}function h(e,t,i){if(!a.has(e))return null==t?o.decreaseRefCount(e,i):0;const n=a.get(e);if(null==n[t])return o.decreaseRefCount(e,i);const r=n[t].cache;if(r.has(i)){const e=r.get(i);if(e.refCount--,0===e.refCount){r.delete(i);for(let e=0;e<n.length;e++)n[e]&&n[e].cache.has(i)&&n[e].cache.delete(i);e.controller&&e.controller.abort()}return e.refCount}return 0}function f(e,t,i){if(!a.has(e))return null==t?o.getBlock(e,i):null;const n=a.get(e);if(null==n[t]){for(let e=0;e<n.length;e++)if(n[e]&&n[e].cache.has(i)){const t=n[e].cache.get(i);return t.refCount++,t.block}return o.getBlock(e,i)}const r=n[t].cache;if(r.has(i)){const e=r.get(i);return e.refCount++,e.block}for(let e=0;e<n.length;e++)if(e!==t&&n[e]&&n[e]&&n[e].cache.has(i)){const t=n[e].cache.get(i);return t.refCount++,r.set(i,t),t.block}return null}function d(e,t,i,n,r=null){if(!a.has(e))return void(null==t&&o.putBlock(e,i,n,r));const s=a.get(e);if(null==s[t])return void o.putBlock(e,i,n,r);const l={refCount:1,block:n,isResolved:!1,isRejected:!1,controller:r};n.then((()=>l.isResolved=!0)).catch((()=>l.isRejected=!0)),s[t].cache.set(i,l)}function p(e,t,i){if(!a.has(e))return void(null==t&&o.deleteBlock(e,i));const n=a.get(e);null!=n[t]?n[t].cache.delete(i):o.deleteBlock(e,i)}function m(e,t){if(!a.has(e))return null;const i=a.get(e);return null==i[t]?null:i[t]}function y(e,t,i,a,o,l,c=null){const u=m(e,t),h=u.extent,{cache:f,rasterInfo:d}=u;if(h&&h.xmin===i.xmin&&h.xmax===i.xmax&&h.ymin===i.ymin&&h.ymax===i.ymax)return;const p=i.clone().normalize(),{spatialReference:y,transform:g}=d,x=new Set;for(let e=0;e<p.length;e++){const t=p[e];if(t.xmax-t.xmin<=a||t.ymax-t.ymin<=a)continue;let i=(0,r.tB)(t,y,c);(0,n.pC)(g)&&(i=g.inverseTransform(i));const u=new s.Z({x:a,y:a,spatialReference:t.spatialReference});if(null==o&&!(o=(0,r.VO)(u,y,t,c)))return;const{pyramidLevel:h,pyramidResolution:f,excessiveReading:m}=(0,r.kr)(o,d,l||"closest");if(m)return;const{storageInfo:v}=d,{origin:w}=v,b={x:Math.max(0,Math.floor((i.xmin-w.x)/f.x)),y:Math.max(0,Math.floor((w.y-i.ymax)/f.y))},I=Math.ceil((i.xmax-i.xmin)/f.x-.1),_=Math.ceil((i.ymax-i.ymin)/f.y-.1),C=h>0?v.pyramidBlockWidth:v.blockWidth,S=h>0?v.pyramidBlockHeight:v.blockHeight,R=1,T=Math.max(0,Math.floor(b.x/C)-R),M=Math.max(0,Math.floor(b.y/S)-R),k=Math.floor((b.x+I-1)/C)+R,P=Math.floor((b.y+_-1)/S)+R;for(let e=M;e<=P;e++)for(let t=T;t<=k;t++)x.add(`${h}/${e}/${t}`)}f.forEach(((e,t)=>{if(!x.has(t)){const e=f.get(t);(null==e||e.isResolved||e.isRejected)&&f.delete(t)}})),u.extent={xmin:i.xmin,ymin:i.ymin,xmax:i.xmax,ymax:i.ymax}}},28769:(e,t,i)=>{i.d(t,{vF:()=>k,_D:()=>p,Qp:()=>R,P_:()=>S,Hq:()=>C,zD:()=>d,tB:()=>v,nF:()=>g,VO:()=>m,kZ:()=>T,kr:()=>M}),i(15572);var n=i(76877),r=i(43388),s=i(89462),a=i(87320),o=i(11559),l=i(3982),c=i(75508);const u=5e-4,h=function(e,t){const i=(e.isWGS84||e.isWebMercator)&&(t.isWGS84||t.isWebMercator);return!(e.equals(t)||i)},f={3395:20037508.342789244,3410:17334193.943686873,3832:3339584.723798206,3857:20037508.342788905,3975:17367530.445161372,4087:20037508.342789244,4088:20015108.787169147,6933:17367530.445161372,8858:7396237.374497803,8859:2465412.4581659334,32662:20037508.342789244,53001:20015086.79602057,53002:10007543.39801029,53003:20015086.79602057,53004:20015086.79602057,53016:14152803.599503474,53017:17333573.624304302,53025:7276828.3848298555,53031:10384677.558821043,53034:20015086.79602057,53036:7389443.187332862,53037:2463147.729110953,53079:20015114.352186374,53080:20015114.352186374,54001:20037508.342789244,54002:10018754.171394624,54003:20037508.342789244,54004:20037508.342789244,54016:14168658.027268292,54017:17367530.44516137,54025:7311399.09166516,54031:10396310.810074743,54034:20037508.342789244,54050:808820.9223376509,54053:1920897.3915568967,54079:20037508.342789244,54080:20037508.342789244,54099:13524439.768288724,54100:20037508.342789244,54101:20037508.342789244,102038:4297258.582585486,102299:5013965.117483125};async function d(){if((0,a.kR)()||!(0,a.Gb)())return null;await(0,a.zD)()}function p(e,t,i){if(!h(e.spatialReference,t))return null;if(!(0,a.kR)())throw new n.Z("rasterprojectionhelper-projectResolution","projection engine is not loaded");return i?(0,a.rS)(t,e.spatialReference,e):(0,a.rS)(e.spatialReference,t,e)}function m(e,t,i,r=null){if(e.spatialReference.equals(t))return e;const s=h(e.spatialReference,t);if(s&&!(0,a.kR)())throw new n.Z("rasterprojectionhelper-projectResolution","projection engine is not loaded");const c=i.center,u=new l.Z({xmin:c.x-e.x/2,xmax:c.x+e.x/2,ymin:c.y-e.y/2,ymax:c.y+e.y/2,spatialReference:e.spatialReference}),f=s?(0,a.iV)(u,t,r):(0,o.iV)(u,t);return null==f?null:{x:f.xmax-f.xmin,y:f.ymax-f.ymin}}function y(e,t=.01){return(0,s.c9)(e)?t/(0,s.c9)(e):0}function g(e,t,i=null,r=!0){const s=e.spatialReference;if(s.equals(t))return e;const l=h(s,t);if(l&&!(0,a.kR)())throw new n.Z("rasterprojectionhelper-projectResolution","projection engine is not loaded");const c=l?(0,a.iV)(e,t,i):(0,o.iV)(e,t);if(c&&r&&t.isGeographic){const[t,i]=I(s,!0),n=y(s);n&&null!=t&&null!=i&&(Math.abs(e.x-t)<n&&Math.abs(180-c.x)<u?c.x-=360:Math.abs(e.x-i)<n&&Math.abs(180+c.x)<u&&(c.x+=360))}return c}function x(e){const t=b(e[0].spatialReference);if(e.length<2||!(0,r.pC)(t))return e[0];let{xmin:i,xmax:n,ymin:s,ymax:a}=e[0];for(let i=1;i<e.length;i++){const r=e[i];n=r.xmax+t*i,s=Math.min(s,r.ymin),a=Math.max(a,r.ymax)}return new l.Z({xmin:i,xmax:n,ymin:s,ymax:a,spatialReference:e[0].spatialReference})}function v(e,t,i=null,n=!0){if(e.spatialReference.equals(t))return e;const s=C(e),a=b(e.spatialReference,!0);return(0,r.pC)(a)&&0!==s?x(e.clone().normalize().map((e=>w(e,t,i,n)))):w(e,t,i,n)}function w(e,t,i=null,r=!0){const s=e.spatialReference;if(s.equals(t))return e;const l=h(s,t);if(l&&!(0,a.kR)())throw new n.Z("rasterprojectionhelper-projectExtent","projection engine is not loaded");const f=l?(0,a.iV)(e,t,i):(0,o.iV)(e,t);let[d,p]=I(s,!0);if(f&&r&&s.isWebMercator&&t.isGeographic&&null!=d&&null!=p){const n=.001,r=1e3;if(Math.abs(e.xmin-d)<n&&Math.abs(p-e.xmax)>r&&Math.abs(180-f.xmax)<u){f.xmin=-180;const n=[];n.push(new c.Z(e.xmax,e.ymin,s)),n.push(new c.Z(e.xmax,(e.ymin+e.ymax)/2,s)),n.push(new c.Z(e.xmax,e.ymax,s));const r=n.map((e=>g(e,t,i))).filter((e=>!isNaN(null==e?void 0:e.x))).map((e=>e.x));f.xmax=Math.max.apply(null,r)}if(Math.abs(e.xmax-p)<n&&Math.abs(d-e.xmin)>r&&Math.abs(180+f.xmin)<u){f.xmax=180;const n=[];n.push(new c.Z(e.xmin,e.ymin,s)),n.push(new c.Z(e.xmin,(e.ymin+e.ymax)/2,s)),n.push(new c.Z(e.xmin,e.ymax,s));const r=n.map((e=>g(e,t,i))).filter((e=>!isNaN(null==e?void 0:e.x))).map((e=>e.x));f.xmin=Math.min.apply(null,r)}}[d,p]=I(t,!0);const m=y(t);return m&&null!=d&&null!=p&&(Math.abs(f.xmin-d)<m&&(f.xmin=d),Math.abs(f.xmax-p)<m&&(f.xmax=p)),f}function b(e,t=!1){const i=t?20037508.342787:20037508.342788905;return e.isWebMercator?2*i:e.wkid&&e.isGeographic?360:2*f[e.wkid]||null}function I(e,t=!1){const i=[],n=b(e,t);return(0,r.pC)(n)&&(i.push(-n/2),i.push(n/2)),i}function _(e,t,i,n){let r=(e-t)/i;return r-Math.floor(r)!=0?r=Math.floor(r):n&&(r-=1),r}function C(e,t=!1){const i=b(e.spatialReference);if(!(0,r.pC)(i))return 0;const n=t?0:-i/2;return _(e.xmax,n,i,!0)-_(e.xmin,n,i,!1)}function S(e){const t=e.storageInfo.origin.x,i=b(e.spatialReference,!0);if(!(0,r.pC)(i))return{originX:t,halfWorldWidth:null,pyramidsInfo:null};const n=i/2,{nativePixelSize:s,storageInfo:a,extent:o}=e,{maximumPyramidLevel:l,blockWidth:c,pyramidScalingFactor:u}=a;let h=s.x;const f=[],d=(0,r.pC)(e.transform)&&"gcs-shift"===e.transform.type,p=t+n,m=d?i-t:n-t;for(let e=0;e<=l;e++){const e=(o.xmax-t)/h/c,n=e-Math.floor(e)==0?e:Math.ceil(e),r=(i/2-t)/h/c,s=r-Math.floor(r)==0?r:Math.ceil(r),a=Math.floor(p/h/c),l=Math.round(p/h)%c,d=(c-Math.round(m/h)%c)%c;f.push({resolutionX:h,blockWidth:c,datsetColumnCount:n,worldColumnCountFromOrigin:s,leftMargin:l,rightPadding:d,originColumnOffset:a}),h*=u}return{originX:t,halfWorldWidth:n,pyramidsInfo:f,hasGCSSShiftTransform:d}}function R(e,t,i,s=null,o=null,l=!1,u=[32,32]){if(h(e.spatialReference,t.spatialReference)&&!(0,a.kR)())throw new n.Z("rasterprojectionhelper-projectResolution","projection engine is not loaded");if(!(e&&t&&i))return null;const{xmin:f,ymin:d,xmax:p,ymax:m}=e,y=e.spatialReference,x=t.spatialReference,v=b(x);l=l||"gcs-shift"===(null==o?void 0:o.type);const w={x:u[0]*i.x,y:u[1]*i.y},I={cols:Math.ceil((p-f)/w.x-.1)+1,rows:Math.ceil((m-d)/w.y-.1)+1},_=w.x,C=w.y,S=[];let R,T=!1;for(let e=0;e<I.cols;e++){const i=[];for(let n=0;n<I.rows;n++){let a=g(new c.Z({x:f+_*e,y:m-C*n,spatialReference:y}),x,s);o&&(a=o.inverseTransform(a)),i.push(a),e>0&&l&&a&&R[n]&&(0,r.pC)(v)&&a.x<R[n].x&&(a.x+=v),a?(S.push((a.x-t.xmin)/(t.xmax-t.xmin)),S.push((t.ymax-a.y)/(t.ymax-t.ymin))):(S.push(NaN),S.push(NaN),T=!0)}R=i}const M=function(e,t){const i=(e[0]+e[4]+e[4*t.cols]+e[4*t.cols+4])/4,n=(e[1]+e[5]+e[4*t.rows+1]+e[4*t.rows+5])/4;return[Math.abs(i-e[2*t.rows+2]),Math.abs(n-e[2*t.rows+3])]}(S,I),k=new Float32Array((I.cols-1)*(I.rows-1)*2*6),P=new Float32Array([-0,-1,1,-1,1,-0,1,-0,-0]),O=new Float32Array([-1,1,0,0,-1,1,1,0,0]);for(let e=0;e<I.cols-1;e++){for(let t=0;t<I.rows-1;t++){let i=e*I.rows*2+2*t;const n=S[i],r=S[i+1],s=S[i+2],a=S[i+3];i+=2*I.rows;const o=S[i],l=S[i+1],c=S[i+2],u=S[i+3];let h=0,f=12*(t*(I.cols-1)+e);for(let e=0;e<3;e++)k[f++]=P[h++]*n+P[h++]*s+P[h++]*c;h=0;for(let e=0;e<3;e++)k[f++]=P[h++]*r+P[h++]*a+P[h++]*u;h=0;for(let e=0;e<3;e++)k[f++]=O[h++]*n+O[h++]*o+O[h++]*c;h=0;for(let e=0;e<3;e++)k[f++]=O[h++]*r+O[h++]*l+O[h++]*u}if(T)for(let e=0;e<k.length;e++)isNaN(k[e])&&(k[e]=-1)}return{offsets:S,error:M,coefficients:k,spacing:u,size:[I.cols-1,I.rows-1]}}function T(e){const t=e.clone().normalize();return 1===t.length?t[0]:x(t)}function M(e,t,i){const{storageInfo:n,pixelSize:s}=t;let a,o=!1;const{pyramidResolutions:l}=n;if((0,r.pC)(l)&&l.length){const n=(e.x+e.y)/2,r=l[l.length-1],u=(r.x+r.y)/2,h=(s.x+s.y)/2;if(n<=h)a=0;else if(n>=u)a=l.length,o=n/u>8;else{let e,t=h;for(let r=1;r<=l.length;r++){if(e=(l[r-1].x+l[r-1].y)/2,n<=e){n===e?a=r:"down"===i?(a=r-1,o=n/t>8):a="up"===i||n-t>e-n||n/t>2?r:r-1;break}t=e}}const f=0===a?s:l[a-1];return{pyramidLevel:a,pyramidResolution:new c.Z({x:f.x,y:f.y,spatialReference:t.spatialReference}),excessiveReading:o}}const u=Math.log(e.x/s.x)/Math.LN2,h=Math.log(e.y/s.y)/Math.LN2,f=t.storageInfo.maximumPyramidLevel||0;a="down"===i?Math.floor(Math.min(u,h)):"up"===i?Math.ceil(Math.max(u,h)):Math.round((u+h)/2),a<0?a=0:a>f&&(o=a>f+3,a=f);const d=2**a;return{pyramidLevel:a,pyramidResolution:new c.Z({x:d*t.nativePixelSize.x,y:d*t.nativePixelSize.y,spatialReference:t.spatialReference}),excessiveReading:o}}function k(e,t,i=512,n=!0){const{extent:r,spatialReference:a,pixelSize:o}=e,l=m(new c.Z({x:o.x,y:o.y,spatialReference:a}),t,r);if(null==l)return{projectedPixelSize:null,scales:null,srcResolutions:null,isCustomTilingScheme:!1};const u=(l.x+l.y)/2,h=(0,s.c9)(t),f=u*h*96*39.37,d=t.isGeographic?256/i*295828763.7958547:256/i*591657527.591555;let p=!1;const y=v(r,t);n&&(t.isGeographic||t.isWebMercator)&&(p=y.xmin*y.xmax<0);let g,x=f;const w=1.001;if(p){x=d;const e=t.isGeographic?1341104507446289e-21:.29858214164761665,i=e*(96*h*39.37),n=t.isGeographic?4326:3857;g=m(new c.Z({x:e,y:e,spatialReference:{wkid:n}}),a,y),g.x*=x/i,g.y*=x/i}else{g={x:o.x,y:o.y};const t=Math.ceil(Math.log(Math.min(e.width,e.height)/32)/Math.LN2);let i=0;for(;x<d*(w/2)&&i<t;)i++,x*=2,g.x*=2,g.y*=2;Math.max(x,d)/Math.min(x,d)<=w&&(x=d)}const b=[x],I=[{x:g.x,y:g.y}],_=Math.min(70.5310735,f)/w;for(;x>=_;)x/=2,g.x/=2,g.y/=2,b.push(x),I.push({x:g.x,y:g.y});return{projectedPixelSize:l,scales:b,srcResolutions:I,isCustomTilingScheme:!p}}},72878:(e,t,i)=>{i.d(t,{d:()=>s,h:()=>r});var n=i(54552);const r={type:n.Z,json:{origins:{service:{read:{source:["tileInfo","minScale","maxScale","minLOD","maxLOD"],reader:s}}}}};function s(e,t,i,r){if(!e)return null;const{minScale:s,maxScale:a,minLOD:o,maxLOD:l}=t;if(null!=o&&null!=l)return r&&r.ignoreMinMaxLOD?n.Z.fromJSON(e):n.Z.fromJSON({...e,lods:e.lods.filter((({level:e})=>null!=e&&e>=o&&e<=l))});if(0!==s&&0!==a){const t=e=>Math.round(1e4*e)/1e4,i=s?t(s):1/0,r=a?t(a):-1/0;return n.Z.fromJSON({...e,lods:e.lods.filter((e=>{const n=t(e.scale);return n<=i&&n>=r}))})}return n.Z.fromJSON(e)}}}]);