"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[2101],{48139:(e,t,r)=>{r.d(t,{E:()=>i});class s{constructor(e={}){this._options=e}toQueryParams(e){if(!e)return null;const t=e.toJSON(),r={};return Object.keys(t).forEach((e=>{const s=this._options[e];if(s){const i="boolean"!=typeof s&&s.name?s.name:e,o="boolean"!=typeof s&&s.getter?s.getter(t):t[e];null!=o&&(r[i]=(e=>{if(!Array.isArray(e))return!1;const[t]=e;return"number"==typeof t||"string"==typeof t})(o)?o.join(","):"object"==typeof o?JSON.stringify(o):o)}else r[e]=t[e]}),this),r}}function i(e){return new s(e)}},48828:(e,t,r)=>{r.d(t,{et:()=>Z,ef:()=>D,bI:()=>J,mT:()=>P,Wf:()=>E});var s=r(57603),i=r(76877),o=r(43388),n=r(11589),a=r(2364),l=r(54067),p=r(23324),u=r(12210),c=r(74791),d=(r(32780),r(76997),r(20337),r(72903)),m=r(7175),y=r(43329),f=r(51598);const h=(0,f.wY)()({esriCentimeters:"centimeters",esriDecimalDegrees:"decimal-degrees",esriDecimeters:"decimeters",esriFeet:"feet",esriInches:"inches",esriKilometers:"kilometers",esriMeters:"meters",esriMiles:"miles",esriMillimeters:"millimeters",esriNauticalMiles:"nautical-miles",esriPoints:"points",esriYards:"yards"}),v=((0,f.wY)()({esriNAUCentimeters:"centimeters",esriNAUDecimalDegrees:"decimal-degrees",esriNAUDecimeters:"decimeters",esriNAUFeet:"feet",esriNAUInches:"inches",esriNAUKilometers:"kilometers",esriNAUMeters:"meters",esriNAUMiles:"miles",esriNAUMillimeters:"millimeters",esriNAUNauticalMiles:"nautical-miles",esriNAUPoints:"points",esriNAUYards:"yards"}),(0,f.wY)()({esriDOTComplete:"complete",esriDOTCompleteNoEvents:"complete-no-events",esriDOTInstructionsOnly:"instructions-only",esriDOTStandard:"standard",esriDOTSummaryOnly:"summary-only"}),(0,f.wY)()({esriNAOutputLineNone:"none",esriNAOutputLineStraight:"straight",esriNAOutputLineTrueShape:"true-shape",esriNAOutputLineTrueShapeWithMeasure:"true-shape-with-measure"}),(0,f.wY)()({esriNAOutputPolygonNone:"none",esriNAOutputPolygonSimplified:"simplified",esriNAOutputPolygonDetailed:"detailed"}),(0,f.wY)()({esriNFSBAllowBacktrack:"allow-backtrack",esriNFSBAtDeadEndsOnly:"at-dead-ends-only",esriNFSBNoBacktrack:"no-backtrack",esriNFSBAtDeadEndsAndIntersections:"at-dead-ends-and-intersections"})),g=((0,f.wY)()({esriNATravelDirectionFromFacility:"from-facility",esriNATravelDirectionToFacility:"to-facility"}),(0,f.wY)()({esriNATimeOfDayNotUsed:"not-used",esriNATimeOfDayUseAsStartTime:"start",esriNATimeOfDayUseAsEndTime:"end"}),(0,f.wY)()({AUTOMOBILE:"automobile",TRUCK:"truck",WALK:"walk",OTHER:"other"}));var b;let T=b=class extends u.wq{constructor(e){super(e),this.attributeParameterValues=null,this.description=null,this.distanceAttributeName=null,this.id=null,this.impedanceAttributeName=null,this.name=null,this.restrictionAttributeNames=null,this.simplificationTolerance=null,this.simplificationToleranceUnits=null,this.timeAttributeName=null,this.type=null,this.useHierarchy=null,this.uturnAtJunctions=null}clone(){return new b((0,m.d9)({attributeParameterValues:this.attributeParameterValues,description:this.description,distanceAttributeName:this.distanceAttributeName,id:this.id,impedanceAttributeName:this.impedanceAttributeName,name:this.name,restrictionAttributeNames:this.restrictionAttributeNames,simplificationTolerance:this.simplificationTolerance,simplificationToleranceUnits:this.simplificationToleranceUnits,timeAttributeName:this.timeAttributeName,type:this.type,useHierarchy:this.useHierarchy,uturnAtJunctions:this.uturnAtJunctions}))}};(0,p._)([(0,c.Cb)({type:[Object],json:{write:!0}})],T.prototype,"attributeParameterValues",void 0),(0,p._)([(0,c.Cb)({type:String,json:{write:!0}})],T.prototype,"description",void 0),(0,p._)([(0,c.Cb)({type:String,json:{write:!0}})],T.prototype,"distanceAttributeName",void 0),(0,p._)([(0,c.Cb)({type:String,json:{write:!0}})],T.prototype,"id",void 0),(0,p._)([(0,c.Cb)({type:String,json:{write:!0}})],T.prototype,"impedanceAttributeName",void 0),(0,p._)([(0,c.Cb)({type:String,json:{write:!0}})],T.prototype,"name",void 0),(0,p._)([(0,c.Cb)({type:[String],json:{write:!0}})],T.prototype,"restrictionAttributeNames",void 0),(0,p._)([(0,c.Cb)({type:Number,json:{write:!0}})],T.prototype,"simplificationTolerance",void 0),(0,p._)([(0,y.J)(h)],T.prototype,"simplificationToleranceUnits",void 0),(0,p._)([(0,c.Cb)({type:String,json:{write:!0}})],T.prototype,"timeAttributeName",void 0),(0,p._)([(0,y.J)(g)],T.prototype,"type",void 0),(0,p._)([(0,c.Cb)({type:Boolean,json:{write:!0}})],T.prototype,"useHierarchy",void 0),(0,p._)([(0,y.J)(v)],T.prototype,"uturnAtJunctions",void 0),T=b=(0,p._)([(0,d.j)("esri.rest.support.TravelMode")],T);const N=T;let A=class extends u.wq{constructor(e){super(e),this.currentVersion=null,this.defaultTravelMode=null,this.directionsLanguage=null,this.directionsSupportedLanguages=null,this.directionsTimeAttribute=null,this.hasZ=null,this.impedance=null,this.networkDataset=null,this.supportedTravelModes=null}};(0,p._)([(0,c.Cb)()],A.prototype,"currentVersion",void 0),(0,p._)([(0,c.Cb)()],A.prototype,"defaultTravelMode",void 0),(0,p._)([(0,c.Cb)()],A.prototype,"directionsLanguage",void 0),(0,p._)([(0,c.Cb)()],A.prototype,"directionsSupportedLanguages",void 0),(0,p._)([(0,c.Cb)()],A.prototype,"directionsTimeAttribute",void 0),(0,p._)([(0,c.Cb)()],A.prototype,"hasZ",void 0),(0,p._)([(0,c.Cb)()],A.prototype,"impedance",void 0),(0,p._)([(0,c.Cb)()],A.prototype,"networkDataset",void 0),(0,p._)([(0,c.Cb)({type:[N]})],A.prototype,"supportedTravelModes",void 0),A=(0,p._)([(0,d.j)("esri.rest.support.NetworkServiceDescription")],A);const w=A;var _=r(13470),C=r(56568),M=r(4130),S=r(19567),B=r(79666);let j=class extends u.wq{constructor(e){super(e),this.directions=null,this.route=null,this.routeName=null,this.stops=null}};(0,p._)([(0,c.Cb)({type:B.Z,json:{write:!0}})],j.prototype,"directions",void 0),(0,p._)([(0,c.Cb)({type:_.Z,json:{write:!0}})],j.prototype,"route",void 0),(0,p._)([(0,c.Cb)({type:String,json:{write:!0}})],j.prototype,"routeName",void 0),(0,p._)([(0,c.Cb)({type:[_.Z],json:{write:!0}})],j.prototype,"stops",void 0),j=(0,p._)([(0,d.j)("esri.rest.support.RouteResult")],j);const O=j;function k(e){return e&&M.default.fromJSON(e).features.map((e=>e))}let R=class extends u.wq{constructor(e){super(e),this.barriers=null,this.messages=null,this.pointBarriers=null,this.polylineBarriers=null,this.polygonBarriers=null,this.routeResults=null}readPointBarriers(e,t){return k(t.barriers||t.pointBarriers)}readPolylineBarriers(e){return k(e)}readPolygonBarriers(e){return k(e)}};(0,p._)([(0,c.Cb)({aliasOf:"pointBarriers"})],R.prototype,"barriers",void 0),(0,p._)([(0,c.Cb)({type:[S.Z]})],R.prototype,"messages",void 0),(0,p._)([(0,c.Cb)({type:[_.Z]})],R.prototype,"pointBarriers",void 0),(0,p._)([(0,C.r)("pointBarriers",["barriers","pointBarriers"])],R.prototype,"readPointBarriers",null),(0,p._)([(0,c.Cb)({type:[_.Z]})],R.prototype,"polylineBarriers",void 0),(0,p._)([(0,C.r)("polylineBarriers")],R.prototype,"readPolylineBarriers",null),(0,p._)([(0,c.Cb)({type:[_.Z]})],R.prototype,"polygonBarriers",void 0),(0,p._)([(0,C.r)("polygonBarriers")],R.prototype,"readPolygonBarriers",null),(0,p._)([(0,c.Cb)({type:[O]})],R.prototype,"routeResults",void 0),R=(0,p._)([(0,d.j)("esri.rest.support.RouteResultsContainer")],R);const U=R;function Z(e,t,r,s){s[r]=[t.length,t.length+e.length],e.forEach((e=>{t.push(e.geometry)}))}function D(e,t){for(let r=0;r<t.length;r++){const s=e[t[r]];if(s&&s.length)for(const e of s)e.z=void 0}console.log("The remote Network Analysis service is powered by a network dataset which is not Z-aware.\nZ-coordinates of the input geometry are ignored.")}function P(e){const t=[],r=[],{directions:s=[],routes:{features:i=[],spatialReference:o=null}={},stops:{features:n=[],spatialReference:a=null}={},barriers:l,polygonBarriers:p,polylineBarriers:u,messages:c}=e.data,d="esri.tasks.RouteTask.NULL_ROUTE_NAME";let m,y,f=!0;const h=i&&o||n&&a||l&&l.spatialReference||p&&p.spatialReference||u&&u.spatialReference;s.forEach((e=>{t.push(m=e.routeName),r[m]={directions:e}})),i.forEach((e=>{-1===t.indexOf(m=e.attributes.Name)&&(t.push(m),r[m]={}),e.geometry&&(e.geometry.spatialReference=h),r[m].route=e})),n.forEach((e=>{y=e.attributes,-1===t.indexOf(m=y.RouteName||d)&&(t.push(m),r[m]={}),m!==d&&(f=!1),e.geometry&&(e.geometry.spatialReference=h),null==r[m].stops&&(r[m].stops=[]),r[m].stops.push(e)})),n.length>0&&!0===f&&(r[t[0]].stops=r[d].stops,delete r[d],t.splice(t.indexOf(d),1));const v=t.map((e=>(r[e].routeName=e===d?null:e,r[e])));return U.fromJSON({routeResults:v,pointBarriers:l,polygonBarriers:p,polylineBarriers:u,messages:c})}function E(e,t){for(let r=0;r<t.length;r++){const s=e[t[r]];if(s&&s.length)for(const e of s)if((0,o.pC)(e)&&e.hasZ)return!0}return!1}async function J(e,t,r){if(!e)throw new i.Z("network-service:missing-url","Url to Network service is missing");const o=(0,l.lA)({f:"json",token:t},r),{data:p}=await(0,s.default)(e,o);p.supportedTravelModes||(p.supportedTravelModes=[]);for(let e=0;e<p.supportedTravelModes.length;e++)p.supportedTravelModes[e].id||(p.supportedTravelModes[e].id=p.supportedTravelModes[e].itemId);const u=p.currentVersion>=10.4?async function(e,t,r){try{const i=(0,l.lA)({f:"json",token:t},r),o=(0,a.Qj)(e)+"/retrieveTravelModes",{data:{supportedTravelModes:n,defaultTravelMode:p}}=await(0,s.default)(o,i);return{supportedTravelModes:n,defaultTravelMode:p}}catch(e){throw new i.Z("network-service:retrieveTravelModes","Could not get to the NAServer's retrieveTravelModes.",{error:e})}}(e,t,r):async function(e,t){var r,i;const o=(0,l.lA)({f:"json"},t),{data:p}=await(0,s.default)(e.replace(/\/rest\/.*$/i,"/info"),o);if(!p||!p.owningSystemUrl)return{supportedTravelModes:[],defaultTravelMode:null};const{owningSystemUrl:u}=p,c=(0,a.Qj)(u)+"/sharing/rest/portals/self",{data:d}=await(0,s.default)(c,o),m=(0,n.hS)("helperServices.routingUtilities.url",d);if(!m)return{supportedTravelModes:[],defaultTravelMode:null};const y=(0,l.en)(u),f=/\/solve$/i.test(y.path)?"Route":/\/solveclosestfacility$/i.test(y.path)?"ClosestFacility":"ServiceAreas",h=(0,l.lA)({f:"json",serviceName:f},t),v=(0,a.Qj)(m)+"/GetTravelModes/execute",g=await(0,s.default)(v,h),b=[];let T=null;if(null!=g&&null!=(r=g.data)&&null!=(i=r.results)&&i.length){const e=g.data.results;for(const t of e){var N;if("supportedTravelModes"===t.paramName){if(null!=(N=t.value)&&N.features)for(const{attributes:e}of t.value.features)if(e){const t=JSON.parse(e.TravelMode);b.push(t)}}else"defaultTravelMode"===t.paramName&&(T=t.value)}}return{supportedTravelModes:b,defaultTravelMode:T}}(e,r),{defaultTravelMode:c,supportedTravelModes:d}=await u;return p.defaultTravelMode=c,p.supportedTravelModes=d,w.fromJSON(p)}},79666:(e,t,r)=>{r.d(t,{Z:()=>f});var s=r(23324),i=(r(15572),r(13470)),o=r(43388),n=r(74791),a=(r(32780),r(76997),r(20337),r(56568)),l=r(72903),p=r(4130),u=r(49030),c=r(75508),d=r(77401),m=r(3982);let y=class extends p.default{constructor(e){super(e),this.extent=null,this.features=null,this.geometryType="polyline",this.routeId=null,this.routeName=null,this.totalDriveTime=null,this.totalLength=null,this.totalTime=null}readFeatures(e,t){(e||[]).forEach((e=>{this._decompressFeatureGeometry(e,t.summary.envelope.spatialReference)}));const r=u.Z.fromJSON(t.spatialReference);return e.map((e=>{const t=i.Z.fromJSON(e),s=e.geometry&&e.geometry.spatialReference;return t.geometry&&!s&&((0,o.Wg)(t.geometry).spatialReference=r),t.strings=e.strings,t.events=(e.events||[]).map((t=>{const r=new i.Z({geometry:new c.Z({x:t.point.x,y:t.point.y,z:t.point.z,hasZ:void 0!==t.point.z,spatialReference:e.geometry&&e.geometry.spatialReference}),attributes:{ETA:t.ETA,arriveTimeUTC:t.arriveTimeUTC}});return r.strings=t.strings,r})),t}))}get mergedGeometry(){if(!this.features)return null;const e=this.features.map((({geometry:e})=>(0,o.Wg)(e))),t=this.get("extent.spatialReference");return this._mergePolylinesToSinglePath(e,t)}get strings(){return this.features.map((({strings:e})=>e))}_decompressFeatureGeometry(e,t){e.geometry=this._decompressGeometry(e.compressedGeometry,t)}_decompressGeometry(e,t){let r=0,s=0,i=0,o=0;const n=[];let a,l,p,u,c,d,m,y,f=0,h=0,v=0;if(c=e.match(/((\+|\-)[^\+\-\|]+|\|)/g),c||(c=[]),0===parseInt(c[f],32)){f=2;const e=parseInt(c[f],32);f++,d=parseInt(c[f],32),f++,1&e&&(h=c.indexOf("|")+1,m=parseInt(c[h],32),h++),2&e&&(v=c.indexOf("|",h)+1,y=parseInt(c[v],32),v++)}else d=parseInt(c[f],32),f++;for(;f<c.length&&"|"!==c[f];){a=parseInt(c[f],32)+r,f++,r=a,l=parseInt(c[f],32)+s,f++,s=l;const e=[a/d,l/d];h&&(u=parseInt(c[h],32)+i,h++,i=u,e.push(u/m)),v&&(p=parseInt(c[v],32)+o,v++,o=p,e.push(p/y)),n.push(e)}return{paths:[n],hasZ:h>0,hasM:v>0,spatialReference:t}}_mergePolylinesToSinglePath(e,t){let r=[];(e||[]).forEach((e=>{e.paths.forEach((e=>{r=r.concat(e)}))}));const s=[];let i=[0,0];return r.forEach((e=>{e[0]===i[0]&&e[1]===i[1]||(s.push(e),i=e)})),new d.Z({paths:[s]},t)}};(0,s._)([(0,n.Cb)({type:m.Z,json:{read:{source:"summary.envelope"}}})],y.prototype,"extent",void 0),(0,s._)([(0,n.Cb)()],y.prototype,"features",void 0),(0,s._)([(0,a.r)("features")],y.prototype,"readFeatures",null),(0,s._)([(0,n.Cb)()],y.prototype,"geometryType",void 0),(0,s._)([(0,n.Cb)({readOnly:!0})],y.prototype,"mergedGeometry",null),(0,s._)([(0,n.Cb)()],y.prototype,"routeId",void 0),(0,s._)([(0,n.Cb)()],y.prototype,"routeName",void 0),(0,s._)([(0,n.Cb)({value:null,readOnly:!0})],y.prototype,"strings",null),(0,s._)([(0,n.Cb)({json:{read:{source:"summary.totalDriveTime"}}})],y.prototype,"totalDriveTime",void 0),(0,s._)([(0,n.Cb)({json:{read:{source:"summary.totalLength"}}})],y.prototype,"totalLength",void 0),(0,s._)([(0,n.Cb)({json:{read:{source:"summary.totalTime"}}})],y.prototype,"totalTime",void 0),y=(0,s._)([(0,l.j)("esri.rest.support.DirectionsFeatureSet")],y);const f=y},90997:(e,t,r)=>{r.d(t,{Z:()=>u});var s=r(23324),i=r(51598),o=r(12210),n=r(74791),a=(r(32780),r(76997),r(20337),r(72903));const l=new i.Xn({esriJobMessageTypeInformative:"informative",esriJobMessageTypeProcessDefinition:"process-definition",esriJobMessageTypeProcessStart:"process-start",esriJobMessageTypeProcessStop:"process-stop",esriJobMessageTypeWarning:"warning",esriJobMessageTypeError:"error",esriJobMessageTypeEmpty:"empty",esriJobMessageTypeAbort:"abort"});let p=class extends o.wq{constructor(e){super(e),this.description=null,this.type=null}};(0,s._)([(0,n.Cb)({type:String,json:{write:!0}})],p.prototype,"description",void 0),(0,s._)([(0,n.Cb)({type:String,json:{read:l.read,write:l.write}})],p.prototype,"type",void 0),p=(0,s._)([(0,a.j)("esri.rest.support.GPMessage")],p);const u=p},19567:(e,t,r)=>{r.d(t,{Z:()=>u});var s=r(23324),i=r(51598),o=r(74791),n=(r(32780),r(76997),r(20337),r(72903)),a=r(90997);const l=new i.Xn({0:"informative",1:"process-definition",2:"process-start",3:"process-stop",50:"warning",100:"error",101:"empty",200:"abort"});let p=class extends a.Z{constructor(e){super(e),this.type=null}};(0,s._)([(0,o.Cb)({type:String,json:{read:l.read,write:l.write}})],p.prototype,"type",void 0),p=(0,s._)([(0,n.j)("esri.rest.support.NAMessage")],p);const u=p},12101:(e,t,r)=>{r.r(t),r.d(t,{default:()=>m});var s=r(23324),i=(r(74791),r(32780),r(76997),r(20337),r(72903)),o=r(57603),n=r(48139),a=r(10118),l=r(48828),p=r(54067);const u=(0,n.E)({accumulateAttributes:{name:"accumulateAttributeNames"},attributeParameterValues:!0,directionsTimeAttribute:{name:"directionsTimeAttributeName"},impedanceAttribute:{name:"impedanceAttributeName"},outSpatialReference:{name:"outSR",getter:e=>e.outSpatialReference.wkid},pointBarriers:{name:"barriers"},polylineBarriers:!0,polygonBarriers:!0,restrictionAttributes:{name:"restrictionAttributeNames"},stops:!0,travelMode:!0});var c=r(98802);let d=class extends c.Z{constructor(e){super(e)}solve(e,t){return async function(e,t,r){const s=[],i=[],n={},c={},d=(0,p.en)(e);return t.stops&&t.stops.features&&(0,l.et)(t.stops.features,i,"stops.features",n),t.pointBarriers&&t.pointBarriers.features&&(0,l.et)(t.pointBarriers.features,i,"pointBarriers.features",n),t.polylineBarriers&&t.polylineBarriers.features&&(0,l.et)(t.polylineBarriers.features,i,"polylineBarriers.features",n),t.polygonBarriers&&t.polygonBarriers.features&&(0,l.et)(t.polygonBarriers.features,i,"polygonBarriers.features",n),(0,a.aX)(i).then((e=>{for(const t in n){const r=n[t];s.push(t),c[t]=e.slice(r[0],r[1])}return(0,l.Wf)(c,s)?(0,l.bI)(d.path):Promise.resolve({dontCheck:!0})})).then((e=>{("dontCheck"in e?e.dontCheck:e.hasZ)||(0,l.ef)(c,s);for(const e in c)c[e].forEach(((r,s)=>{t.get(e)[s].geometry=r}));const i={...r,query:{...d.query,...u.toQueryParams(t),f:"json"}},{path:n}=d,a="/solve",p=n.endsWith(a)?n:n+a;return(0,o.default)(p,i)})).then((e=>(0,l.mT)(e)))}(this.url,e,t)}};d=(0,s._)([(0,i.j)("esri.tasks.RouteTask")],d);const m=d}}]);