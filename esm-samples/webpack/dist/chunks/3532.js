"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[3532],{65906:(e,t,s)=>{s.d(t,{T:()=>I});var i=s(19955),r=s(53625),n=s(76877),o=s(32780),a=s(20337),l=s(43388),d=(s(60663),s(79830)),h=(s(62146),s(61605),s(23265),s(16820)),c=(s(65585),s(26256)),u=s(75928),f=s(33974);const p=a.Z.getLogger("esri.views.2d.engine.webgl.AttributeStoreView"),m=(0,f.g)(f.J,p),y=e=>2147483647&e;class g{constructor(e,t,s){this._texture=null,this._lastTexture=null,this._fbos={},this.texelSize=4;const{buffer:i,pixelType:r,textureOnly:n}=e,o=(0,u.UK)(r);this.shared=s,this.pixelType=r,this.size=t,this.textureOnly=n,n||(this.data=new o((0,l.Wg)(i))),this._resetRange()}destroy(){(0,l.Po)(this._texture,(e=>e.dispose()));for(const e in this._fbos)(0,l.Po)(this._fbos[e],(t=>{"0"===e&&t.detachColorTexture(),t.dispose()})),this._fbos[e]=null;this._texture=null}get _textureDesc(){return{target:3553,wrapMode:33071,pixelFormat:6408,dataType:this.pixelType,samplingMode:9728,width:this.size,height:this.size}}setData(e,t,s){const i=y(e),r=(0,l.Wg)(this.data),n=i*this.texelSize+t;!r||n>=r.length||(r[n]=s,this.dirtyStart=Math.min(this.dirtyStart,i),this.dirtyEnd=Math.max(this.dirtyEnd,i))}getData(e,t){if((0,l.Wi)(this.data))return null;const s=y(e)*this.texelSize+t;return!this.data||s>=this.data.length?null:this.data[s]}getTexture(e){return(0,l.Pt)(this._texture,(()=>this._initTexture(e)))}getFBO(e,t=0){if((0,l.Wi)(this._fbos[t])){const s={colorTarget:0,depthStencilTarget:0},i=0===t?this.getTexture(e):this._textureDesc;this._fbos[t]=new d.Z(e,s,i)}return this._fbos[t]}get locked(){return!(5121!==this.pixelType||!this.shared||this.textureOnly||!(0,o.Z)("esri-atomics")||!this.data)&&1===Atomics.load(this.data,0)}get hasDirty(){const e=this.dirtyStart;return this.dirtyEnd>=e}updateTexture(e,t){if(!this.locked){try{const t=this.dirtyStart,s=this.dirtyEnd;if(!this.hasDirty)return;this._resetRange();const i=(0,l.Wg)(this.data).buffer,r=this.getTexture(e),o=4,a=(t-t%this.size)/this.size,d=(s-s%this.size)/this.size,h=a,c=this.size,f=d,m=a*this.size*o,y=(c+f*this.size)*o-m,g=(0,u.UK)(this.pixelType),_=new g(i,m*g.BYTES_PER_ELEMENT,y),x=this.size,v=f-h+1;if(v>this.size)return void p.error(new n.Z("mapview-webgl","Out-of-bounds index when updating AttributeData"));r.updateData(0,0,h,x,v,_)}catch(e){}t()}}update(e){const{data:t,start:s,end:i}=e;if((0,l.pC)(t)){const i=this.data,r=s*this.texelSize;for(let s=0;s<t.length;s++){const n=1<<s%this.texelSize;e.layout&n&&(i[r+s]=t[s])}}this.dirtyStart=Math.min(this.dirtyStart,s),this.dirtyEnd=Math.max(this.dirtyEnd,i)}resize(e,t){const s=this.size;if(this.size=t,this.textureOnly)return void(s!==this.size&&(this._lastTexture=this._texture,this._texture=null));const i=(0,u.UK)(this.pixelType);this.destroy(),this.data=new i((0,l.Wg)(e.buffer))}_resetRange(){this.dirtyStart=2147483647,this.dirtyEnd=0}_initTexture(e){const t=new h.Z(e,this._textureDesc,(0,l.Pt)(this.data,void 0));if((0,l.pC)(this._lastTexture)&&this._fbos[0]){const s=this._lastTexture.descriptor.width,i=this._lastTexture.descriptor.height,r=this._lastTexture.descriptor.dataType,n=this._lastTexture.descriptor.pixelFormat,o=this.getFBO(e),a=(0,u.Yw)(r),l=new((0,u.UK)(r))(new ArrayBuffer(s*i*a*this.texelSize)),d=e.getBoundFramebufferObject(),{x:h,y:c,width:f,height:p}=e.getViewport();e.bindFramebuffer(o),o.readPixels(0,0,s,i,n,r,l),t.updateData(0,0,0,2*s,i/2,l),e.setViewport(h,c,f,p),e.bindFramebuffer(d)}return this.destroy(),this._texture=t,this._texture}}class _{constructor(e){this._onUpdate=e,this._initialized=!1,this._forceNextUpload=!1,this._locked=!1}initialize(e){const{blocks:t,shared:s,size:i}=e;if(this.shared=s,this.size=i,m("Initializing AttributeStoreView",e),(0,l.Wi)(this._data))this._data=(0,l.Fd)(t,(e=>new g(e,i,s)));else for(let e=0;e<this._data.length;e++){const r=this._data[e],n=t[e];(0,l.pC)(n)&&((0,l.Wi)(r)?this._data[e]=new g(n,i,s):r.resize(n,i))}this._initialized=!0}destroy(){(0,l.Po)(this._data,(e=>(0,l.Fd)(e,(e=>e.destroy())))),(0,l.Po)(this._defaultTexture,(e=>e.dispose()))}isUpdating(){const e=this._data;if((0,l.Wi)(e))return!0;const t=(0,l.pC)(this._pendingAttributeUpdate),s=t;return(0,o.Z)("esri-2d-log-updating")&&console.log(`Updating AttributeStoreView ${s}\n  -> hasPendingUpdate ${t}`),s}getBlock(e){return(0,l.Wi)(this._data)?null:this._data[e]}setLabelMinZoom(e,t){this.setData(e,0,1,t)}getLabelMinZoom(e){return this.getData(e,0,1,255)}getFilterFlags(e){return this.getData(e,0,0,0)}getVVSize(e){return this.getData(e,c.aK,0,0)}getData(e,t,s,i){if(!this._data)return 0;const r=(0,l.Wg)(this._data)[t];if((0,l.Wi)(r))return 0;const n=r.getData(e,s);return(0,l.pC)(n)?n:i}setData(e,t,s,i){const r=(0,l.Wg)(this._data)[t];(0,l.Wg)(r).setData(e,s,i)}lockTextureUpload(){this._locked=!0}unlockTextureUpload(){this._locked=!1}forceTextureUpload(){this._forceNextUpload=!0}async requestUpdate(e){if(this._pendingAttributeUpdate)return void p.error(new n.Z("mapview-webgl","Tried to update attribute data with a pending update"));const t=(0,i.hh)();return m("AttributeStoreView Update Requested",e),this._pendingAttributeUpdate={data:e,resolver:t},t.promise}update(){if(this._initialized&&(0,l.pC)(this._pendingAttributeUpdate)){const{data:e,resolver:t}=this._pendingAttributeUpdate,s=(0,l.Wg)(this._data);for(let t=0;t<e.blocks.length;t++){const i=e.blocks[t],r=s[t];(0,l.Po)(r,(e=>(0,l.Po)(i,(s=>{m(`Updating block ${t}`,s),e.update(s)}))))}this._pendingAttributeUpdate=null,t(),this._onUpdate()}}bindTextures(e){this.update();const t=this._getDefaultTexture(e);if(!this._initialized)return e.bindTexture(t,c.iJ),e.bindTexture(t,c.nM),e.bindTexture(t,c.Ij),void e.bindTexture(t,c.f2);const s=(0,l.Wg)(this._data);this._locked&&!this._forceNextUpload||((0,l.JR)(s,(t=>t.updateTexture(e,(()=>this._onUpdate())))),this._forceNextUpload=!1),e.bindTexture((0,l.R2)(s[0],t,(t=>t.getTexture(e))),c.iJ),e.bindTexture((0,l.R2)(s[1],t,(t=>t.getTexture(e))),c.nM),e.bindTexture((0,l.R2)(s[2],t,(t=>t.getTexture(e))),c.Ij),e.bindTexture((0,l.R2)(s[3],t,(t=>t.getTexture(e))),c.f2)}_getDefaultTexture(e){if((0,l.Wi)(this._defaultTexture)){const t={wrapMode:33071,pixelFormat:6408,dataType:5121,samplingMode:9728,width:1,height:1};this._defaultTexture=new h.Z(e,t,new Uint8Array(4))}return this._defaultTexture}}var x=s(64e3),v=s(52742),b=s(96255),w=s(89462),D=s(10268),T=s(81599);function C(e,t){const s=t.length;if(e<t[0].value||1===s)return t[0].size;for(let i=1;i<s;i++)if(e<t[i].value){const s=(e-t[i-1].value)/(t[i].value-t[i-1].value);return t[i-1].size+s*(t[i].size-t[i-1].size)}return t[s-1].size}function B(e,t,s=0){if((0,l.Wi)(t))return e[s+0]=0,e[s+1]=0,e[s+2]=0,void(e[s+3]=0);const{r:i,g:r,b:n,a:o}=t;e[s+0]=i*o/255,e[s+1]=r*o/255,e[s+2]=n*o/255,e[s+3]=o}class F{constructor(){this.symbolLevels=[],this.vvColorValues=new Float32Array(8),this.vvColors=new Float32Array(32),this.vvOpacityValues=new Float32Array(8),this.vvOpacities=new Float32Array(8),this.vvSizeMinMaxValue=new Float32Array(4),this.ddColors=new Float32Array(32),this.ddBackgroundColor=new Float32Array(4),this.ddActiveDots=new Float32Array(8),this._vvMaterialParameters={vvSizeEnabled:!1,vvColorEnabled:!1,vvRotationEnabled:!1,vvRotationType:"geographic",vvOpacityEnabled:!1}}getSizeVVFieldStops(e){const t=this._vvSizeFieldStops;switch(t.type){case"static":return t;case"level-dependent":return(0,l.Pt)(t.levels[e],(()=>{let s=1/0,i=0;for(const r in t.levels){const t=parseFloat(r),n=Math.abs(e-t);n<s&&(s=n,i=t)}if(s===1/0)return{sizes:new Float32Array([0,0,0,0,0,0]),values:new Float32Array([0,0,0,0,0,0])};const r=2**((e-i)/2),n=(0,l.Wg)(t.levels[i]),o=new Float32Array(n.values);return o[2]*=r,o[3]*=r,{sizes:(0,l.Wg)(n.sizes),values:o}}))}}get vvMaterialParameters(){return this._vvMaterialParameters}update(e){(0,l.pC)(this._vvInfo)&&this._updateVisualVariables(this._vvInfo.vvRanges,e)}setInfo(e,t,s){switch((0,l.pC)(s)&&s.forEach((e=>this._updateEffects(e))),this._vvInfo=t,e.type){case"dot-density":this._updateDotDensityInfo(e)}}getVariation(){return{ddDotBlending:this.ddDotBlending,outsideLabelsVisible:this.outsideLabelsVisible,oesTextureFloat:(0,T.Z)().supportsTextureFloat}}getVariationHash(){return(this.ddDotBlending?1:0)|(this.outsideLabelsVisible?1:0)<<1}_updateEffects(e){(0,l.pC)(e)&&e.filter&&e.filter.enabled&&(this.outsideLabelsVisible=e.excludedLabelsVisible)}_updateVisualVariables(e,t){const s=this._vvMaterialParameters;if(s.vvOpacityEnabled=!1,s.vvSizeEnabled=!1,s.vvColorEnabled=!1,s.vvRotationEnabled=!1,!e)return;const i=e.size;if(i){if(s.vvSizeEnabled=!0,i.minMaxValue){const e=i.minMaxValue;let s,r;if((0,u.$K)(e.minSize)&&(0,u.$K)(e.maxSize))if((0,u.hj)(e.minSize)&&(0,u.hj)(e.maxSize))s=(0,b.F2)(e.minSize),r=(0,b.F2)(e.maxSize);else{const i=t.scale;s=(0,b.F2)(C(i,e.minSize.stops)),r=(0,b.F2)(C(i,e.maxSize.stops))}this.vvSizeMinMaxValue.set([e.minDataValue,e.maxDataValue,s,r])}if(i.scaleStops&&(this.vvSizeScaleStopsValue=(0,b.F2)(C(t.scale,i.scaleStops.stops))),i.unitValue){const e=(0,w.c9)(t.spatialReference)/D.a[i.unitValue.unit];this.vvSizeUnitValueToPixelsRatio=e/t.resolution}i.fieldStops&&(this._vvSizeFieldStops=i.fieldStops)}const r=e.color;r&&(s.vvColorEnabled=!0,this.vvColorValues.set(r.values),this.vvColors.set(r.colors));const n=e.opacity;n&&(s.vvOpacityEnabled=!0,this.vvOpacityValues.set(n.values),this.vvOpacities.set(n.opacities));const o=e.rotation;o&&(s.vvRotationEnabled=!0,s.vvRotationType=o.type)}_updateDotDensityInfo(e){const t=e.attributes;this.ddDotValue=e.dotValue,this.ddDotScale=e.referenceScale,this.ddDotSize=e.dotSize,this.ddDotBlending=e.dotBlendingEnabled,this.ddSeed=e.seed;for(let e=0;e<c.$0;e++){const s=e>=t.length?new v.Z([0,0,0,0]):t[e].color;B(this.ddColors,s,4*e)}for(let t=0;t<8;t++)this.ddActiveDots[t]=t<e.attributes.length?1:0;B(this.ddBackgroundColor,e.backgroundColor)}}class I extends x.Z{constructor(e){super(e),this._rendererInfo=new F,this._materialItemsRequestQueue=new r.Z,this.attributeView=new _((()=>this.onAttributeStoreUpdate()))}destroy(){this.removeAllChildren(),this.children.forEach((e=>e.destroy())),this.attributeView.destroy(),this._materialItemsRequestQueue.clear()}setRendererInfo(e,t,s){this._rendererInfo.setInfo(e,t,s),this.requestRender()}async getMaterialItems(e,t){if(!e||0===e.length)return null;const s=(0,i.hh)();return this._materialItemsRequestQueue.push({items:e,abortOptions:t,resolver:s}),this.requestRender(),s.promise}doRender(e){if(e.context.capabilities.enable("textureFloat"),e.context.capabilities.enable("vao"),this._materialItemsRequestQueue.length>0){let t=this._materialItemsRequestQueue.pop();for(;t;)this._processMaterialItemRequest(e,t),t=this._materialItemsRequestQueue.pop()}super.doRender(e)}renderChildren(e){for(const t of this.children)t.commit(e);this._rendererInfo.update(e.state),super.renderChildren(e)}createRenderParams(e){return{...super.createRenderParams(e),rendererInfo:this._rendererInfo,attributeView:this.attributeView}}onAttributeStoreUpdate(){}_processMaterialItemRequest(e,{items:t,abortOptions:s,resolver:i}){const{painter:r,pixelRatio:n}=e,o=t.map((e=>r.textureManager.rasterizeItem(e.symbol,n,e.glyphIds,s)));Promise.all(o).then((e=>{if(!this.stage)return void i.reject();const s=e.map(((e,s)=>({id:t[s].id,mosaicItem:e})));i.resolve(s)}),i.reject)}}},64e3:(e,t,s)=>{s.d(t,{Z:()=>h});var i=s(32780),r=s(78281),n=s(58627),o=s(10461),a=s(87738);const l=(e,t)=>e.key.level-t.key.level!=0?e.key.level-t.key.level:e.key.row-t.key.row!=0?e.key.row-t.key.row:e.key.col-t.key.col;class d extends n.Z{constructor(e){super(),this._tileInfoView=e}get requiresDedicatedFBO(){return!1}renderChildren(e){this.sortChildren(l),this.setStencilReference(),super.renderChildren(e)}createRenderParams(e){const{state:t}=e;return{...super.createRenderParams(e),requiredLevel:this._tileInfoView.getClosestInfoForScale(t.scale).level,displayLevel:this._tileInfoView.tileInfo.scaleToZoom(t.scale)}}prepareRenderPasses(e){const t=super.prepareRenderPasses(e);return t.push(e.registerRenderPass({name:"stencil",brushes:[a.Z],drawPhase:r.jx.DEBUG|r.jx.MAP|r.jx.HIGHLIGHT,target:()=>this.getStencilTarget()})),(0,i.Z)("esri-tiles-debug")&&t.push(e.registerRenderPass({name:"tileInfo",brushes:[o.Z],drawPhase:r.jx.DEBUG,target:()=>this.children})),t}getStencilTarget(){return this.children}updateTransforms(e){for(const t of this.children){const s=this._tileInfoView.getTileResolution(t.key);t.setTransform(e,s)}}setStencilReference(){let e=1;for(const t of this.children)t.stencilRef=e++}}const h=d},94684:(e,t,s)=>{s.d(t,{I:()=>a}),s(32780);var i=s(40341),r=s(47980),n=s(35180),o=s(79630);class a extends n.s{constructor(e,t,s,i=s){super(),this.triangleCountReportedInDebug=0,this.transforms={dvs:(0,r.c)(),tileMat3:(0,r.c)()},this.triangleCount=0,this.key=new o.Z(e),this.bounds=t,this.size=s,this.coordRange=i}destroy(){this.texture&&(this.texture.dispose(),this.texture=null)}get coords(){return this._coords}get bounds(){return this._bounds}set bounds(e){this._coords=[e[0],e[3]],this._bounds=e}setTransform(e,t){const s=t/(e.resolution*e.pixelRatio),r=this.transforms.tileMat3,[n,o]=e.toScreenNoRotation([0,0],this.coords),a=this.size[0]/this.coordRange[0]*s,l=this.size[1]/this.coordRange[1]*s;(0,i.s)(r,a,0,0,0,l,0,n,o,1),(0,i.m)(this.transforms.dvs,e.displayViewMat3,r)}}},66027:(e,t,s)=>{s.d(t,{o:()=>n});var i=s(26256),r=s(94684);class n extends r.I{constructor(e,t){super(e,t,[i.I_,i.I_])}}},95814:(e,t,s)=>{s.d(t,{Z:()=>n});var i=s(65906);class r extends i.T{constructor(e){super(e)}get hasLabels(){return!1}onTileData(e,t){e.patch(t),this.contains(e)||this.addChild(e),this.requestRender()}onTileError(e){e.clear(),this.contains(e)||this.addChild(e)}_renderChildren(e,t){for(const s of this.children)s.isReady&&s.hasData&&(s.commit(e),e.context.setStencilFunction(514,s.stencilRef,255),s._displayList.replay(e,s,t))}}const n=r},15543:(e,t,s)=>{s.d(t,{Z:()=>rt});var i=s(23324),r=s(22685),n=s(47811),o=s(32780),a=s(43388),l=s(19955),d=s(96255),h=s(74791),c=(s(76997),s(20337),s(72903)),u=s(18223),f=s(49030),p=s(89805),m=s(27954),y=s(9673),g=s(26560),_=s(15073),x=s(7319),v=s(54522);function b(e,t){if(!t)return e;const s=function(e,t){const s=[],{ymin:i,ymax:r}=e,n=e.xmax-e.xmin,o=e.xmin,a=e.xmax;let l;const[d,h]=t.valid;l=D(e.xmin,t);const c=l.x,u=l.frameId;l=D(e.xmax,t);const f=l.x,p=l.frameId,m=c===f&&n>0;if(n>2*h){const e={xmin:o<a?c:f,ymin:i,xmax:h,ymax:r},t={xmin:d,ymin:i,xmax:o<a?f:c,ymax:r},n={xmin:0,ymin:i,xmax:h,ymax:r},l={xmin:d,ymin:i,xmax:0,ymax:r},m=[],y=[];T(e,n)&&m.push(u),T(e,l)&&y.push(u),T(t,n)&&m.push(p),T(t,l)&&y.push(p);for(let e=u+1;e<p;e++)m.push(e),y.push(e);s.push({extent:e,frameIds:[u]},{extent:t,frameIds:[p]},{extent:n,frameIds:m},{extent:l,frameIds:y})}else c>f||m?s.push({extent:{xmin:c,ymin:i,xmax:h,ymax:r},frameIds:[u]},{extent:{xmin:d,ymin:i,xmax:f,ymax:r},frameIds:[p]}):s.push({extent:{xmin:c,ymin:i,xmax:f,ymax:r},frameIds:[u]});return s}(e,t).map((e=>e.extent));return s.length<2?s[0]||e:s.length>2?(e.xmin=t.valid[0],e.xmax=t.valid[1],e):{rings:s.map((e=>[[e.xmin,e.ymin],[e.xmin,e.ymax],[e.xmax,e.ymax],[e.xmax,e.ymin],[e.xmin,e.ymin]]))}}function w(e,t,s){if(Array.isArray(e)){const i=e[0];if(i>t){const s=(0,x.XZ)(i,t);e[0]=i+s*(-2*t)}else if(i<s){const t=(0,x.XZ)(i,s);e[0]=i+t*(-2*s)}}else{const i=e.x;if(i>t){const s=(0,x.XZ)(i,t);e.x+=s*(-2*t)}else if(i<s){const t=(0,x.XZ)(i,s);e.x+=t*(-2*s)}}return e}function D(e,t){const[s,i]=t.valid,r=2*i;let n,o=0;return e>i?(n=Math.ceil(Math.abs(e-i)/r),e-=n*r,o=n):e<s&&(n=Math.ceil(Math.abs(e-s)/r),e+=n*r,o=-n),{x:e,frameId:o}}function T(e,t){const{xmin:s,ymin:i,xmax:r,ymax:n}=t;return C(e,s,i)&&C(e,s,n)&&C(e,r,n)&&C(e,r,i)}function C(e,t,s){return t>=e.xmin&&t<=e.xmax&&s>=e.ymin&&s<=e.ymax}class B{cut(e,t){let s;if(e.rings)this.closed=!0,s=e.rings,this.minPts=4;else{if(!e.paths)return null;this.closed=!1,s=e.paths,this.minPts=2}const i=s.length,r=-2*t;for(let e=0;e<i;e++){const t=s[e];if(t&&t.length>=this.minPts){const e=[];for(const s of t)e.push([s[0]+r,s[1]]);s.push(e)}}return this.closed?e.rings=s:e.paths=s,e}}const F=(0,p.Ue)();var I=s(81433),R=s(65904),S=s(33212),z=s(26256),L=s(75928);function M(e,t,s){if(!e.allDirty)if(null!=e.from&&null!=e.count){const i=Math.min(e.from,t),r=Math.max(e.from+e.count,t+s)-i;e.from=i,e.count=r}else e.from=t,e.count=s}const A=class{constructor(){this._dirties=(0,L.Mk)((()=>({indices:{from:null,count:null,allDirty:!1}})),(()=>({vertices:{from:null,count:null,allDirty:!1}})))}hasDirty(){for(const e of this._dirties)if(null!==e.data.indices.count||e.data.indices.allDirty)return!0;return!1}markAllClean(){for(const e of this._dirties){e.data.indices.from=null,e.data.indices.count=null,e.data.indices.allDirty=!1;for(const t in e.buffers)e.buffers[t].data.vertices.from=null,e.buffers[t].data.vertices.count=null,e.buffers[t].data.vertices.allDirty=!1}}markAllDirty(){for(const e of this._dirties){e.data.indices.allDirty=!0;for(const t in e.buffers)e.buffers[t].data.vertices.allDirty=!0}}forEach(e){for(let t=0;t<this._dirties.length;++t){const s=this._dirties[t],i={};for(const e in s.buffers){const t=s.buffers[e].data.vertices;(t.allDirty||null!=t.from&&null!=t.count&&t.count>0)&&(i[e]=t)}const r=s.data.indices;let n;n=r.allDirty||null!=r.from&&null!=r.count&&r.count>0?{indices:r,vertices:i}:{indices:null,vertices:i},(n.indices||Object.keys(n).length>0)&&e(n,t)}}markDirtyIndices(e,t,s){M(this._dirties[e].data.indices,t,s)}markDirtyVertices(e,t,s,i){M(this._dirties[e].buffers[t].data.vertices,s,i)}};class V{constructor(e){this._largestRange=null,this._parent=e,this._updateLargestRange()}get largestRange(){return this._largestRange}rangeCreated(e){(!this._largestRange||e.count>this._largestRange.count)&&(this._largestRange=e)}rangeResized(e,t){e===this._largestRange?e.count<t&&this._updateLargestRange():(!this._largestRange||e.count>this._largestRange.count)&&(this._largestRange=e)}findBestRange(e){let t=this._parent._freeHead,s=null;for(;null!==t;)t.count>=e&&(!s||t.count-e<s.count-e)&&(s=t),t=t.next;return s}findAdjacentRanges(e,t){let s=!0,i=!1,r=null,n=this._parent._freeHead;for(;s&&!i;){const o=null!==r?r.from+r.count:0,a=null!==n?n.from:this._parent._size;e>=o&&e+t<=a?(s=!1,i=!0):null!==n?(r=n,n=n.next):s=!1}return[r,n]}_updateLargestRange(){let e=null,t=this._parent._freeHead;for(;null!==t;)(!e||t.count>e.count)&&(e=t),t=t.next;this._largestRange=e}}class U{constructor(e,t){this._allocated=0,this._size=e,this._freeHead=e>0?{from:0,count:e,prev:null,next:null}:null,this._bookKeeper=t||new V(this),this._freeHead&&this._bookKeeper.rangeCreated(this._freeHead)}allocate(e){const t=this._bookKeeper.findBestRange(e);if(null===t)return-1;const s=t.from,i=t.count;if(t.from+=e,t.count-=e,this._bookKeeper.rangeResized(t,s,i),this._allocated+=e,0===t.count){const e=null!==t.prev?this._freeHead:t.next;U._removeRange(t),this._freeHead=e}return s}free(e,t){const[s,i]=this._bookKeeper.findAdjacentRanges(e,t),r={from:e,count:t,prev:s,next:i};if(null!==s&&(s.next=r),null!==i&&(i.prev=r),this._bookKeeper.rangeCreated(r),this._allocated-=t,null!==i&&r.from+r.count===i.from){const e=r.from,t=r.count;U._fuse(r,i),U._removeRange(i),this._bookKeeper.rangeResized(r,e,t),this._bookKeeper.rangeResized(i,void 0,0)}if(null!==s&&s.from+s.count===r.from){const e=s.from,t=s.count;U._fuse(s,r),U._removeRange(r),this._bookKeeper.rangeResized(s,e,t),this._bookKeeper.rangeResized(r,void 0,0)}this._freeHead=null!==r.prev?this._freeHead:r}get fragmentation(){const e=this._size-this._allocated;return 0===e?0:1-this._bookKeeper.largestRange.count/e}static _removeRange(e){null!==e.prev?null!==e.next?(e.prev.next=e.next,e.next.prev=e.prev):e.prev.next=null:null!==e.next&&(e.next.prev=null)}static _fuse(e,t){e.count+=t.count,e.next=t.next,t.from+=t.count,t.count=0,null!==t.next&&(t.next.prev=e)}}const k=["FILL","LINE","MARKER","TEXT","LABEL"];class O{constructor(e,t,s,i){this._strides=e,this._displayList=t,this._freeListsAndStorage={},this._dirtyMap=null,this._dirtyMap=s;for(const t in e){this._freeListsAndStorage[t]={vtxFreeList:i?new U(i):null,idxFreeList:i?new U(i):null,vertexBuffers:{},indexBuffer:i?new Uint32Array(i):null};for(const s in e[t])this._freeListsAndStorage[t].vertexBuffers[s]={data:i?(0,L.C$)(i,e[t][s]):null,stride:e[t][s]}}}static fromTileData(e,t){const s=function(e){const t=e.getStrides(),s={};for(let e=0;e<t.length;e++)s[k[e]]=t[e];return s}(e),i=[0,0,0,0,0],r=[0,0,0,0,0],n=e.tileDisplayData.displayObjects;for(const e of n)for(const t of e.displayRecords)i[t.geometryType]=Math.max(i[t.geometryType],t.vertexFrom+t.vertexCount),r[t.geometryType]=Math.max(r[t.geometryType],t.indexFrom+t.indexCount);const o=new O(s,e.tileDisplayData.displayList,t,null);for(let t=0;t<e.tileBufferData.geometries.length;++t){const s=i[t],n=r[t],a=e.tileBufferData.geometries[t],l=k[t],d=o._storageFor(l),h=e.tileBufferData.geometries[t].indexBuffer;let c;d.indexBuffer=h,d.idxFreeList=new U(h.length),d.idxFreeList.allocate(n);for(const s in a.vertexBuffer){const i=e.tileBufferData.geometries[t].vertexBuffer[s];d.vertexBuffers[s].data=i.data,d.vertexBuffers[s].stride=i.stride;const r=(0,L.Y8)(i.stride),n=i.data.length*r/i.stride;c||(c=n)}d.vtxFreeList=new U(c),d.vtxFreeList.allocate(s)}return o}delete(e){const t=k[e.geometryType];this._freeVertices(t,e.vertexFrom,e.vertexCount),this._freeIndices(t,e.indexFrom,e.indexCount),this._displayList.removeFromList(e),e.vertexFrom=void 0,e.indexFrom=void 0}setMeshData(e,t,s,i,r){const n=k[e.geometryType];let o,a;e.meshData=null,void 0===e.vertexFrom?(a=t.vertexCount,o=this._allocateVertices(n,a)):t.vertexCount>e.vertexCount?(this._freeVertices(n,e.vertexFrom,e.vertexCount),a=t.vertexCount,o=this._allocateVertices(n,a)):t.vertexCount===e.vertexCount?(o=e.vertexFrom,a=e.vertexCount):(this._freeVertices(n,e.vertexFrom+t.vertexCount,e.vertexCount-t.vertexCount),o=e.vertexFrom,a=t.vertexCount);let l,d,h,c=!0;if(void 0===e.indexFrom?(l=r,h=t.indexCount,d=this._allocateIndices(n,h)):t.indexCount>e.indexCount?(l=this._displayList.removeFromList(e),this._freeIndices(n,e.indexFrom,e.indexCount),h=t.indexCount,d=this._allocateIndices(n,h)):t.indexCount===e.indexCount?(c=!1,d=e.indexFrom,h=e.indexCount):(l=this._displayList.removeFromList(e),this._freeIndices(n,e.indexFrom+t.indexCount,e.indexCount-t.indexCount),d=e.indexFrom,h=t.indexCount),-1!==o&&-1!==d){const r=this._storageFor(n);if((0,L.wO)(o,d,r.vertexBuffers,r.indexBuffer,t,s,i),e.vertexFrom=o,e.indexFrom=d,e.vertexCount=t.vertexCount,e.indexCount=t.indexCount,this._dirtyMap){this._dirtyMap.markDirtyIndices(e.geometryType,e.indexFrom,e.indexCount);for(const t in s)this._dirtyMap.markDirtyVertices(e.geometryType,t,e.vertexFrom,e.vertexCount)}return c&&this._displayList.addToList(e,l),!0}return-1!==o&&this._freeVertices(n,o,a),-1!==d&&this._freeIndices(n,d,h),e.setMeshDataFromBuffers(t,s,i),e.vertexFrom=void 0,e.vertexCount=0,e.indexFrom=void 0,e.indexCount=0,!1}tryAddMeshData(e,t){const s=t.vertexBuffer,i=t.indexBuffer,r=k[e.geometryType],n=this._allocateVertices(r,e.vertexCount);if(-1===n)return this._freeVertices(r,n,e.vertexCount),!1;const o=this._allocateIndices(r,e.indexCount);if(-1===o)return this._freeVertices(r,n,e.vertexCount),this._freeIndices(r,o,e.indexCount),!1;const a=this._storageFor(r);if((0,L.wO)(n,o,a.vertexBuffers,a.indexBuffer,e,s,i),e.vertexFrom=n,e.indexFrom=o,this._dirtyMap){this._dirtyMap.markDirtyIndices(e.geometryType,e.indexFrom,e.indexCount);for(const t in s)this._dirtyMap.markDirtyVertices(e.geometryType,t,n,e.vertexCount)}return this._displayList.addToList(e),!0}_allocateVertices(e,t){const s=this._storageFor(e),i=s.vtxFreeList.allocate(t);return-1===i||s.vtxFreeList.fragmentation>.5?-1:i}_freeVertices(e,t,s){this._storageFor(e).vtxFreeList.free(t,s)}_freeIndices(e,t,s){this._storageFor(e).idxFreeList.free(t,s)}_allocateIndices(e,t){const s=this._storageFor(e),i=s.idxFreeList.allocate(t);return-1===i||s.idxFreeList.fragmentation>.5?-1:i}_storageFor(e){return this._freeListsAndStorage[e]}_stridesFor(e,t){return this._strides[e][t]}}const G=O;var P=s(60663),Z=(s(79830),s(62146),s(61605),s(23265),s(16820),s(65585));var j=s(66027);class E extends j.o{constructor(){super(...arguments),this._data=null,this._displayList=null,this._lastCommitTime=0,this._hasData=!1,this._invalidated=!1,this._wglBuffers=null,this._dirtyMap=new A}destroy(){super.destroy(),this.clear()}get hasData(){return!!this._hasData}get displayObjects(){var e;return null!=(e=this._displayObjects)?e:[]}getGeometry(e){return this._wglBuffers&&this._wglBuffers.has(e)?this._wglBuffers.get(e):null}getDisplayList(){return this._displayList}patch(e){if(!0===e.clear)return this.clear(),void(this._hasData=!1);const t=e.addOrUpdate,s=e.remove;!this._data&&t&&t.tileDisplayData.displayObjects.length?(t.tileDisplayData.computeDisplayList(),this._dirtyMap=new A,this._dispRecStore=G.fromTileData(t,this._dirtyMap),this._data=t,this._dirtyMap.markAllDirty(),this._hasData=!0,e.end&&this.ready()):this._data&&(t&&t.tileDisplayData.displayObjects.length||s.length)?this._doPatchData(e):e.end&&this.ready(),e.end&&!this._data&&this.clear(),this.requestRender(),this.emit("change")}commit(e){e.time&&e.time===this._lastCommitTime||(this._lastCommitTime=e.time,this.visible&&this._data&&(this._wglBuffers||(this._wglBuffers=new class{constructor(e){this.geometryMap=(0,L.Mk)((()=>({indexBuffer:P.Z.createIndex(e,35044),vao:null})),((t,s)=>({vertexBuffer:P.Z.createVertex(e,L.mR[s])})))}dispose(){for(let e=0;e<5;e++){const t=this.geometryMap[e];if(t){t.data.vao&&t.data.vao.dispose(!1),t.data.indexBuffer&&t.data.indexBuffer.dispose();for(const e in t.buffers)t.buffers[e]&&t.buffers[e].data.vertexBuffer.dispose()}}}get(e){const t=this.geometryMap[e];return{draw(e,s,i,r,n){if(!t.data.vao){const r={};for(const e in t.buffers)r[e]=t.buffers[e].data.vertexBuffer;t.data.vao=new Z.Z(e,i,s,r,t.data.indexBuffer)}const o=t.data.vao;e.bindVAO(o),e.drawElements(4,n,5125,Uint32Array.BYTES_PER_ELEMENT*r),e.bindVAO(null)}}}has(e){return null!=this.geometryMap[e]}upload(e,t){t.forEach(((t,s)=>{this._upload(t,s,e)}))}_upload(e,t,s){if(e.indices&&(e.indices.allDirty?this._uploadIndices(s,t):null!=e.indices.from&&null!=e.indices.count&&this._uploadIndices(s,t,e.indices.from,e.indices.count)),e.vertices){const i=e.vertices;for(const e in i){const r=i[e];r.allDirty?this._uploadVertices(s,t,e):null!=r.from&&null!=r.count&&this._uploadVertices(s,t,e,r.from,r.count)}}}_uploadVertices(e,t,s,i,r){const n=this.geometryMap[t];if(!n)return;const o=e.geometries[t].vertexBuffer[s];if(!o)return;const a=o.stride,l=o.data.buffer;n.buffers[s]&&l.byteLength>0&&(null!=i&&null!=r?n.buffers[s].data.vertexBuffer.setSubData(l,i*a,i*a,(i+r)*a):n.buffers[s].data.vertexBuffer.setData(l))}_uploadIndices(e,t,s,i){const r=this.geometryMap[t];if(!r)return;const n=e.geometries[t].indexBuffer.buffer;r.data.indexBuffer&&n.byteLength>0&&(null!=s&&null!=i?r.data.indexBuffer.setSubData(n,4*s,4*s,4*(s+i)):r.data.indexBuffer.setData(n))}}(e.context)),(this._dirtyMap.hasDirty()||this._invalidated)&&(this._invalidated=!1,this._wglBuffers.upload(this._data.tileBufferData,this._dirtyMap),this._displayList=this._data.tileDisplayData.displayList.clone(),this._displayObjects=this._data.tileDisplayData.displayObjects.slice(),this._dirtyMap.markAllClean())))}clear(){this._data=null,this._displayList=null,this._dispRecStore=null,this._wglBuffers&&(this._wglBuffers.dispose(),this._wglBuffers=null)}_doPatchData(e){this._invalidated=!0,this._patchData(e)||(this._dirtyMap.markAllDirty(),this._data.reshuffle(),this._dispRecStore=G.fromTileData(this._data,this._dirtyMap)),this.requestRender()}_patchData(e){let t=!0;const s=e.addOrUpdate&&e.addOrUpdate.tileDisplayData&&e.addOrUpdate.tileDisplayData.displayObjects||[],i=(e.remove||[]).slice();for(const e of s)null!=e.insertAfter&&i.push(e.id);for(const e of i){const t=this._data.tileDisplayData.displayObjectRegistry.get(e);if(t){this._data.tileDisplayData.displayList.removeFromList(t.displayRecords);for(const e of t.displayRecords)this._dispRecStore.delete(e);this._data.tileDisplayData.displayObjectRegistry.delete(e);const s=this._data.tileDisplayData.displayObjects.indexOf(t);this._data.tileDisplayData.displayObjects.splice(s,1)}}for(const i of s){let s,r=this._data.tileDisplayData.displayObjectRegistry.get(i.id);if(r){const e=r.displayRecords;r.set(i),r.displayRecords=e;const t=r.displayRecords.length;for(let e=0;e<t;++e){const t=r.displayRecords[e],s=i.displayRecords[e];(e>=i.displayRecords.length||t.geometryType!==s.geometryType||t.symbolLevel!==s.symbolLevel||t.zOrder!==s.zOrder||t.materialKey!==s.materialKey)&&(this._dispRecStore.delete(r.displayRecords[e]),e<i.displayRecords.length&&(r.displayRecords[e]=void 0))}r.displayRecords.length=i.displayRecords.length}else{let e;r=i.copy(),r.displayRecords=[],this._data.tileDisplayData.displayObjectRegistry.set(i.id,r);const t=this._data.tileDisplayData.displayObjects;if(null!=r.insertAfter)if(s={},r.insertAfter>=0){const s=this._data.tileDisplayData.displayObjectRegistry.get(r.insertAfter);s?(e=t.indexOf(s)+1,e<t.length?t.splice(e,0,r):(t.push(r),e=t.length)):(t.push(r),e=t.length)}else t.unshift(r),e=0;else t.push(r),e=t.length;if(s){const r=i.displayRecords.length>0?1:0;let n=0;for(let i=e-1;i>=0&&n<r;--i)for(let e=t[i].displayRecords.length-1;e>=0&&n<r;--e){const r=t[i].displayRecords[e],o=this._data.tileDisplayData.displayList.getDPInfoType();s[o]||(s[o]=r,++n)}}}const n=i.displayRecords.length;for(let o=0;o<n;++o){const n=i.displayRecords[o];let a=r.displayRecords[o];a?(a.meshData=n.meshData,a.materialKey=n.materialKey):(a=n.copy(),a.vertexFrom=void 0,a.indexFrom=void 0,r.displayRecords[o]=a);const l=n.geometryType,d=this._data.tileDisplayData.displayList.getDPInfoType(),h=e.addOrUpdate.tileBufferData.geometries[l],c=h.vertexBuffer,u=h.indexBuffer;let f;s&&(f=s[d]?this._data.tileDisplayData.displayList.splitAfter(s[d]):-1),t=this._dispRecStore.setMeshData(a,n,c,u,f)&&t,s&&null!=a.indexFrom&&null!=a.indexFrom&&(s[d]=a)}}return t}}const K=class{constructor(){this._byGeometryType=null}get satisfied(){return!this._byGeometryType}reset(){this._byGeometryType=null}verticesFor(e){return this._byGeometryType?this._byGeometryType[e].vertices:0}indicesFor(e){return this._byGeometryType?this._byGeometryType[e].indices:0}needMore(e,t,s){if(!t&&!s)return;this._byGeometryType||(this._byGeometryType=[{vertices:0,indices:0},{vertices:0,indices:0},{vertices:0,indices:0},{vertices:0,indices:0},{vertices:0,indices:0}]);const i=this._byGeometryType[e];i.vertices+=t,i.indices+=s}};class W{constructor(){this.geometries=[{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}}]}clone(){const e=new W;for(let t=0;t<this.geometries.length;t++){const s=this.geometries[t],i=e.geometries[t];i.indexBuffer=s.indexBuffer.slice(),i.vertexBuffer={};for(const e in s.vertexBuffer){const{data:t,stride:r}=s.vertexBuffer[e];i.vertexBuffer[e]={data:t.slice(),stride:r}}}return e}static deserialize(e){const t=new W;for(let s=0;s<5;++s){t.geometries[s].indexBuffer=new Uint32Array(e.geometries[s].indexBuffer),t.geometries[s].vertexBuffer={};for(const i in e.geometries[s].vertexBuffer)t.geometries[s].vertexBuffer[i]={data:(0,L.e2)(e.geometries[s].vertexBuffer[i].data,e.geometries[s].vertexBuffer[i].stride),stride:e.geometries[s].vertexBuffer[i].stride}}return t}serialize(){const e={geometries:[{indexBuffer:this.geometries[0].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[1].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[2].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[3].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[4].indexBuffer.buffer,vertexBuffer:{}}]};for(let t=0;t<5;++t)for(const s in this.geometries[t].vertexBuffer)e.geometries[t].vertexBuffer[s]={data:this.geometries[t].vertexBuffer[s].data.buffer,stride:this.geometries[t].vertexBuffer[s].stride};return e}getBuffers(){const e=[];for(let t=0;t<5;++t){e.push(this.geometries[t].indexBuffer.buffer);for(const s in this.geometries[t].vertexBuffer)e.push(this.geometries[t].vertexBuffer[s].data.buffer)}return e}}const q=W;var H=s(78281);function N(e,t,s,...i){t<e.length?e.splice(t,s,...i):e.push(...i)}const X=new Map;X.set(H.jx.MAP,[H.LW.FILL,H.LW.LINE,H.LW.MARKER,H.LW.TEXT]),X.set(H.jx.LABEL,[H.LW.LABEL]),X.set(H.jx.LABEL_ALPHA,[H.LW.LABEL]);class Y{constructor(){this.symbolLevels=[]}replay(e,t,s){for(const i of this.symbolLevels)for(const r of i.zLevels){const i=r.geometryDPInfo.unified;if(i)for(const r of i){const i=e.painter.getGeometryBrush(r.geometryType),n=t.getGeometry(r.geometryType),o={geometryType:r.geometryType,materialKey:r.materialKey,indexFrom:r.indexFrom,indexCount:r.indexCount,draw:(e,t,s)=>{n.draw(e,t,s,r.indexFrom,r.indexCount)}};i.prepareState(e,t),i.drawGeometry(e,t,o,s)}}}get empty(){return!this.symbolLevels||0===this.symbolLevels.length}clear(){this.symbolLevels.length=0}addToList(e,t){if(Array.isArray(e))for(const s of e)this._addToList(s,t);else this._addToList(e,t)}removeFromList(e){Array.isArray(e)||(e=[e]);let t=null;for(const s of e)t=this._removeFromList(s);return t}clone(){const e=new Y;for(const t of this.symbolLevels)e.symbolLevels.push(t.clone());return e}splitAfter(e){const t=this._getDisplayList(e.symbolLevel,e.zOrder),s=t.length,i=e.indexFrom+e.indexCount;for(let r=0;r<s;++r){const s=t[r];if(s.geometryType===e.geometryType&&i>s.indexFrom&&i<=s.indexFrom+s.indexCount){if(i<s.indexFrom+s.indexCount){const e=new J;e.geometryType=s.geometryType,e.materialKey=s.materialKey,e.indexFrom=i,e.indexCount=s.indexFrom+s.indexCount-i,t.splice(r+1,0,e),s.indexCount=i-s.indexFrom}return r}}}_addToList(e,t){const s=e.symbolLevel,i=e.zOrder,r=this._getDisplayList(s,i),n=null!=t?t:r.length-1,o=n>=0&&n<r.length?r[n]:null;if(null!==o&&o.materialKey===e.materialKey&&o.indexFrom+o.indexCount===e.indexFrom&&o.geometryType===e.geometryType)o.indexCount+=e.indexCount;else{const t=new J;t.indexFrom=e.indexFrom,t.indexCount=e.indexCount,t.materialKey=e.materialKey,t.geometryType=e.geometryType,N(r,n+1,0,t)}}_removeFromList(e){const t=e.symbolLevel,s=e.zOrder,i=this._getDisplayList(t,s),r=i.length;let n;for(let t=0;t<r;++t){const s=i[t];if(e.indexFrom+e.indexCount>s.indexFrom&&e.indexFrom<s.indexFrom+s.indexCount&&s.geometryType===e.geometryType){n=t;break}}if(void 0!==n){const t=i[n];if(e.indexFrom===t.indexFrom)return t.indexCount-=e.indexCount,t.indexFrom+=e.indexCount,0===t.indexCount&&N(i,n,1),n-1;if(e.indexFrom+e.indexCount===t.indexFrom+t.indexCount)return t.indexCount-=e.indexCount,0===t.indexCount?(N(i,n,1),n-1):n;{const s=t.indexFrom,r=e.indexFrom-t.indexFrom,o=e.indexCount,a=t.indexFrom+t.indexCount-(e.indexFrom+e.indexCount);t.indexCount=r;const l=new J;return l.geometryType=t.geometryType,l.materialKey=t.materialKey,l.indexFrom=s+r+o,l.indexCount=a,N(i,n+1,0,l),n}}return null}_getDisplayList(e,t){let s;const i=this.symbolLevels.length;for(let t=0;t<i;t++)if(this.symbolLevels[t].symbolLevel===e){s=this.symbolLevels[t];break}let r;s||(s=new ee,s.symbolLevel=e,this.symbolLevels.push(s));const n=s.zLevels.length;for(let e=0;e<n;e++)if(s.zLevels[e].zLevel===t){r=s.zLevels[e];break}return r||(r=new $,r.geometryDPInfo=new Q,r.zLevel=t,s.zLevels.push(r)),r.geometryDPInfo.unified||(r.geometryDPInfo.unified=[]),r.geometryDPInfo.unified}getDPInfoType(){return"unified"}}class J{constructor(){this.materialKey=null,this.indexFrom=0,this.indexCount=0}clone(){const e=new J;return e.geometryType=this.geometryType,e.materialKey=this.materialKey,e.indexFrom=this.indexFrom,e.indexCount=this.indexCount,e}}class Q{constructor(){this.fill=null,this.line=null,this.marker=null,this.text=null,this.label=null,this.unified=null}clone(){const e=new Q;return e.fill=this.fill&&this.fill.map((e=>e.clone())),e.line=this.line&&this.line.map((e=>e.clone())),e.marker=this.marker&&this.marker.map((e=>e.clone())),e.text=this.text&&this.text.map((e=>e.clone())),e.label=this.label&&this.label.map((e=>e.clone())),e.unified=this.unified&&this.unified.map((e=>e.clone())),e}}class ${constructor(){this.geometryDPInfo=new Q}clone(){const e=new $;return e.zLevel=this.zLevel,e.geometryDPInfo=this.geometryDPInfo.clone(),e}}class ee{constructor(){this.zLevels=[]}clone(){const e=new ee;e.symbolLevel=this.symbolLevel;for(const t of this.zLevels)e.zLevels.push(t.clone());return e}}const te=Y,se=class{constructor(){this.vertexData=new Map,this.vertexCount=0,this.indexData=[]}clear(){this.vertexData.clear(),this.vertexCount=0,this.indexData=[]}update(e,t,s){for(const t in e)this.vertexData.set(t,e[t]);for(const t in this.vertexData)null===e[t]&&this.vertexData.delete(t);this.vertexCount=t,this.indexData=s}};class ie{constructor(e,t,s,i=0,r=0){this.id=e,this.geometryType=t,this.materialKey=s,this.minZoom=i,this.maxZoom=r,this.meshData=null,this.symbolLevel=0,this.zOrder=0,this.vertexFrom=0,this.vertexCount=0,this.indexFrom=0,this.indexCount=0}get sortKey(){return void 0===this._sortKey&&this._computeSortKey(),this._sortKey}clone(){return this.copy()}copy(){const e=new ie(this.id,this.geometryType,this.materialKey);return e.vertexFrom=this.vertexFrom,e.vertexCount=this.vertexCount,e.indexFrom=this.indexFrom,e.indexCount=this.indexCount,e.zOrder=this.zOrder,e.symbolLevel=this.symbolLevel,e.meshData=this.meshData,e.minZoom=this.minZoom,e.maxZoom=this.maxZoom,e}setMeshDataFromBuffers(e,t,s){const i=new se;for(const s in t){const r=t[s].stride,n=t[s].data,o=[],a=(0,L.Y8)(r);for(let t=0;t<r*e.vertexCount/a;++t)o[t]=n[t+r*e.vertexFrom/a];i.vertexData.set(s,o)}i.indexData.length=0;for(let t=0;t<e.indexCount;++t)i.indexData[t]=s[t+e.indexFrom]-e.vertexFrom;i.vertexCount=e.vertexCount,this.meshData=i}readMeshDataFromBuffers(e,t){this.meshData?this.meshData.clear():this.meshData=new se;for(const t in e){const s=e[t].stride,i=e[t].data,r=[],n=(0,L.Y8)(s);for(let e=0;e<s*this.vertexCount/n;++e)r[e]=i[e+s*this.vertexFrom/n];this.meshData.vertexData.set(t,r)}this.meshData.indexData.length=0;for(let e=0;e<this.indexCount;++e)this.meshData.indexData[e]=t[e+this.indexFrom]-this.vertexFrom;this.meshData.vertexCount=this.vertexCount}writeMeshDataToBuffers(e,t,s,i){for(const s in t){const i=t[s].stride,r=this.meshData.vertexData.get(s),n=t[s].data,o=(0,L.Y8)(i);for(let t=0;t<i*this.meshData.vertexCount/o;++t)n[t+i*e/o]=r[t]}for(let t=0;t<this.meshData.indexData.length;++t)i[t+s]=this.meshData.indexData[t]+e;this.vertexFrom=e,this.vertexCount=this.meshData.vertexCount,this.indexFrom=s,this.indexCount=this.meshData.indexData.length}static writeAllMeshDataToBuffers(e,t,s){let i=0,r=0;for(const n of e)n.writeMeshDataToBuffers(i,t,r,s),i+=n.vertexCount,r+=n.indexCount}_computeSortKey(){this._sortKey=(31&this.symbolLevel)<<12|(127&this.zOrder)<<4|7&this.geometryType}serialize(e){return e.push(this.geometryType),e.push(this.materialKey),e.push(this.vertexFrom),e.push(this.vertexCount),e.push(this.indexFrom),e.push(this.indexCount),e.push(this.minZoom),e.push(this.maxZoom),e}static deserialize(e,t){const s=e.readInt32(),i=e.readInt32(),r=new ie(t.id,s,i);return r.vertexFrom=e.readInt32(),r.vertexCount=e.readInt32(),r.indexFrom=e.readInt32(),r.indexCount=e.readInt32(),r.minZoom=e.readInt32(),r.maxZoom=e.readInt32(),r}}const re=ie;function ne(e,t){if(null!==t){e.push(t.length);for(const s of t)s.serialize(e);return e}e.push(0)}class oe{constructor(e){this.insertAfter=null,this.id=e,this.displayRecords=[]}copy(){const e=new oe(this.id);return e.set(this),e}clone(){const e=new oe(this.id);return e.displayRecords=this.displayRecords.map((e=>e.clone())),e.insertAfter=this.insertAfter,e}set(e){this.id=e.id,this.displayRecords=e.displayRecords,this.insertAfter=e.insertAfter}serialize(e){return e.push(this.id),ne(e,this.displayRecords),e}static deserialize(e){const t=e.readInt32(),s=new oe(t),i={id:t};return s.displayRecords=function(e,t,s){const i=e.readInt32(),r=new Array(i);for(let i=0;i<r.length;i++)r[i]=t.deserialize(e,s);return r}(e,re,i),s}}const ae=oe;class le{constructor(){}get displayObjectRegistry(){if(!this._displayObjectRegistry){this._displayObjectRegistry=new Map;for(const e of this.displayObjects)this._displayObjectRegistry.set(e.id,e)}return this._displayObjectRegistry}get displayList(){return this._displayList}computeDisplayList(){this._displayList=new te;for(const e of this.displayObjects)for(const t of e.displayRecords)this._displayList.addToList(t)}clone(){const e=new le;return this.displayObjects&&(e.displayObjects=this.displayObjects.map((e=>e.clone()))),e}serialize(e){return ne(e,this.displayObjects),e}_deserializeObjects(e){const t=e.readInt32(),s=new Array(t),i=new Map;for(let t=0;t<s.length;++t){const r=ae.deserialize(e);s[t]=r,i.set(r.id,r)}this.displayObjects=s,this._displayList=null,this._displayObjectRegistry=i}static deserialize(e){const t=new le;return t._deserializeObjects(e),t}}const de=le;var he=s(13798);class ce{constructor(e,t){this.data=e,this.stride=t}static decode(e){const t=(0,L.e2)(e.data,e.stride),s=e.stride;return new ce(t,s)}static fromVertexVector(e){const t=(0,L.e2)(e.data.buffer(),e.stride),s=e.stride;return new ce(t,s)}}class ue{constructor(e,t,s){this.geometryType=e,this.indexBuffer=new Uint32Array(t),this.namedBuffers=s}static decode(e){const t=e.geometryType,s=e.indexBuffer,i={};for(const t in e.namedBuffers)i[t]=ce.decode(e.namedBuffers[t]);return new ue(t,s,i)}static fromVertexData(e,t){const s=e.indices,i=(0,L.e2)(e.vertices,e.stride),r=e.stride,n={geometry:new ce(i,r)};return new ue(t,s,n)}static fromVertexVectors(e){const t=e.geometryType,s=e.indexVector.buffer(),i={};for(const t in e.namedVectors)i[t]=ce.fromVertexVector(e.namedVectors[t]);return new ue(t,s,i)}}var fe=s(67894);class pe{constructor(e,t){this.data=e,this.stride=t}get vertexCount(){const e=this.stride/4,t=this.data.length/e;return t!==(0|t)&&console.debug("Corrupted stride"),t}transfer(e,t){const s=this.data.buffer();e.vertexCount=this.vertexCount,e.data=s,e.stride=this.stride,t.push(s)}}class me{constructor(e,t,s=!1){this.geometryType=e,this.indexVector=new fe.Z(Uint32Array,6*t),this.namedVectors={};const i=(0,L.$_)(e,s);for(const e in i){const s=i[e];let r;switch(s%4){case 0:case 2:r=new fe.Z(Uint32Array,s*t);break;case 1:case 3:r=new fe.Z(Uint8Array,s*t)}this.namedVectors[e]=new pe(r,s)}}get(e){return this.namedVectors[e].data}getVector(e){return this.namedVectors[e]}transfer(e,t){const s=this.indexVector.buffer(),i={};t.push(s);for(const e in this.namedVectors){const s=this.namedVectors[e];i[e]={},s.transfer(i[e],t)}e.geometryType=this.geometryType,e.indexBuffer=s,e.namedBuffers=i,this.destroy()}intoBuffers(){const e=ue.fromVertexVectors(this);return this.destroy(),e}destroy(){this.indexVector=null,this.namedVectors=null}}const ye=new K,ge=new K;function _e(e,t){const s={};for(const i in e){const r={data:(0,L.C$)(t,e[i]),stride:e[i]};s[i]=r}return s}class xe{constructor(){this.tileDisplayData=null,this.tileBufferData=null}reshuffle(){ye.reset();const e=function(e){const t=[[],[],[],[],[]],s=e;for(const e of s)for(const s of e.displayRecords)t[s.geometryType].push(s);return t}(this.tileDisplayData.displayObjects);for(const t of e)for(const e of t)e&&ye.needMore(e.geometryType,e.meshData?e.meshData.vertexCount:e.vertexCount,e.meshData?e.meshData.indexData.length:e.indexCount);const t=e.length,s=new q;for(let e=0;e<t;++e){s.geometries[e].indexBuffer=new Uint32Array(Math.round(1.5*ye.indicesFor(e)));const t=[];for(const s in this.tileBufferData.geometries[e].vertexBuffer)t.push(this.tileBufferData.geometries[e].vertexBuffer[s].stride);const i=xe._computeVertexAlignment(t),r=Math.round(1.5*ye.verticesFor(e)),n=xe._align(r,i);for(const t in this.tileBufferData.geometries[e].vertexBuffer){const i=this.tileBufferData.geometries[e].vertexBuffer[t].stride;s.geometries[e].vertexBuffer[t]={stride:i,data:(0,L.C$)(n,i)}}}ge.reset(),this.tileDisplayData.displayList.clear();for(let i=0;i<t;++i){const t=e[i];for(const e of t){if(e.meshData)e.writeMeshDataToBuffers(ge.verticesFor(i),s.geometries[i].vertexBuffer,ge.indicesFor(i),s.geometries[i].indexBuffer),e.meshData=null;else{const t=this.tileBufferData.geometries[i].vertexBuffer,r=this.tileBufferData.geometries[i].indexBuffer,n=s.geometries[i].vertexBuffer,o=s.geometries[i].indexBuffer,a=ge.verticesFor(i),l=ge.indicesFor(i);(0,L.wO)(a,l,n,o,e,t,r),e.vertexFrom=a,e.indexFrom=l}ge.needMore(i,e.vertexCount,e.indexCount)}}for(const e of this.tileDisplayData.displayObjects)this.tileDisplayData.displayList.addToList(e.displayRecords);this.tileBufferData=s}getStrides(){const e=[];for(let t=0;t<this.tileBufferData.geometries.length;++t){const s=this.tileBufferData.geometries[t];e[t]={};for(const i in s.vertexBuffer)e[t][i]=s.vertexBuffer[i].stride}return e}clone(){const e=new xe;return e.tileBufferData=this.tileBufferData.clone(),e.tileDisplayData=this.tileDisplayData.clone(),e}_guessSize(){const{displayObjects:e}=this.tileDisplayData,t=Math.min(e.length,4);let s=0;for(let i=0;i<t;i++)s=Math.max(s,e[i].displayRecords.length);return 2*(12*e.length+e.length*s*40)}serialize(){const e=this.tileBufferData.serialize(),t=this.tileBufferData.getBuffers(),s=this.tileDisplayData.serialize(new fe.Z(Int32Array,this._guessSize())).buffer();return t.push(s),{result:{displayData:s,bufferData:e},transferList:t}}static fromVertexData(e,t){const s={},i=new Map;for(const e of t)i.set(e.id,e);return(0,L.Z_)((t=>{const r=e.data[t];if((0,a.pC)(r)){const e=he.$.from(r.records).getCursor();for(;e.next();){const s=e.id,r=e.materialKey,n=e.indexFrom,o=e.indexCount,a=e.vertexFrom,l=e.vertexCount,d=i.get(s),h=new re(s,t,r);h.indexFrom=n,h.indexCount=o,h.vertexFrom=a,h.vertexCount=l,d.displayRecords.push(h)}s[t]=ue.fromVertexData(r,t)}else s[t]=new me(t,0).intoBuffers()})),xe.fromMeshData({displayObjects:t,vertexBuffersMap:s})}static fromMeshData(e){const t=new xe,s=new de,i=new q;s.displayObjects=e.displayObjects;for(const t in e.vertexBuffersMap){const s=e.vertexBuffersMap[t];i.geometries[t].indexBuffer=s.indexBuffer,i.geometries[t].vertexBuffer=s.namedBuffers}return t.tileDisplayData=s,t.tileBufferData=i,t}static bind(e,t){const s=new xe;return s.tileDisplayData=e,s.tileBufferData=t,s}static create(e,t){const s=new xe;s.tileDisplayData=new de,s.tileDisplayData.displayObjects=e;const i=[0,0,0,0,0],r=[0,0,0,0,0],n=[[],[],[],[],[]];for(const t of e)for(const e of t.displayRecords)n[e.geometryType].push(e),i[e.geometryType]+=e.meshData.vertexCount,r[e.geometryType]+=e.meshData.indexData.length;const o=new q,a=function(e){return[e.fill||{},e.line||{},e.icon||{},e.text||{},e.label||{}]}(t);for(let e=0;e<5;e++){const t=new Uint32Array(r[e]),s=_e(a[e],i[e]);re.writeAllMeshDataToBuffers(n[e],s,t),o.geometries[e]={indexBuffer:t,vertexBuffer:s}}return s.tileBufferData=o,s}static _align(e,t){const s=e%t;return 0===s?e:e+(t-s)}static _computeVertexAlignment(e){let t=!1,s=!1;for(const i of e)i%4==2?t=!0:i%4!=0&&(s=!0);return s?4:t?2:1}}var ve=s(5746),be=s(47345),we=s(54628),De=s(48422),Te=s(27773),Ce=s(78724),Be=s(93095),Fe=s(12166),Ie=s(96759),Re=s(92612),Se=s(48117);class ze extends Se.i{constructor(e,t){super(e,t,null)}static from(e){const t=Re.s.createInstance(),s=[],i=e.filter((e=>!!e.geometry));for(const e of i){const t=(0,y.Ji)(e.geometry);(0,Ie.E7)(s,[e],t,!1,!1,"uid")}return new ze(t,s)}get geometryType(){const e=this._current;return e?e.geometryType:null}get insertAfter(){return this._current.insertAfter}readGraphic(){return this._current}getCursor(){return this.copy()}copy(){const e=new ze(this.instance,this._features);return this.copyInto(e),e}}var Le=s(76109),Me=s(89462),Ae=s(67490),Ve=s(67775),Ue=s(2374),ke=s(10118),Oe=s(40955),Ge=s(70608),Pe=s(7452),Ze=s(58003),je=s(82960);const Ee=new Ze.Z,Ke=new Ze.Z,We="esriGeometryPolyline";function qe(e){e.coords.length=0,e.lengths.length=0}class He{constructor(){this.bounds=(0,p.Ue)(),this.graphic=null,this.size=[0,0,0,0]}static acquire(e=null,t,s,i,r,n){let o;return 0===He._pool.length?o=new He:(o=He._pool.pop(),this._set.delete(o)),o.acquire(e,t,s,i,r,n),o}static release(e){e&&!this._set.has(e)&&(e.release(),this._pool.push(e),this._set.add(e))}static getCentroidQuantized(e,t){if((0,y.oU)(e.geometry)){const s=e.symbol;if((0,a.Wi)(s))return null;if((0,je.yA)(s.type)||(0,je.ab)(s.type)){const s=(0,Ge.tO)(e.geometry);return(0,Pe.RF)(t,{},{x:s[0],y:s[1]},!1,!1)}}return null}acquire(e=null,t,s,i,r,n){e&&this.set(e,t,s,i,r,n)}release(){this.graphic=null,this.symbolResource=null,this.geometry=null}get symbol(){return this.symbolResource.symbol}set(e,t,s,i,r,n){this.graphic=e,this.geometry=s,this.symbolResource=t,this.resolution=i,this.updateBounds(i,r,n)}updateBounds(e,t,s){(0,je.zX)(this.bounds,this.size,this.symbolResource,this.geometry,e,t,s)}getGeometryQuantized(e,t){const s=this.geometry;if((0,y.oU)(s)){const t=s.rings;if(1===t.length&&2===t[0].length)return(0,Pe.ym)(e,{paths:[[t[0][0],t[0][1]]]})}else{if((0,y.l9)(s))return qe(Ee),qe(Ke),(0,Ie.u0)(Ee,s),(0,Ie.zj)(Ke,Ee,s.hasZ,s.hasM,We,e.scale[0]),(0,Ie.Nh)(Ee,Ke,s.hasZ,s.hasM,We,e),(0,Ie.J6)(Ee,s.hasZ,s.hasM);if((0,y.aW)(s)){const i=.5*this.resolution*this.size[0],r=s.points.filter((e=>(0,p.Zm)(t,e,i)));return 0===r.length?{points:r}:(0,Pe.ym)(e,{points:r})}}return(0,Pe.ym)(e,this.geometry)}}He._pool=[],He._set=new Set;const Ne=He,Xe={minX:0,minY:0,maxX:0,maxY:0},Ye=(0,p.Ue)(),Je=1e-5;function Qe(e,t,s,i,r){return Xe.minX=t,Xe.minY=s,Xe.maxX=i,Xe.maxY=r,e.search(Xe)}var $e=s(50194);const et=e=>{let t=class extends((0,$e.I)(e)){constructor(){super(...arguments),this.graphics=null,this.renderer=null}};return(0,i._)([(0,h.Cb)()],t.prototype,"graphics",void 0),(0,i._)([(0,h.Cb)()],t.prototype,"renderer",void 0),(0,i._)([(0,h.Cb)()],t.prototype,"updating",void 0),(0,i._)([(0,h.Cb)()],t.prototype,"view",void 0),t=(0,i._)([(0,c.j)("esri.views.layers.GraphicsView")],t),t};var tt=s(81599);function st(e,t,s){if(s.has(e))return s.get(e);const i={tile:t,addedOrModified:[],removed:[]};return s.set(e,i),i}let it=class extends(et((0,n.p)(r.Z))){constructor(e){super(e),this._storage=new Fe.O,this._displayIds=new Map,this._controller=new AbortController,this._tiles=new Map,this._graphicStoreUpdate=!1,this._graphicsSet=new Set,this._matcher=Promise.resolve(null),this._tileUpdateSet=new Set,this._tilesToUpdate=new Map,this._graphicIdToAbortController=new Map,this._attached=!1,this._highlightIds=new Map,this._updatingGraphicsTimer=null,this._hashToExpandedSymbol=new Map,this._hashTpExpandedSymbolPromise=new Map,this._processing=!1,this._needsProcessing=!1,this._pendingUpdate={added:new Set,updated:new Set,removed:new Set},this.lastUpdateId=-1,this.updateRequested=!1,this.graphicUpdateHandler=this.graphicUpdateHandler.bind(this)}_createMatcher(e,t){if(e){const s=(0,Ce.MD)({indexCount:0,fields:{}},"feature",e);this._matcher=(0,Te.fL)(s,t,null)}}_createDisplayId(e){return this._displayIds.has(e)||this._displayIds.set(e,this._storage.createDisplayId()),this._displayIds.get(e)}initialize(){this._tileStore=new Le.Z(this.view.featuresTilingScheme),this._attributeStore=new Be.ZP({type:"local",initialize:e=>Promise.resolve(this.container.attributeView.initialize(e)),update:e=>this.container.attributeView.requestUpdate(e),render:()=>this.container.requestRender()},(0,tt.Z)()),this._graphicStore=new class{constructor(e,t,s,i,r,n){this._graphics=i,this._onAdd=r,this._onRemove=n,this._index=(0,Ae.r)(9,(0,o.Z)("csp-restrictions")?e=>({minX:e.bounds[0],minY:e.bounds[1],maxX:e.bounds[2],maxY:e.bounds[3]}):[".bounds[0]",".bounds[1]",".bounds[2]",".bounds[3]"]),this._itemByGraphic=new Map,this._currentLevel=-1/0,this._tileInfoView=e,this._uidFieldName=s;const a=e.getClosestInfoForScale(t);a&&(this._currentLevel=a.level,this._resolution=this._tileInfoView.getTileResolution(a.level));const l=e.spatialReference;this._metersPerUnit=(0,v.JY)(l)?(0,Me.Z7)(e.spatialReference):1}hitTest(e,t,s,i,r){e=(0,ke.or)(e,this._tileInfoView.spatialReference);const n=.5*i*s;Ye[0]=e-n,Ye[1]=t-n,Ye[2]=e+n,Ye[3]=t+n;const o=.5*i*(s+je.y1),a=Qe(this._index,e-o,t-o,e+o,t+o);if(!a||0===a.length)return[];const l={x:e,y:t},h=[];let c;for(const s of a)if(s.graphic.visible)switch((0,y.Ji)(s.geometry)){case"esriGeometryPoint":{const e=s.symbol;if(!e)continue;const t=s.geometry,{x:n,y:o}=t,a=i*this._metersPerUnit;let d;switch(e.type){case"esriTS":d=(0,je.Zw)(n,o,e,s.size,i,r);break;case"expanded-cim":d=(0,je.oD)(n,o,e,i,a,r);break;case"esriSMS":case"esriPMS":d=(0,je.Il)(n,o,e,i,a,r)}(0,Ve.CI)(d,l)&&h.push(s)}break;case"esriGeometryPolyline":{const r=s.symbol;let n=0;if("expanded-cim"===r.type){const e=r.layers;if(!e||0===e.length)continue;const t=e.findIndex((e=>"line"===e.type));if(-1===t)continue;const s=e[t];n=(0,Oe.hf)(s.width,null,null)}else{const e=r.layers;if(!e||0===e.length)continue;n=e[0].width}c=1.5*i*window.devicePixelRatio*(0,d.F2)(n),(0,je.nl)(s.geometry,e,t,c)&&h.push(s)}break;case"esriGeometryEnvelope":{const e=s.geometry,t=(0,p.al)(e.xmin,e.ymin,e.xmax,e.ymax);(0,p.kK)(t,Ye)&&h.push(s);break}case"esriGeometryPolygon":{if((0,Ve.CI)(s.geometry,l)){h.push(s);break}const e=(0,Ue._w)(s.geometry);if(Math.abs(e.ymax-e.ymin)<5*i||Math.abs(e.xmax-e.xmin)<5*i){const t=(0,p.al)(e.xmin,e.ymin,e.xmax,e.ymax);(0,p.kK)(t,Ye)&&h.push(s)}break}case"esriGeometryMultipoint":{const e=s.symbol;if(!e)continue;const t=s.geometry.points;let n;for(let o=0;o<t.length;o++)if(n="esriTS"===e.type?(0,je.Zw)(t[o][0],t[o][1],e,s.size,i,r):(0,je.Il)(t[o][0],t[o][1],e,i,i*this._metersPerUnit,r),(0,Ve.CI)(n,l)){h.push(s);break}break}}return h.sort(((e,t)=>{const s=(0,je.eT)(e.graphic),i=(0,je.eT)(t.graphic);return s===i?t.zorder-e.zorder:s-i})),h.map((e=>e.graphic))}getGraphicsData(e,t,s){const i=this._searchForItems(t);if(0===i.length||0===s.length)return[];i.sort(((e,t)=>e.zorder-t.zorder)),i[0].insertAfter=-1;for(let e=1;e<i.length;e++)i[e].insertAfter=i[e-1].graphic.uid;i.sort(((e,t)=>e.graphic.uid-t.graphic.uid)),s.sort(((e,t)=>e.uid-t.uid));let r,n=0,o=0;const a=[],l={originPosition:"upperLeft",scale:[t.resolution,t.resolution],translate:[t.bounds[0],t.bounds[3]]};for(const d of s){for(o=-2;n<i.length;)if(r=i[n],n++,d.uid===r.graphic.uid){o=r.insertAfter;break}if(!r.geometry||-2===o)continue;const s=r.getGeometryQuantized(l,t.bounds),h={...r.graphic.attributes};h[this._uidFieldName]=d.uid,null==r.groupId&&(r.groupId=e.createTemplateGroup(r.symbol,null)),a.push({centroid:Ne.getCentroidQuantized(r,l),geometry:s,attributes:h,symbol:r.symbol,groupId:r.groupId,insertAfter:o,zorder:r.zorder})}return a.sort(((e,t)=>e.zorder-t.zorder)),a}queryTileData(e,t){const{bounds:s,resolution:i}=t,r=this._searchForItems(t),n=[];return 0===r.length||this._createTileGraphics(n,e,r,{originPosition:"upperLeft",scale:[i,i],translate:[s[0],s[3]]},t.bounds),n}has(e){return this._itemByGraphic.has(e)}getBounds(e){return this._itemByGraphic.has(e)?this._itemByGraphic.get(e).bounds:null}addOrModify(e,t,s){if(!e)return;this.has(e)&&this.remove(e),this._onAdd(e);const i=Ne.acquire(e,t,s,this._resolution,this._resolution*this._metersPerUnit,this._tileInfoView.spatialReference);return this._itemByGraphic.set(e,i),s&&this._index.insert(i),i.bounds}remove(e){if(!this._itemByGraphic.has(e))return;this._onRemove(e);const t=this._itemByGraphic.get(e);this._index.remove(t),this._itemByGraphic.delete(e)}updateZ(){const e=this._graphics.items;let t,s;for(let i=0;i<e.length;i++)s=e[i],t=this._itemByGraphic.get(s),t&&(t.zorder=i)}update(e,t,s){const i=this._itemByGraphic.get(e);i.groupId=null;const r=(0,p.d9)(i.bounds);return i.size[0]=i.size[1]=0,this._index.remove(i),i.set(e,t,s,this._resolution,this._resolution*this._metersPerUnit,this._tileInfoView.spatialReference),s&&this._index.insert(i),{oldBounds:r,newBounds:i.bounds}}updateLevel(e){if(this._currentLevel===e)return;this._currentLevel=e;const t=this._tileInfoView,s=t.getTileResolution(e);this._resolution=s,this._index.clear();const i=this._itemByGraphic,r=[];for(const[e,s]of i)s.updateBounds(this._resolution,this._resolution*this._metersPerUnit,t.spatialReference),s.geometry&&r.push(s);this._index.load(r)}clear(){this._itemByGraphic.clear(),this._index.clear()}_createTileGraphics(e,t,s,i,r){const n=this._uidFieldName;let o,a,l,d;s.sort(((e,t)=>e.zorder-t.zorder));for(let h=0;h<s.length;h++){l=s[h],o=l.graphic,a=l.getGeometryQuantized(i,r),d=0===h?-1:s[h-1].graphic.uid;const c={...l.graphic.attributes};c[n]=o.uid,null==l.groupId&&(l.groupId=t.createTemplateGroup(l.symbol,null)),e.push({centroid:Ne.getCentroidQuantized(l,i),geometry:a,attributes:c,symbol:l.symbol,groupId:l.groupId,insertAfter:d,zorder:l.zorder})}}_searchForItems(e){const t=this._tileInfoView.spatialReference,s=e.bounds;if(t.isWrappable){const[i,r]=(0,x.uS)(t),n=Math.abs(s[2]-r)<Je,o=Math.abs(s[0]-i)<Je;if((!n||!o)&&(n||o)){const t=e.resolution;let o;o=(0,p.Ue)(n?[i,s[1],i+t*je.y1,s[3]]:[r-t*je.y1,s[1],r,s[3]]);const a=Qe(this._index,s[0],s[1],s[2],s[3]),l=Qe(this._index,o[0],o[1],o[2],o[3]);return[...new Set([...a,...l])]}}return Qe(this._index,s[0],s[1],s[2],s[3])}}(this.view.featuresTilingScheme,this.view.state.scale,this.uid,this.graphics,(e=>{this._createDisplayId(e.uid),this._setFilterState(e.uid,e.visible)}),(e=>{const t=this._displayIds.get(e.uid);this._displayIds.delete(e.uid),this._storage.releaseDisplayId(t)}));const e=new we.W(this.container.getMaterialItems.bind(this.container),this.view.featuresTilingScheme.tileInfo);this._createMatcher(this.renderer,e),this._meshFactory=new be.j(null,this.uid,e),this._templateStore=e,this.watch("renderer",(t=>{this._createMatcher(t,e);for(const e of this.graphics)this._pendingUpdate.updated.add(e);this.requestUpdate()})),this._tileStore.on("update",this._onTileUpdate.bind(this)),this.container.on("attach",(()=>{this.graphics.items.length>0&&this._graphicsChangeHandler({target:this.graphics,added:this.graphics.items,removed:[],moved:[]}),this.handles.add(this.graphics.on("change",(e=>this._graphicsChangeHandler(e))),"graphics"),this._attached=!0,this.notifyChange("updating")}))}destroy(){this._updatingGraphicsTimer&&(clearTimeout(this._updatingGraphicsTimer),this._updatingGraphicsTimer=null,this.notifyChange("updating")),this._controller.abort(),this.container.destroy(),this._set("graphics",null),this._graphicStore.clear(),this._tileStore.destroy(),this._attributeStore=null,this._hashToExpandedSymbol.clear(),this.view=null,this.renderer=null}get updating(){return!this._attached||null!==this._updatingGraphicsTimer||this._tileUpdateSet.size>0||this._tilesToUpdate.size>0}hitTest(e,t){if(!this.view||!this.view.position)return Promise.resolve(null);const s=this.view.toMap((0,d.vW)(e,t));return this.searchFeatures(s).then((e=>e&&e.length?e[0]:null))}async searchFeatures(e,t=2){return this._graphicStore.hitTest(e.x,e.y,t,this.view.state.resolution,this.view.state.rotation)}update(e){(0,l.k_)(this._controller.signal);const t=e.state,s=this.view.featuresTilingScheme.getClosestInfoForScale(t.scale).level;if(this._graphicStore.updateLevel(s),this._tileStore.setViewState(t),this._graphicStoreUpdate=!0,this.updateRequested=!1,this._pendingUpdate.updated.size>0){if(!this._processing)return void this._updateGraphics();this._needsProcessing=!0}}viewChange(){this.requestUpdate()}requestUpdate(){this.updateRequested||(this.updateRequested=!0,this.requestUpdateCallback())}processUpdate(e){this.updateRequested&&(this.updateRequested=!1,this.update(e))}graphicUpdateHandler(e){const{graphic:t,property:s,newValue:i}=e;switch(s){case"attributes":break;case"geometry":case"symbol":this._pendingUpdate.updated.add(t),this.requestUpdate();break;case"visible":this._setFilterState(t.uid,i),this._attributeStore.sendUpdates()}}addHighlight(e){for(const t of e)if(this._highlightIds.has(t)){const e=this._highlightIds.get(t);this._highlightIds.set(t,e+1)}else this._highlightIds.set(t,1);this._updateHighlight()}removeHighlight(e){for(const t of e)if(this._highlightIds.has(t)){const e=this._highlightIds.get(t)-1;0===e?this._highlightIds.delete(t):this._highlightIds.set(t,e)}this._updateHighlight()}_updateHighlight(){const e=Array.from(this._highlightIds.keys()),t=e.map((e=>this._displayIds.get(e)));this._attributeStore.setHighlight(e,t)}_getIntersectingTiles(e){const t=this._graphicStore.getBounds(e);if(!t||0===(0,p.bf)(t)||0===(0,p.Cb)(t))return[];const s=(0,je.Zu)(t,this.view.spatialReference);return(0,a.pC)(s)?[...this._tileStore.boundsIntersections(s[0]),...this._tileStore.boundsIntersections(s[1])]:this._tileStore.boundsIntersections(t)}async _updateTile(e){(0,l.k_)(this._controller.signal);const t=e.tile,s=this._getGraphicsData(this._templateStore,t,e.addedOrModified),i=await this._processGraphics(t,s);return(0,l.k_)(this._controller.signal),this._patchTile(t.key,{type:"update",addOrUpdate:i,remove:e.removed,end:!0,clear:!1}),i}_patchTile(e,t){if(!this._tiles.has(e))return;const s=this._tiles.get(e);this.container.onTileData(s,t),this.container.requestRender()}_graphicsChangeHandler(e){const t=this._pendingUpdate;for(const s of e.added)t.added.add(s);for(const s of e.moved)t.updated.add(s);for(const s of e.removed)this._pendingUpdate.added.has(s)?t.added.delete(s):t.removed.add(s);this._processing?this._needsProcessing=!0:this._updateGraphics()}_getGraphicsToUpdate(){const e={added:[],removed:[],updated:[]};if(!this.graphics)return e;const t=this._pendingUpdate;for(const s of this.graphics.items)t.added.has(s)?e.added.push(s):t.updated.has(s)&&e.updated.push(s);for(const s of t.removed)this._graphicStore.has(s)&&e.removed.push(s);return t.added.clear(),t.removed.clear(),t.updated.clear(),e}async _updateGraphics(){this._processing=!0;const{added:e,removed:t,updated:s}=this._getGraphicsToUpdate(),i=this._tilesToUpdate;let r;try{if(!this._graphicStoreUpdate){const e=this.view.state,t=this.view.featuresTilingScheme.getClosestInfoForScale(e.scale).level;this._graphicStore.updateLevel(t),this._tileStore.setViewState(e)}const n=[],o=new Array(e.length+t.length);for(let e=0;e<s.length;e++){const t=s[e],a=this._getIntersectingTiles(t);for(const e of a)r=e.id,st(r,e,i).removed.push(this._displayIds.get(t.uid));n.push(this._updateGraphic(t,null)),o[e]=t}const a=s.length;for(let t=0;t<e.length;t++){const s=e[t];o[a+t]=s,this._graphicsSet.add(s),n.push(this._addGraphic(s))}for(const e of t){this._abortProcessingGraphic(e.uid);const t=this._getIntersectingTiles(e);for(const s of t)r=s.id,st(r,s,i).removed.push(this._displayIds.get(e.uid));this._graphicsSet.delete(e),this._graphicStore.remove(e)}let l;this._flipUpdatingGraphics(),await Promise.all(n);for(let e=0;e<o.length;e++){l=o[e];const t=this._getIntersectingTiles(l);for(const e of t)r=e.id,st(r,e,i).addedOrModified.push(l)}this._graphicStore.updateZ();const d=[];for(const[e,t]of i)d.push(this._updateTile(t));await Promise.all(d)}catch(e){(0,l.D_)(e)}for(const e of t)try{const t=await this._getSymbolForGraphic(e,{});t&&this._hashToExpandedSymbol.delete(t.hash())}catch(e){(0,l.D_)(e)}i.clear(),this.notifyChange("updating"),this._processing=!1,this._needsProcessing&&(this._needsProcessing=!1,this._updateGraphics())}_getArcadeInfo(e){const t=(e.attributes?Object.keys(e.attributes):[]).map((t=>({name:t,alias:t,type:"string"==typeof e.attributes[t]?"esriFieldTypeString":"esriFieldTypeDouble"})));return(0,a.Wi)(e.geometry)?null:{geometryType:(0,y.Ji)(e.geometry),spatialReference:f.Z.fromJSON(e.geometry.spatialReference),fields:t}}async _getSymbolForGraphic(e,t){return(0,l.k_)(this._controller.signal),(0,a.pC)(e.symbol)?e.symbol:(0,a.pC)(this.renderer)?this.renderer.getSymbolAsync(e,{scale:this.view.scale,abortOptions:t}):this._getNullSymbol(e)}async _getSymbolResources(e,t){if((0,l.k_)(this._controller.signal),!this.container.stage)return null;const s=await this._getSymbolForGraphic(e,t),i=s.hash();let r=this._hashToExpandedSymbol.get(i);if(!r){let n=this._hashTpExpandedSymbolPromise.get(i);if(n)r=await n,(0,l.k_)(this._controller.signal);else{const o=this._getArcadeInfo(e),a=(0,Ce.PY)(s);n=(0,R.B)(a,o,t),this._hashTpExpandedSymbolPromise.set(i,n);try{r=await n,this._hashTpExpandedSymbolPromise.delete(i),this._hashToExpandedSymbol.set(i,r)}catch(e){this._hashTpExpandedSymbolPromise.delete(i),(0,l.k_)(e)}}}if("esriTS"===r.type){const e=[],[t]=(0,De.E)(r.text);for(let s=0;s<t.length;s++)e.push(t.charCodeAt(s));const s={symbol:r,id:0,glyphIds:e},[{mosaicItem:i}]=await this.container.getMaterialItems([s]);return{symbol:r,mosaicItem:i}}return{symbol:r,mosaicItem:null}}async _projectAndNormalizeGeometry(e,t){if((0,l.k_)(this._controller.signal),(0,a.Wi)(e.geometry)||"mesh"===e.geometry.type)return null;let s=e.geometry;if((0,y.oU)(s)){const e=s.rings;s.rings=e}else if((0,y.l9)(s)){const e=s.paths;s.paths=e}else if((0,y.YX)(s)){const i=await this._getSymbolForGraphic(e,t);(0,l.k_)(this._controller.signal),s=(0,je.yA)(i.type)||(0,je.ab)(i.type)?s.center:u.Z.fromExtent(s)}await(0,I._W)(s.spatialReference,this.view.spatialReference);const i=function(e){if(!e)return null;if("mesh"===e.type)return e.toJSON();let t=null;const s=e.spatialReference,i=(0,v.C5)(s);if(!i)return e.toJSON();const r=s.isWebMercator?102100:4326,n=x.UZ[r].maxX,o=x.UZ[r].minX,a=x.UZ[r].plus180Line,l=x.UZ[r].minus180Line;let d;const h=e.toJSON();if((0,y.wp)(h))d=w(h,n,o);else if((0,y.aW)(h))h.points=h.points.map((e=>w(e,n,o))),d=h;else if((0,y.YX)(h))d=b(h,i);else if((0,y.oU)(h)||(0,y.l9)(h)){const e=F;(0,g.$P)(e,h);const s={xmin:e[0],ymin:e[1],xmax:e[2],ymax:e[3]},i=(0,x.XZ)(s.xmin,o)*(2*n),r=0===i?h:function(e,t){const s=(0,x.x3)(e);for(const e of s)for(const s of e)s[0]+=t;return e}(h,i);s.xmin+=i,s.xmax+=i,(0,_.jQ)(s,a)&&s.xmax!==n||(0,_.jQ)(s,l)&&s.xmin!==o?t=r:d=r}else d=e.toJSON();return null!==t?(new B).cut(t,n):d}(s),r=(0,I.iV)(i,s.spatialReference,this.view.spatialReference);return(0,m.pW)(r),r}_onTileUpdate(e){const t=(0,v.C5)(this.view.spatialReference);if(e.added&&e.added.length>0)for(const s of e.added)this._addNewTile(s,t);if(e.removed&&e.removed.length>0)for(const t of e.removed)this._removeTile(t.key)}async _addGraphic(e){this._abortProcessingGraphic(e.uid),(0,l.k_)(this._controller.signal);const t=(0,l.yi)();this._graphicIdToAbortController.set(e.uid,t);const s={signal:t.signal};try{await this._addOrUpdateGraphic(e,s),(0,l.k_)(this._controller.signal),this._graphicIdToAbortController.delete(e.uid)}catch(t){if(this._graphicIdToAbortController.delete(e.uid),!(0,l.D_)(t))throw t}}async _updateGraphic(e,t){(0,l.k_)(this._controller.signal);const s=this._projectAndNormalizeGeometry(e,t),i=this._getSymbolResources(e,t),[r,n]=await Promise.all([s,i]);(0,l.k_)(this._controller.signal),this._graphicStore.addOrModify(e,n,r)}async _addOrUpdateGraphic(e,t){(0,l.k_)(this._controller.signal);const s=this._projectAndNormalizeGeometry(e,t),i=this._getSymbolResources(e,t);try{const[t,r]=await Promise.all([s,i]);(0,l.k_)(this._controller.signal),this._addProjectedGraphic(e,r,t)}catch(e){if(!(0,l.D_)(e))throw e}}_addProjectedGraphic(e,t,s){this._graphicsSet.has(e)&&this._graphicStore.addOrModify(e,t,s)}_addTile(e){const t=this.view.featuresTilingScheme.getTileBounds((0,p.Ue)(),e),s=new E(e,t);return this._tiles.set(e,s),this.container.addChild(s),s}_addNewTile(e,t){const s=this._addTile(e.key),i=this._graphicStore.queryTileData(this._templateStore,e);if(t){const s=Math.round((t.valid[1]-t.valid[0])/e.resolution);for(const e of i)e.geometry&&((0,y.wp)(e.geometry)||(0,y.aW)(e.geometry))&&this._wrapPoints(e,s)}const r=e.key;this._tileUpdateSet.add(e.key),this.notifyChange("updating"),this._processGraphics(e,i).then((e=>{const t={type:"update",clear:!1,addOrUpdate:e,remove:[],end:!0};s.patch(t),this._tileUpdateSet.delete(r),this.notifyChange("updating")})).catch((e=>{if(this._tileUpdateSet.delete(r),this.notifyChange("updating"),!(0,l.D_)(e))throw e}))}_removeTile(e){if(!this._tiles.has(e))return;const t=this._tiles.get(e);this.container.removeChild(t),t.destroy(),this._tiles.delete(e)}_setFilterState(e,t){const s=this._displayIds.get(e),i=this._attributeStore.getHighlightFlag(e);this._attributeStore.setData(s,0,0,i|(t?z.Zd:0))}_getGraphicsData(e,t,s){const i=(0,v.C5)(this.view.spatialReference),r=this._graphicStore.getGraphicsData(e,t,s);if(i){const e=Math.round((i.valid[1]-i.valid[0])/t.resolution);for(const t of r)t.geometry&&((0,y.wp)(t.geometry)||(0,y.aW)(t.geometry))&&this._wrapPoints(t,e)}return r}_wrapPoints(e,t){const s=e.geometry;(0,y.aW)(s)?this._wrapMultipoint(s,t):this._wrapPoint(e,t)}_wrapMultipoint(e,t){const s=e.points,i=[];let r=0,n=0;for(const[e,o]of s){if(i.push([e+r,o]),r=0,t===je.I_){const s=5*je.y1;e+n<s?(i.push([t,0]),r=-t):e+n>je.I_-s&&(i.push([-t,0]),r=t)}else e+n<-je.y1?(i.push([t,0]),r=-t):e+n>je.I_+je.y1&&(i.push([-t,0]),r=t);n+=e}e.points=i}_wrapPoint(e,t){const s=e.geometry;if(t===je.I_){const i=5*je.y1;s.x<i?e.geometry={points:[[s.x,s.y],[t,0]]}:s.x>je.I_-i&&(e.geometry={points:[[s.x,s.y],[-t,0]]})}else s.x<-je.y1?e.geometry={points:[[s.x,s.y],[t,0]]}:s.x>je.I_+je.y1&&(e.geometry={points:[[s.x,s.y],[-t,0]]})}async _processGraphics(e,t,s){if(!t||!t.length||!this._meshFactory)return null;const i=ze.from(t),r=this._meshFactory,n=await this._matcher;return await r.analyzeGraphics(i,n,null,null,s),this._attributeStore.sendUpdates(),this._processAnalyzedGraphics(e,i)}_processAnalyzedGraphics(e,t){const s=this._meshFactory,i=t.getSize(),r=t.getCursor(),n={features:i,records:i,metrics:0},o=new ve._(e.key.id,n,!1,!1,!1),a=[];for(;r.next();){const t=r.readGraphic();t.insertAfter=-1===t.insertAfter?-1:this._displayIds.get(t.insertAfter),t.displayId=this._displayIds.get(t.attributes[this.uid]);const i=new ae(t.displayId);i.insertAfter=t.insertAfter,a.push(i),s.writeGraphic(o,r,e.level)}const l=e.tileInfoView.tileInfo.isWrappable,d=o.serialize(l);if(1!==d.length)return new xe;const h=d[0].message;return xe.fromVertexData(h,a)}_abortProcessingGraphic(e){this._graphicIdToAbortController.has(e)&&this._graphicIdToAbortController.get(e).abort()}_getNullSymbol(e){const t=e.geometry;return(0,y.l9)(t)?S.mW:(0,y.oU)(t)||(0,y.YX)(t)?S.kD:S.G}_flipUpdatingGraphics(){this._updatingGraphicsTimer&&clearTimeout(this._updatingGraphicsTimer),this._updatingGraphicsTimer=setTimeout((()=>{this._updatingGraphicsTimer=null,this.notifyChange("updating")}),160),this.notifyChange("updating")}};(0,i._)([(0,h.Cb)({constructOnly:!0})],it.prototype,"requestUpdateCallback",void 0),(0,i._)([(0,h.Cb)()],it.prototype,"container",void 0),(0,i._)([(0,h.Cb)({constructOnly:!0})],it.prototype,"graphics",void 0),(0,i._)([(0,h.Cb)()],it.prototype,"updating",null),(0,i._)([(0,h.Cb)()],it.prototype,"view",void 0),(0,i._)([(0,h.Cb)()],it.prototype,"updateRequested",void 0),it=(0,i._)([(0,c.j)("esri.views.2d.layers.support.GraphicsView2D")],it);const rt=it}}]);